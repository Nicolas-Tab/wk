{"version":3,"sources":["meteor://ðŸ’»app/packages/oauth/oauth_server.js","meteor://ðŸ’»app/packages/oauth/pending_credentials.js","meteor://ðŸ’»app/packages/oauth/oauth_common.js"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","bodyParser","OAuth","OAuthTest","RoutePolicy","declare","registeredServices","_requestHandlers","registerService","name","version","urls","handleOauthRequest","Error","concat","serviceName","unregisterService","retrieveCredential","credentialToken","credentialSecret","_retrievePendingCredential","_generateState","loginStyle","redirectUrl","Buffer","from","JSON","stringify","toString","_stateFromQuery","query","string","state","e","Log","warn","parse","_loginStyleFromQuery","style","err","_credentialTokenFromQuery","_isCordovaFromQuery","isCordova","_checkRedirectUrlOrigin","appHost","Meteor","absoluteUrl","appHostReplacedLocalhost","undefined","replaceLocalhost","substr","length","middleware","req","res","next","Promise","asyncApply","requestData","oauthServiceName","service","ensureConfigured","handler","method","body","await","_requestData","_storePendingCredential","stack","message","_endOfLoginResponse","error","WebApp","connectHandlers","use","json","urlencoded","extended","i","url","indexOf","barePath","substring","splitPath","split","ServiceConfiguration","configurations","findOne","ConfigError","isSafe","value","test","_renderOauthResults","only_credential_secret_for_test","writeHead","end","details","token","secret","credentials","_endOfPopupResponseTemplate","Assets","getText","_endOfRedirectResponseTemplate","renderEndOfLoginResponse","options","escape","s","replace","config","setCredentialToken","storagePrefix","_storageTokenPrefix","template","result","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","_Meteor$settings","_Meteor$settings$pack","_Meteor$settings$pack2","settings","packages","oauth","disableCheckRedirectUrlOrigin","OAuthEncryption","Package","usingOAuthEncryption","keyIsLoaded","sealSecret","plaintext","seal","openSecret","maybeSecret","userId","isSealed","open","openSecrets","serviceData","Object","keys","forEach","key","_addValuesToQueryParams","values","arguments","queryParams","URLSearchParams","entries","_ref","set","_fetch","_ref2","headers","_excluded","urlWithParams","URL","searchParams","requestOptions","toUpperCase","fetch","_pendingCredentials","Mongo","Collection","_preventAutopublish","createIndexAsync","unique","_cleanStaleResults","timeCutoff","Date","setMinutes","getMinutes","removeAsync","createdAt","$lt","_cleanupHandle","setInterval","credential","check","String","Match","Maybe","storableError","upsert","pendingCredential","_id","recreateError","plainObject","getOwnPropertyNames","errorDoc","meteorError","_redirectUri","params","absoluteUrlOptions","isAndroid","cordova","android","isServer","Npm","require","rootUrl","process","env","MOBILE_ROOT_URL","ROOT_URL","parsedRootUrl","hostname","host","format","_constructUrl"],"mappings":"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","file":"/packages/oauth.js","sourcesContent":["import bodyParser from 'body-parser';\n\nOAuth = {};\nOAuthTest = {};\n\nRoutePolicy.declare('/_oauth/', 'network');\n\nconst registeredServices = {};\n\n// Internal: Maps from service version to handler function. The\n// 'oauth1' and 'oauth2' packages manipulate this directly to register\n// for callbacks.\nOAuth._requestHandlers = {};\n\n\n/**\n/* Register a handler for an OAuth service. The handler will be called\n/* when we get an incoming http request on /_oauth/{serviceName}. This\n/* handler should use that information to fetch data about the user\n/* logging in.\n/*\n/* @param name {String} e.g. \"google\", \"facebook\"\n/* @param version {Number} OAuth version (1 or 2)\n/* @param urls   For OAuth1 only, specify the service's urls\n/* @param handleOauthRequest {Function(oauthBinding|query)}\n/*   - (For OAuth1 only) oauthBinding {OAuth1Binding} bound to the appropriate provider\n/*   - (For OAuth2 only) query {Object} parameters passed in query string\n/*   - return value is:\n/*     - {serviceData:, (optional options:)} where serviceData should end\n/*       up in the user's services[name] field\n/*     - `null` if the user declined to give permissions\n*/\nOAuth.registerService = (name, version, urls, handleOauthRequest) => {\n  if (registeredServices[name])\n    throw new Error(`Already registered the ${name} OAuth service`);\n\n  registeredServices[name] = {\n    serviceName: name,\n    version,\n    urls,\n    handleOauthRequest,\n  };\n};\n\n// For test cleanup.\nOAuthTest.unregisterService = name => {\n  delete registeredServices[name];\n};\n\n\nOAuth.retrieveCredential = (credentialToken, credentialSecret) =>\n  OAuth._retrievePendingCredential(credentialToken, credentialSecret);\n\n\n// The state parameter is normally generated on the client using\n// `btoa`, but for tests we need a version that runs on the server.\n//\nOAuth._generateState = (loginStyle, credentialToken, redirectUrl) => {\n  return Buffer.from(JSON.stringify({\n    loginStyle: loginStyle,\n    credentialToken: credentialToken,\n    redirectUrl: redirectUrl})).toString('base64');\n};\n\nOAuth._stateFromQuery = query => {\n  let string;\n  try {\n    string = Buffer.from(query.state, 'base64').toString('binary');\n  } catch (e) {\n    Log.warn(`Unable to base64 decode state from OAuth query: ${query.state}`);\n    throw e;\n  }\n\n  try {\n    return JSON.parse(string);\n  } catch (e) {\n    Log.warn(`Unable to parse state from OAuth query: ${string}`);\n    throw e;\n  }\n};\n\nOAuth._loginStyleFromQuery = query => {\n  let style;\n  // For backwards-compatibility for older clients, catch any errors\n  // that result from parsing the state parameter. If we can't parse it,\n  // set login style to popup by default.\n  try {\n    style = OAuth._stateFromQuery(query).loginStyle;\n  } catch (err) {\n    style = \"popup\";\n  }\n  if (style !== \"popup\" && style !== \"redirect\") {\n    throw new Error(`Unrecognized login style: ${style}`);\n  }\n  return style;\n};\n\nOAuth._credentialTokenFromQuery = query => {\n  let state;\n  // For backwards-compatibility for older clients, catch any errors\n  // that result from parsing the state parameter. If we can't parse it,\n  // assume that the state parameter's value is the credential token, as\n  // it used to be for older clients.\n  try {\n    state = OAuth._stateFromQuery(query);\n  } catch (err) {\n    return query.state;\n  }\n  return state.credentialToken;\n};\n\nOAuth._isCordovaFromQuery = query => {\n  try {\n    return !! OAuth._stateFromQuery(query).isCordova;\n  } catch (err) {\n    // For backwards-compatibility for older clients, catch any errors\n    // that result from parsing the state parameter. If we can't parse\n    // it, assume that we are not on Cordova, since older Meteor didn't\n    // do Cordova.\n    return false;\n  }\n};\n\n// Checks if the `redirectUrl` matches the app host.\n// We export this function so that developers can override this\n// behavior to allow apps from external domains to login using the\n// redirect OAuth flow.\nOAuth._checkRedirectUrlOrigin = redirectUrl => {\n  const appHost = Meteor.absoluteUrl();\n  const appHostReplacedLocalhost = Meteor.absoluteUrl(undefined, {\n    replaceLocalhost: true\n  });\n  return (\n    redirectUrl.substr(0, appHost.length) !== appHost &&\n    redirectUrl.substr(0, appHostReplacedLocalhost.length) !== appHostReplacedLocalhost\n  );\n};\n\nconst middleware = async (req, res, next) => {\n  let requestData;\n\n  // Make sure to catch any exceptions because otherwise we'd crash\n  // the runner\n  try {\n    const serviceName = oauthServiceName(req);\n    if (!serviceName) {\n      // not an oauth request. pass to next middleware.\n      next();\n      return;\n    }\n\n    const service = registeredServices[serviceName];\n\n    // Skip everything if there's no service set by the oauth middleware\n    if (!service)\n      throw new Error(`Unexpected OAuth service ${serviceName}`);\n\n    // Make sure we're configured\n    ensureConfigured(serviceName);\n\n    const handler = OAuth._requestHandlers[service.version];\n    if (!handler)\n      throw new Error(`Unexpected OAuth version ${service.version}`);\n\n    if (req.method === 'GET') {\n      requestData = req.query;\n    } else {\n      requestData = req.body;\n    }\n\n    await handler(service, requestData, res);\n  } catch (err) {\n    // if we got thrown an error, save it off, it will get passed to\n    // the appropriate login call (if any) and reported there.\n    //\n    // The other option would be to display it in the popup tab that\n    // is still open at this point, ignoring the 'close' or 'redirect'\n    // we were passed. But then the developer wouldn't be able to\n    // style the error or react to it in any way.\n    if (requestData?.state && err instanceof Error) {\n      try { // catch any exceptions to avoid crashing runner\n        OAuth._storePendingCredential(OAuth._credentialTokenFromQuery(requestData), err);\n      } catch (err) {\n        // Ignore the error and just give up. If we failed to store the\n        // error, then the login will just fail with a generic error.\n        Log.warn(\"Error in OAuth Server while storing pending login result.\\n\" +\n                 err.stack || err.message);\n      }\n    }\n\n    // close the popup. because nobody likes them just hanging\n    // there.  when someone sees this multiple times they might\n    // think to check server logs (we hope?)\n    // Catch errors because any exception here will crash the runner.\n    try {\n      OAuth._endOfLoginResponse(res, {\n        query: requestData,\n        loginStyle: OAuth._loginStyleFromQuery(requestData),\n        error: err\n      });\n    } catch (err) {\n      Log.warn(\"Error generating end of login response\\n\" +\n               (err && (err.stack || err.message)));\n    }\n  }\n};\n\n// Listen to incoming OAuth http requests\nWebApp.connectHandlers.use('/_oauth', bodyParser.json());\nWebApp.connectHandlers.use('/_oauth', bodyParser.urlencoded({ extended: false }));\nWebApp.connectHandlers.use(middleware);\n\nOAuthTest.middleware = middleware;\n\n// Handle /_oauth/* paths and extract the service name.\n//\n// @returns {String|null} e.g. \"facebook\", or null if this isn't an\n// oauth request\nconst oauthServiceName = req => {\n  // req.url will be \"/_oauth/<service name>\" with an optional \"?close\".\n  const i = req.url.indexOf('?');\n  let barePath;\n  if (i === -1)\n    barePath = req.url;\n  else\n    barePath = req.url.substring(0, i);\n  const splitPath = barePath.split('/');\n\n  // Any non-oauth request will continue down the default\n  // middlewares.\n  if (splitPath[1] !== '_oauth')\n    return null;\n\n  // Find service based on url\n  const serviceName = splitPath[2];\n  return serviceName;\n};\n\n// Make sure we're configured\nconst ensureConfigured = serviceName => {\n  if (!ServiceConfiguration.configurations.findOne({service: serviceName})) {\n    throw new ServiceConfiguration.ConfigError();\n  }\n};\n\nconst isSafe = value => {\n  // This matches strings generated by `Random.secret` and\n  // `Random.id`.\n  return typeof value === \"string\" &&\n    /^[a-zA-Z0-9\\-_]+$/.test(value);\n};\n\n// Internal: used by the oauth1 and oauth2 packages\nOAuth._renderOauthResults = (res, query, credentialSecret) => {\n  // For tests, we support the `only_credential_secret_for_test`\n  // parameter, which just returns the credential secret without any\n  // surrounding HTML. (The test needs to be able to easily grab the\n  // secret and use it to log in.)\n  //\n  // XXX only_credential_secret_for_test could be useful for other\n  // things beside tests, like command-line clients. We should give it a\n  // real name and serve the credential secret in JSON.\n\n  if (query.only_credential_secret_for_test) {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.end(credentialSecret, 'utf-8');\n  } else {\n    const details = {\n      query,\n      loginStyle: OAuth._loginStyleFromQuery(query)\n    };\n    if (query.error) {\n      details.error = query.error;\n    } else {\n      const token = OAuth._credentialTokenFromQuery(query);\n      const secret = credentialSecret;\n      if (token && secret &&\n          isSafe(token) && isSafe(secret)) {\n        details.credentials = { token: token, secret: secret};\n      } else {\n        details.error = \"invalid_credential_token_or_secret\";\n      }\n    }\n\n    OAuth._endOfLoginResponse(res, details);\n  }\n};\n\n// This \"template\" (not a real Spacebars template, just an HTML file\n// with some ##PLACEHOLDER##s) communicates the credential secret back\n// to the main window and then closes the popup.\nOAuth._endOfPopupResponseTemplate = Assets.getText(\n  \"end_of_popup_response.html\");\n\nOAuth._endOfRedirectResponseTemplate = Assets.getText(\n  \"end_of_redirect_response.html\");\n\n// Renders the end of login response template into some HTML and JavaScript\n// that closes the popup or redirects at the end of the OAuth flow.\n//\n// options are:\n//   - loginStyle (\"popup\" or \"redirect\")\n//   - setCredentialToken (boolean)\n//   - credentialToken\n//   - credentialSecret\n//   - redirectUrl\n//   - isCordova (boolean)\n//\nconst renderEndOfLoginResponse = options => {\n  // It would be nice to use Blaze here, but it's a little tricky\n  // because our mustaches would be inside a <script> tag, and Blaze\n  // would treat the <script> tag contents as text (e.g. encode '&' as\n  // '&amp;'). So we just do a simple replace.\n\n  const escape = s => {\n    if (s) {\n      return s.replace(/&/g, \"&amp;\").\n        replace(/</g, \"&lt;\").\n        replace(/>/g, \"&gt;\").\n        replace(/\\\"/g, \"&quot;\").\n        replace(/\\'/g, \"&#x27;\").\n        replace(/\\//g, \"&#x2F;\");\n    } else {\n      return s;\n    }\n  };\n\n  // Escape everything just to be safe (we've already checked that some\n  // of this data -- the token and secret -- are safe).\n  const config = {\n    setCredentialToken: !! options.setCredentialToken,\n    credentialToken: escape(options.credentialToken),\n    credentialSecret: escape(options.credentialSecret),\n    storagePrefix: escape(OAuth._storageTokenPrefix),\n    redirectUrl: escape(options.redirectUrl),\n    isCordova: !! options.isCordova\n  };\n\n  let template;\n  if (options.loginStyle === 'popup') {\n    template = OAuth._endOfPopupResponseTemplate;\n  } else if (options.loginStyle === 'redirect') {\n    template = OAuth._endOfRedirectResponseTemplate;\n  } else {\n    throw new Error(`invalid loginStyle: ${options.loginStyle}`);\n  }\n\n  const result = template.replace(/##CONFIG##/, JSON.stringify(config))\n    .replace(\n      /##ROOT_URL_PATH_PREFIX##/, __meteor_runtime_config__.ROOT_URL_PATH_PREFIX\n    );\n\n  return `<!DOCTYPE html>\\n${result}`;\n};\n\n// Writes an HTTP response to the popup window at the end of an OAuth\n// login flow. At this point, if the user has successfully authenticated\n// to the OAuth server and authorized this app, we communicate the\n// credentialToken and credentialSecret to the main window. The main\n// window must provide both these values to the DDP `login` method to\n// authenticate its DDP connection. After communicating these values to\n// the main window, we close the popup.\n//\n// We export this function so that developers can override this\n// behavior, which is particularly useful in, for example, some mobile\n// environments where popups and/or `window.opener` don't work. For\n// example, an app could override `OAuth._endOfPopupResponse` to put the\n// credential token and credential secret in the popup URL for the main\n// window to read them there instead of using `window.opener`. If you\n// override this function, you take responsibility for writing to the\n// request and calling `res.end()` to complete the request.\n//\n// Arguments:\n//   - res: the HTTP response object\n//   - details:\n//      - query: the query string on the HTTP request\n//      - credentials: { token: *, secret: * }. If present, this field\n//        indicates that the login was successful. Return these values\n//        to the client, who can use them to log in over DDP. If\n//        present, the values have been checked against a limited\n//        character set and are safe to include in HTML.\n//      - error: if present, a string or Error indicating an error that\n//        occurred during the login. This can come from the client and\n//        so shouldn't be trusted for security decisions or included in\n//        the response without sanitizing it first. Only one of `error`\n//        or `credentials` should be set.\nOAuth._endOfLoginResponse = (res, details) => {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n\n  let redirectUrl;\n  if (details.loginStyle === 'redirect') {\n    redirectUrl = OAuth._stateFromQuery(details.query).redirectUrl;\n    const appHost = Meteor.absoluteUrl();\n    if (\n      !Meteor.settings?.packages?.oauth?.disableCheckRedirectUrlOrigin &&\n      OAuth._checkRedirectUrlOrigin(redirectUrl)) {\n      details.error = `redirectUrl (${redirectUrl}` +\n        `) is not on the same host as the app (${appHost})`;\n      redirectUrl = appHost;\n    }\n  }\n\n  const isCordova = OAuth._isCordovaFromQuery(details.query);\n\n  if (details.error) {\n    Log.warn(\"Error in OAuth Server: \" +\n             (details.error instanceof Error ?\n              details.error.message : details.error));\n    res.end(renderEndOfLoginResponse({\n      loginStyle: details.loginStyle,\n      setCredentialToken: false,\n      redirectUrl,\n      isCordova,\n    }), \"utf-8\");\n    return;\n  }\n\n  // If we have a credentialSecret, report it back to the parent\n  // window, with the corresponding credentialToken. The parent window\n  // uses the credentialToken and credentialSecret to log in over DDP.\n  res.end(renderEndOfLoginResponse({\n    loginStyle: details.loginStyle,\n    setCredentialToken: true,\n    credentialToken: details.credentials.token,\n    credentialSecret: details.credentials.secret,\n    redirectUrl,\n    isCordova,\n  }), \"utf-8\");\n};\n\n\nconst OAuthEncryption = Package[\"oauth-encryption\"] && Package[\"oauth-encryption\"].OAuthEncryption;\n\nconst usingOAuthEncryption = () =>\n  OAuthEncryption && OAuthEncryption.keyIsLoaded();\n\n// Encrypt sensitive service data such as access tokens if the\n// \"oauth-encryption\" package is loaded and the oauth secret key has\n// been specified.  Returns the unencrypted plaintext otherwise.\n//\n// The user id is not specified because the user isn't known yet at\n// this point in the oauth authentication process.  After the oauth\n// authentication process completes the encrypted service data fields\n// will be re-encrypted with the user id included before inserting the\n// service data into the user document.\n//\nOAuth.sealSecret = plaintext => {\n  if (usingOAuthEncryption())\n    return OAuthEncryption.seal(plaintext);\n  else\n    return plaintext;\n};\n\n// Unencrypt a service data field, if the \"oauth-encryption\"\n// package is loaded and the field is encrypted.\n//\n// Throws an error if the \"oauth-encryption\" package is loaded and the\n// field is encrypted, but the oauth secret key hasn't been specified.\n//\nOAuth.openSecret = (maybeSecret, userId) => {\n  if (!Package[\"oauth-encryption\"] || !OAuthEncryption.isSealed(maybeSecret))\n    return maybeSecret;\n\n  return OAuthEncryption.open(maybeSecret, userId);\n};\n\n// Unencrypt fields in the service data object.\n//\nOAuth.openSecrets = (serviceData, userId) => {\n  const result = {};\n  Object.keys(serviceData).forEach(key =>\n    result[key] = OAuth.openSecret(serviceData[key], userId)\n  );\n  return result;\n};\n\nOAuth._addValuesToQueryParams = (\n  values = {},\n  queryParams = new URLSearchParams()\n) => {\n  Object.entries(values).forEach(([key, value]) => {\n    queryParams.set(key, `${value}`);\n  });\n  return queryParams;\n};\n\nOAuth._fetch = async (\n  url,\n  method = 'GET',\n  { headers = {}, queryParams = {}, body, ...options } = {}\n) => {\n  const urlWithParams = new URL(url);\n\n  OAuth._addValuesToQueryParams(queryParams, urlWithParams.searchParams);\n\n  const requestOptions = {\n    method: method.toUpperCase(),\n    headers,\n    ...(body ? { body } : {}),\n    ...options,\n  };\n  return fetch(urlWithParams.toString(), requestOptions);\n};\n","//\n// When an oauth request is made, Meteor receives oauth credentials\n// in one browser tab, and temporarily persists them while that\n// tab is closed, then retrieves them in the browser tab that\n// initiated the credential request.\n//\n// _pendingCredentials is the storage mechanism used to share the\n// credential between the 2 tabs\n//\n\n\n// Collection containing pending credentials of oauth credential requests\n// Has key, credential, and createdAt fields.\nOAuth._pendingCredentials = new Mongo.Collection(\n  \"meteor_oauth_pendingCredentials\", {\n    _preventAutopublish: true\n  });\n\nOAuth._pendingCredentials.createIndexAsync('key', { unique: true });\nOAuth._pendingCredentials.createIndexAsync('credentialSecret');\nOAuth._pendingCredentials.createIndexAsync('createdAt');\n\n\n\n// Periodically clear old entries that were never retrieved\nconst _cleanStaleResults = () => {\n  // Remove credentials older than 1 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 1);\n  OAuth._pendingCredentials.removeAsync({ createdAt: { $lt: timeCutoff } });\n};\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n\n// Stores the key and credential in the _pendingCredentials collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param credential {Object}   The credential to store\n// @param credentialSecret {string} A secret that must be presented in\n//   addition to the `key` to retrieve the credential\n//\nOAuth._storePendingCredential = (key, credential, credentialSecret = null) => {\n  check(key, String);\n  check(credentialSecret, Match.Maybe(String));\n\n  if (credential instanceof Error) {\n    credential = storableError(credential);\n  } else {\n    credential = OAuth.sealSecret(credential);\n  }\n\n  // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n  OAuth._pendingCredentials.upsert({\n    key,\n  }, {\n    key,\n    credential,\n    credentialSecret,\n    createdAt: new Date()\n  });\n};\n\n\n// Retrieves and removes a credential from the _pendingCredentials collection\n//\n// @param key {string}\n// @param credentialSecret {string}\n//\nOAuth._retrievePendingCredential = (key, credentialSecret = null) => {\n  check(key, String);\n\n  const pendingCredential = OAuth._pendingCredentials.findOne({\n    key,\n    credentialSecret,\n  });\n\n  if (pendingCredential) {\n    OAuth._pendingCredentials.removeAsync({ _id: pendingCredential._id });\n    if (pendingCredential.credential.error)\n      return recreateError(pendingCredential.credential.error);\n    else\n      return OAuth.openSecret(pendingCredential.credential);\n  } else {\n    return undefined;\n  }\n};\n\n\n// Convert an Error into an object that can be stored in mongo\n// Note: A Meteor.Error is reconstructed as a Meteor.Error\n// All other error classes are reconstructed as a plain Error.\n// TODO: Can we do this more simply with EJSON?\nconst storableError = error => {\n  const plainObject = {};\n  Object.getOwnPropertyNames(error).forEach(\n    key => plainObject[key] = error[key]\n  );\n\n  // Keep track of whether it's a Meteor.Error\n  if(error instanceof Meteor.Error) {\n    plainObject['meteorError'] = true;\n  }\n\n  return { error: plainObject };\n};\n\n// Create an error from the error format stored in mongo\nconst recreateError = errorDoc => {\n  let error;\n\n  if (errorDoc.meteorError) {\n    error = new Meteor.Error();\n    delete errorDoc.meteorError;\n  } else {\n    error = new Error();\n  }\n\n  Object.getOwnPropertyNames(errorDoc).forEach(key =>\n    error[key] = errorDoc[key]\n  );\n\n  return error;\n};\n","OAuth._storageTokenPrefix = \"Meteor.oauth.credentialSecret-\";\n\nOAuth._redirectUri = (serviceName, config, params, absoluteUrlOptions) => {\n  // Clone because we're going to mutate 'params'. The 'cordova' and\n  // 'android' parameters are only used for picking the host of the\n  // redirect URL, and not actually included in the redirect URL itself.\n  let isCordova = false;\n  let isAndroid = false;\n  if (params) {\n    params = { ...params };\n    isCordova = params.cordova;\n    isAndroid = params.android;\n    delete params.cordova;\n    delete params.android;\n    if (Object.keys(params).length === 0) {\n      params = undefined;\n    }\n  }\n\n  if (Meteor.isServer && isCordova) {\n    const url = Npm.require('url');\n    let rootUrl = process.env.MOBILE_ROOT_URL ||\n          __meteor_runtime_config__.ROOT_URL;\n\n    if (isAndroid) {\n      // Match the replace that we do in cordova boilerplate\n      // (boilerplate-generator package).\n      // XXX Maybe we should put this in a separate package or something\n      // that is used here and by boilerplate-generator? Or maybe\n      // `Meteor.absoluteUrl` should know how to do this?\n      const parsedRootUrl = url.parse(rootUrl);\n      if (parsedRootUrl.hostname === \"localhost\") {\n        parsedRootUrl.hostname = \"10.0.2.2\";\n        delete parsedRootUrl.host;\n      }\n      rootUrl = url.format(parsedRootUrl);\n    }\n\n    absoluteUrlOptions = {\n      ...absoluteUrlOptions,\n      // For Cordova clients, redirect to the special Cordova root url\n      // (likely a local IP in development mode).\n      rootUrl,\n    };\n  }\n\n  return URL._constructUrl(\n    Meteor.absoluteUrl(`_oauth/${serviceName}`, absoluteUrlOptions),\n    null,\n    params);\n};\n"]}