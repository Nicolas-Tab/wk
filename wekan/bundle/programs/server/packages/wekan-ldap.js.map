{"version":3,"sources":["meteor://ðŸ’»app/packages/wekan-ldap/server/index.js","meteor://ðŸ’»app/packages/wekan-ldap/server/ldap.js","meteor://ðŸ’»app/packages/wekan-ldap/server/logger.js","meteor://ðŸ’»app/packages/wekan-ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/wekan-ldap/server/sync.js"],"names":["module","link","export","default","LDAP","ldapjs","v","Log","escapedToHex","str","undefined","replace","match","p1","hexCode","charCodeAt","toString","rest","substring","constructor","connected","options","host","settings_get","port","Reconnect","timeout","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","Authentication","Authentication_UserDN","Authentication_Password","Authentication_Fallback","BaseDN","Internal_Log_Level","User_Authentication","User_Authentication_Field","User_Attributes","User_Search_Filter","User_Search_Scope","User_Search_Field","Search_Page_Size","Search_Size_Limit","group_filter_enabled","group_filter_object_class","group_filter_group_id_attribute","group_filter_group_member_attribute","group_filter_group_member_format","group_filter_group_name","AD_Simple_Auth","Default_Domain","name","value","process","env","JSON","parse","isNaN","Number","connectSync","_connectSync","Meteor","wrapAsync","connectAsync","arguments","searchAllSync","_searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","concat","connectTimeout","idleTimeout","reconnect","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","join","debug","stringify","client","createClient","bindSync","bind","on","error","disconnect","starttls","response","setTimeout","Error","getUserFilter","username","filter","usernameFilter","map","item","length","bindUserIfNecessary","password","domainBinded","userDn","bindIfNecessary","searchUsersSync","page","searchOptions","scope","sizeLimit","attributes","paged","pageSize","pagePause","searchAllPaged","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","Buffer","from","OrFilter","result","Array","isArray","getUserByUsernameSync","getUserGroups","ldapUser","format_value","grp_identifier","groups","isUserInGroup","grps","extractLdapEntryData","entry","values","_raw","raw","Object","keys","key","includes","processPage","_ref","entries","title","end","next","_updateIdle","search","res","internalPageSize","authSync","dn","unbind","log","log_debug","log_info","log_warn","log_error","isLogEnabled","LDAP_LOG_ENABLED","level","message","data","console","_len","args","_key","_len2","_key2","_len3","_key3","_len4","_key4","slug","getLdapUsername","getLdapEmail","getLdapUserUniqueID","syncUserData","addLdapUser","fallbackDefaultAccountSystem","indexOf","email","loginRequest","user","digest","SHA256","algorithm","Accounts","_runLoginHandlers","registerLoginHandler","ldap","ldapOptions","ldapPass","self","users","userQuery","findOne","authenticationMethod","stampedToken","_generateStampedLoginToken","update_data","$push","_hashStampedToken","targetGroups","isAdmin","update","_id","$set","Roles","setUserRoles","setPassword","logout","userId","token","getPropertyValue","getLdapFullname","getDataToSyncUserData","importNewUsers","_","SyncedCron","defineProperty","prototype","prop","toLowerCase","enumerable","text","slugify","templateVarHandler","variable","object","templateRegex","exec","tmpVariable","hasOwnProperty","tmplVar","tmplAttrName","attrVal","obj","reduce","acc","el","err","usernameField","field","getLDAPValue","emailField","ldapMail","fullnameField","find","isEmpty","syncUserDataFieldMap","trim","userData","whitelistedUserFields","fieldMap","emailList","userField","ldapField","isObject","address","verified","outerKey","innerKeys","customFieldsMeta","e","tmpUserField","tmpLdapField","dKeys","lastKey","last","currKey","emails","uniqueId","services","idAttribute","size","fullname","userObject","mail","createUser","count","bindEnvironment","ldapUsers","sync","$exists","jobName","addCronJob","debounce","addCronJobDebounced","sc","nextScheduledAtDate","remove","add","schedule","parser","recur","minute","job","start","startup","defer"],"mappings":"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","file":"/packages/wekan-ldap.js","sourcesContent":["import './loginHandler';\n","import ldapjs from 'ldapjs';\nimport { Log } from 'meteor/logging';\n\n// copied from https://github.com/ldapjs/node-ldapjs/blob/a113953e0d91211eb945d2a3952c84b7af6de41c/lib/filters/index.js#L167\nfunction escapedToHex (str) {\n  if (str !== undefined) {\n    return str.replace(/\\\\([0-9a-f][^0-9a-f]|[0-9a-f]$|[^0-9a-f]|$)/gi, function (match, p1) {\n      if (!p1) {\n        return '\\\\5c';\n      }\n\n      const hexCode = p1.charCodeAt(0).toString(16);\n      const rest = p1.substring(1);\n      return '\\\\' + hexCode + rest;\n    });\n  } else {\n    return undefined;\n  }\n}\n\nexport default class LDAP {\n  constructor() {\n    this.ldapjs = ldapjs;\n\n    this.connected = false;\n\n    this.options = {\n      host                               : this.constructor.settings_get('LDAP_HOST'),\n      port                               : this.constructor.settings_get('LDAP_PORT'),\n      Reconnect                          : this.constructor.settings_get('LDAP_RECONNECT'),\n      timeout                            : this.constructor.settings_get('LDAP_TIMEOUT'),\n      connect_timeout                    : this.constructor.settings_get('LDAP_CONNECT_TIMEOUT'),\n      idle_timeout                       : this.constructor.settings_get('LDAP_IDLE_TIMEOUT'),\n      encryption                         : this.constructor.settings_get('LDAP_ENCRYPTION'),\n      ca_cert                            : this.constructor.settings_get('LDAP_CA_CERT'),\n      reject_unauthorized                : this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') !== undefined ? this.constructor.settings_get('LDAP_REJECT_UNAUTHORIZED') : true,\n      Authentication                     : this.constructor.settings_get('LDAP_AUTHENTIFICATION'),\n      Authentication_UserDN              : this.constructor.settings_get('LDAP_AUTHENTIFICATION_USERDN'),\n      Authentication_Password            : this.constructor.settings_get('LDAP_AUTHENTIFICATION_PASSWORD'),\n      Authentication_Fallback            : this.constructor.settings_get('LDAP_LOGIN_FALLBACK'),\n      BaseDN                             : this.constructor.settings_get('LDAP_BASEDN'),\n      Internal_Log_Level                 : this.constructor.settings_get('INTERNAL_LOG_LEVEL'), //this setting does not have any effect any more and should be deprecated\n      User_Authentication                : this.constructor.settings_get('LDAP_USER_AUTHENTICATION'),\n      User_Authentication_Field          : this.constructor.settings_get('LDAP_USER_AUTHENTICATION_FIELD'),\n      User_Attributes                    : this.constructor.settings_get('LDAP_USER_ATTRIBUTES'),\n      User_Search_Filter                 : escapedToHex(this.constructor.settings_get('LDAP_USER_SEARCH_FILTER')),\n      User_Search_Scope                  : this.constructor.settings_get('LDAP_USER_SEARCH_SCOPE'),\n      User_Search_Field                  : this.constructor.settings_get('LDAP_USER_SEARCH_FIELD'),\n      Search_Page_Size                   : this.constructor.settings_get('LDAP_SEARCH_PAGE_SIZE'),\n      Search_Size_Limit                  : this.constructor.settings_get('LDAP_SEARCH_SIZE_LIMIT'),\n      group_filter_enabled               : this.constructor.settings_get('LDAP_GROUP_FILTER_ENABLE'),\n      group_filter_object_class          : this.constructor.settings_get('LDAP_GROUP_FILTER_OBJECTCLASS'),\n      group_filter_group_id_attribute    : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_ID_ATTRIBUTE'),\n      group_filter_group_member_attribute: this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_ATTRIBUTE'),\n      group_filter_group_member_format   : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_MEMBER_FORMAT'),\n      group_filter_group_name            : this.constructor.settings_get('LDAP_GROUP_FILTER_GROUP_NAME'),\n      AD_Simple_Auth                     : this.constructor.settings_get('LDAP_AD_SIMPLE_AUTH'),\n      Default_Domain                     : this.constructor.settings_get('LDAP_DEFAULT_DOMAIN'),\n    };\n  }\n\n  static settings_get(name, ...args) {\n    let value = process.env[name];\n    if (value !== undefined) {\n      if (value === 'true' || value === 'false') {\n        value = JSON.parse(value);\n      } else if (value !== '' && !isNaN(value)) {\n        value = Number(value);\n      }\n      return value;\n    } else {\n      //Log.warn(`Lookup for unset variable: ${name}`);\n    }\n  }\n\n  connectSync(...args) {\n     if (!this._connectSync) {\n      this._connectSync = Meteor.wrapAsync(this.connectAsync, this);\n    }\n    return this._connectSync(...args);\n  }\n\n  searchAllSync(...args) {\n\n    if (!this._searchAllSync) {\n      this._searchAllSync = Meteor.wrapAsync(this.searchAllAsync, this);\n    }\n    return this._searchAllSync(...args);\n  }\n\n  connectAsync(callback) {\n    Log.info('Init setup');\n\n    let replied = false;\n\n    const connectionOptions = {\n      url           : `${this.options.host}:${this.options.port}`,\n      timeout       : this.options.timeout,\n      connectTimeout: this.options.connect_timeout,\n      idleTimeout   : this.options.idle_timeout,\n      reconnect     : this.options.Reconnect,\n    };\n\n    const tlsOptions = {\n      rejectUnauthorized: this.options.reject_unauthorized,\n    };\n\n    if (this.options.ca_cert && this.options.ca_cert !== '') {\n      // Split CA cert into array of strings\n      const chainLines = this.constructor.settings_get('LDAP_CA_CERT').replace(/\\\\n/g,'\\n').split('\\n');\n      let cert         = [];\n      const ca         = [];\n      chainLines.forEach((line) => {\n        cert.push(line);\n        if (line.match(/-END CERTIFICATE-/)) {\n          ca.push(cert.join('\\n'));\n          cert = [];\n        }\n      });\n      tlsOptions.ca = ca;\n    }\n\n    if (this.options.encryption === 'ssl') {\n      connectionOptions.url        = `ldaps://${connectionOptions.url}`;\n      connectionOptions.tlsOptions = tlsOptions;\n    } else {\n      connectionOptions.url = `ldap://${connectionOptions.url}`;\n    }\n\n    Log.info(`Connecting ${connectionOptions.url}`);\n    Log.debug(`connectionOptions ${JSON.stringify(connectionOptions)}`);\n\n    this.client = ldapjs.createClient(connectionOptions);\n\n    this.bindSync = Meteor.wrapAsync(this.client.bind, this.client);\n\n    this.client.on('error', (error) => {\n      Log.error(`connection ${error}`);\n      if (replied === false) {\n        replied = true;\n        callback(error, null);\n      }\n    });\n\n    this.client.on('idle', () => {\n      Log.info('Idle');\n      this.disconnect();\n    });\n\n    this.client.on('close', () => {\n      Log.info('Closed');\n    });\n\n    if (this.options.encryption === 'tls') {\n      // Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n      // https://github.com/RocketChat/Rocket.Chat/issues/2035\n      // https://github.com/mcavage/node-ldapjs/issues/349\n      tlsOptions.host = this.options.host;\n\n      Log.info('Starting TLS');\n      Log.debug(`tlsOptions ${JSON.stringify(tlsOptions)}`);\n\n      this.client.starttls(tlsOptions, null, (error, response) => {\n        if (error) {\n          Log.error(`TLS connection ${JSON.stringify(error)}`);\n          if (replied === false) {\n            replied = true;\n            callback(error, null);\n          }\n          return;\n        }\n\n        Log.info('TLS connected');\n        this.connected = true;\n        if (replied === false) {\n          replied = true;\n          callback(null, response);\n        }\n      });\n    } else {\n      this.client.on('connect', (response) => {\n        Log.info('LDAP connected');\n        this.connected = true;\n        if (replied === false) {\n          replied = true;\n          callback(null, response);\n        }\n      });\n    }\n\n    setTimeout(() => {\n      if (replied === false) {\n        Log.error(`connection time out ${connectionOptions.connectTimeout}`);\n        replied = true;\n        callback(new Error('Timeout'));\n      }\n    }, connectionOptions.connectTimeout);\n  }\n\n  getUserFilter(username) {\n    const filter = [];\n\n    if (this.options.User_Search_Filter !== '') {\n      if (this.options.User_Search_Filter[0] === '(') {\n        filter.push(`${this.options.User_Search_Filter}`);\n      } else {\n        filter.push(`(${this.options.User_Search_Filter})`);\n      }\n    }\n\n    const usernameFilter = this.options.User_Search_Field.split(',').map((item) => `(${item}=${username})`);\n\n    if (usernameFilter.length === 0) {\n      Log.error('LDAP_LDAP_User_Search_Field not defined');\n    } else if (usernameFilter.length === 1) {\n      filter.push(`${usernameFilter[0]}`);\n    } else {\n      filter.push(`(|${usernameFilter.join('')})`);\n    }\n\n    return `(&${filter.join('')})`;\n  }\n\n  bindUserIfNecessary(username, password) {\n\n    if (this.domainBinded === true) {\n      return;\n    }\n\n    if (!this.options.User_Authentication) {\n      return;\n    }\n\n    /* if SimpleAuth is configured, the BaseDN is not needed */\n    if (!this.options.BaseDN && !this.options.AD_Simple_Auth) throw new Error('BaseDN is not provided');\n\n    var userDn = \"\";\n    if (this.options.AD_Simple_Auth === true || this.options.AD_Simple_Auth === 'true') {\n      userDn = `${username}@${this.options.Default_Domain}`;\n    } else {\n      userDn = `${this.options.User_Authentication_Field}=${username},${this.options.BaseDN}`;\n    }\n\n    Log.info(`Binding with User ${userDn}`);\n\n    this.bindSync(userDn, password);\n    this.domainBinded = true;\n  }\n\n  bindIfNecessary() {\n    if (this.domainBinded === true) {\n      return;\n    }\n\n    if (this.options.Authentication !== true) {\n      return;\n    }\n\n    Log.info(`Binding UserDN ${this.options.Authentication_UserDN}`);\n\n    this.bindSync(this.options.Authentication_UserDN, this.options.Authentication_Password);\n    this.domainBinded = true;\n  }\n\n  searchUsersSync(username, page) {\n    this.bindIfNecessary();\n    const searchOptions = {\n      filter   : this.getUserFilter(username),\n      scope    : this.options.User_Search_Scope || 'sub',\n      sizeLimit: this.options.Search_Size_Limit,\n    };\n\n    if (!!this.options.User_Attributes) searchOptions.attributes = this.options.User_Attributes.split(',');\n\n    if (this.options.Search_Page_Size > 0) {\n      searchOptions.paged = {\n        pageSize : this.options.Search_Page_Size,\n        pagePause: !!page,\n      };\n    }\n\n    Log.info(`Searching user ${username}`);\n    Log.debug(`searchOptions ${searchOptions}`);\n    Log.debug(`BaseDN ${this.options.BaseDN}`);\n\n    if (page) {\n      return this.searchAllPaged(this.options.BaseDN, searchOptions, page);\n    }\n\n    return this.searchAllSync(this.options.BaseDN, searchOptions);\n  }\n\n  getUserByIdSync(id, attribute) {\n    this.bindIfNecessary();\n\n    const Unique_Identifier_Field = this.constructor.settings_get('LDAP_UNIQUE_IDENTIFIER_FIELD').split(',');\n\n    let filter;\n\n    if (attribute) {\n      filter = new this.ldapjs.filters.EqualityFilter({\n        attribute,\n        value: Buffer.from(id, 'hex'),\n      });\n    } else {\n      const filters = [];\n      Unique_Identifier_Field.forEach((item) => {\n        filters.push(new this.ldapjs.filters.EqualityFilter({\n          attribute: item,\n          value    : Buffer.from(id, 'hex'),\n        }));\n      });\n\n      filter = new this.ldapjs.filters.OrFilter({ filters });\n    }\n\n    const searchOptions = {\n      filter,\n      scope: 'sub',\n    };\n\n    Log.info(`Searching by id ${id}`);\n    Log.debug(`search filter ${searchOptions.filter.toString()}`);\n    Log.debug(`BaseDN ${this.options.BaseDN}`);\n\n    const result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n    if (!Array.isArray(result) || result.length === 0) {\n      return;\n    }\n\n    if (result.length > 1) {\n      Log.error(`Search by id ${id} returned ${result.length} records`);\n    }\n\n    return result[0];\n  }\n\n  getUserByUsernameSync(username) {\n    this.bindIfNecessary();\n\n    const searchOptions = {\n      filter: this.getUserFilter(username),\n      scope : this.options.User_Search_Scope || 'sub',\n    };\n\n    Log.info(`Searching user ${username}`);\n    Log.debug(`searchOptions ${searchOptions}`);\n    Log.debug(`BaseDN ${this.options.BaseDN}`);\n\n    const result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n    if (!Array.isArray(result) || result.length === 0) {\n      return;\n    }\n\n    if (result.length > 1) {\n      Log.error(`Search by username ${username} returned ${result.length} records`);\n    }\n\n    return result[0];\n  }\n\n  getUserGroups(username, ldapUser) {\n    if (!this.options.group_filter_enabled) {\n      return true;\n    }\n\n    const filter = ['(&'];\n\n    if (this.options.group_filter_object_class !== '') {\n      filter.push(`(objectclass=${this.options.group_filter_object_class})`);\n    }\n\n    if (this.options.group_filter_group_member_attribute !== '') {\n      const format_value = ldapUser[this.options.group_filter_group_member_format];\n      if (format_value) {\n        filter.push(`(${this.options.group_filter_group_member_attribute}=${format_value})`);\n      }\n    }\n\n    filter.push(')');\n\n    const searchOptions = {\n      filter: filter.join('').replace(/#{username}/g, username).replace(\"\\\\\", \"\\\\\\\\\"),\n      scope : 'sub',\n    };\n\n    Log.debug(`Group list filter LDAP: ${searchOptions.filter}`);\n\n    const result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n    if (!Array.isArray(result) || result.length === 0) {\n      return [];\n    }\n\n    const grp_identifier = this.options.group_filter_group_id_attribute || 'cn';\n    const groups         = [];\n    result.map((item) => {\n      groups.push(item[grp_identifier]);\n    });\n    Log.debug(`Groups: ${groups.join(', ')}`);\n    return groups;\n\n  }\n\n  isUserInGroup(username, ldapUser) {\n    if (!this.options.group_filter_enabled) {\n      return true;\n    }\n\n    const grps = this.getUserGroups(username, ldapUser);\n\n    const filter = ['(&'];\n\n    if (this.options.group_filter_object_class !== '') {\n      filter.push(`(objectclass=${this.options.group_filter_object_class})`);\n    }\n\n    if (this.options.group_filter_group_member_attribute !== '') {\n      const format_value = ldapUser[this.options.group_filter_group_member_format];\n      if (format_value) {\n        filter.push(`(${this.options.group_filter_group_member_attribute}=${format_value})`);\n      }\n    }\n\n    if (this.options.group_filter_group_id_attribute !== '') {\n      filter.push(`(${this.options.group_filter_group_id_attribute}=${this.options.group_filter_group_name})`);\n    }\n    filter.push(')');\n\n    const searchOptions = {\n      filter: filter.join('').replace(/#{username}/g, username).replace(\"\\\\\", \"\\\\\\\\\"),\n      scope : 'sub',\n    };\n\n    Log.debug(`Group filter LDAP: ${searchOptions.filter}`);\n\n    const result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n    if (!Array.isArray(result) || result.length === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  extractLdapEntryData(entry) {\n    const values = {\n      _raw: entry.raw,\n    };\n\n    Object.keys(values._raw).forEach((key) => {\n      const value = values._raw[key];\n\n      if (!['thumbnailPhoto', 'jpegPhoto'].includes(key)) {\n        if (value instanceof Buffer) {\n          values[key] = value.toString();\n        } else {\n          values[key] = value;\n        }\n      }\n    });\n\n    return values;\n  }\n\n  searchAllPaged(BaseDN, options, page) {\n    this.bindIfNecessary();\n\n    const processPage = ({ entries, title, end, next }) => {\n      Log.info(title);\n      // Force LDAP idle to wait the record processing\n      this.client._updateIdle(true);\n      page(null, entries, {\n        end, next: () => {\n          // Reset idle timer\n          this.client._updateIdle();\n          next && next();\n        }\n      });\n    };\n\n    this.client.search(BaseDN, options, (error, res) => {\n      if (error) {\n        Log.error(error);\n        page(error);\n        return;\n      }\n\n      res.on('error', (error) => {\n        Log.error(error);\n        page(error);\n        return;\n      });\n\n      let entries = [];\n\n      const internalPageSize = options.paged && options.paged.pageSize > 0 ? options.paged.pageSize * 2 : 500;\n\n      res.on('searchEntry', (entry) => {\n        entries.push(this.extractLdapEntryData(entry));\n\n        if (entries.length >= internalPageSize) {\n          processPage({\n            entries,\n            title: 'Internal Page',\n            end  : false,\n          });\n          entries = [];\n        }\n      });\n\n      res.on('page', (result, next) => {\n        if (!next) {\n          this.client._updateIdle(true);\n          processPage({\n            entries,\n            title: 'Final Page',\n            end  : true,\n          });\n        } else if (entries.length) {\n          Log.info('Page');\n          processPage({\n            entries,\n            title: 'Page',\n            end  : false,\n            next,\n          });\n          entries = [];\n        }\n      });\n\n      res.on('end', () => {\n        if (entries.length) {\n          processPage({\n            entries,\n            title: 'Final Page',\n            end  : true,\n          });\n          entries = [];\n        }\n      });\n    });\n  }\n\n  searchAllAsync(BaseDN, options, callback) {\n    this.bindIfNecessary();\n\n    this.client.search(BaseDN, options, (error, res) => {\n      if (error) {\n        Log.error(error);\n        callback(error);\n        return;\n      }\n\n      res.on('error', (error) => {\n        Log.error(error);\n        callback(error);\n        return;\n      });\n\n      const entries = [];\n\n      res.on('searchEntry', (entry) => {\n        entries.push(this.extractLdapEntryData(entry));\n      });\n\n      res.on('end', () => {\n        Log.info(`Search result count ${entries.length}`);\n        callback(null, entries);\n      });\n    });\n  }\n\n  authSync(dn, password) {\n    Log.info(`Authenticating ${dn}`);\n\n    try {\n      if (password === '') {\n        throw new Error('Password is not provided');\n      }\n      this.bindSync(dn, password);\n      Log.info(`Authenticated ${dn}`);\n      return true;\n    } catch (error) {\n      Log.info(`Not authenticated ${dn}`);\n      Log.debug('error', error);\n      return false;\n    }\n  }\n\n  disconnect() {\n    this.connected    = false;\n    this.domainBinded = false;\n    Log.info('Disconecting');\n    this.client.unbind();\n  }\n}\n","const isLogEnabled = (process.env.LDAP_LOG_ENABLED === 'true');\n\n\nfunction log (level, message, data) { \n    if (isLogEnabled) {\n        console.log(`[${level}] ${message} ${ data ? JSON.stringify(data, null, 2) : '' }`);\n    }\n}\n\nfunction log_debug (...args) { log('DEBUG', ...args); }\nfunction log_info (...args) { log('INFO', ...args); }\nfunction log_warn (...args) { log('WARN', ...args); }\nfunction log_error (...args) { log('ERROR', ...args); }\n\nexport { log, log_debug, log_info, log_warn, log_error };\n","import {slug, getLdapUsername, getLdapEmail, getLdapUserUniqueID, syncUserData, addLdapUser} from './sync';\nimport LDAP from './ldap';\nimport { log_debug, log_info, log_warn, log_error } from './logger';\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n  if (typeof username === 'string') {\n    if (username.indexOf('@') === -1) {\n      username = {username};\n    } else {\n      username = {email: username};\n    }\n  }\n\n  log_info('Fallback to default account system: ', username );\n\n  const loginRequest = {\n    user: username,\n    password: {\n      digest: SHA256(password),\n      algorithm: 'sha-256',\n    },\n  };\n  log_debug('Fallback options: ', loginRequest);\n\n  return Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n  if (!loginRequest.ldap || !loginRequest.ldapOptions) {\n    return undefined;\n  }\n\n  log_info('Init LDAP login', loginRequest.username);\n\n  if (LDAP.settings_get('LDAP_ENABLE') !== true) {\n    return fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n  }\n\n  const self = this;\n  const ldap = new LDAP();\n  let ldapUser;\n\n  try {\n\n      ldap.connectSync();\n\n     if (!!LDAP.settings_get('LDAP_USER_AUTHENTICATION')) {\n        ldap.bindUserIfNecessary(loginRequest.username, loginRequest.ldapPass);\n       ldapUser = ldap.searchUsersSync(loginRequest.username)[0];\n       } else {\n\n       const users = ldap.searchUsersSync(loginRequest.username);\n\n       if (users.length !== 1) {\n         log_info('Search returned', users.length, 'record(s) for', loginRequest.username);\n         throw new Error('User not Found');\n       }\n\n      if (ldap.isUserInGroup(loginRequest.username, users[0])) {\n        ldapUser = users[0];\n      } else {\n        throw new Error('User not in a valid group');\n      }\n\n      if (ldap.authSync(users[0].dn, loginRequest.ldapPass) !== true) {\n        ldapUser = null;\n        log_info('Wrong password for', loginRequest.username)\n      }\n     }\n\n  } catch (error) {\n     log_error(error);\n  }\n\n  if (!ldapUser) {\n    if (LDAP.settings_get('LDAP_LOGIN_FALLBACK') === true) {\n      return fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n    }\n\n    throw new Meteor.Error('LDAP-login-error', `LDAP Authentication failed with provided username [${ loginRequest.username }]`);\n  }\n\n  // Look to see if user already exists\n\n  let userQuery;\n\n  const Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n  let user;\n   // Attempt to find user by unique identifier\n\n  if (Unique_Identifier_Field) {\n    userQuery = {\n      'services.ldap.id': Unique_Identifier_Field.value,\n    };\n\n    log_info('Querying user');\n    log_debug('userQuery', userQuery);\n\n    user = Meteor.users.findOne(userQuery);\n   }\n\n  // Attempt to find user by username\n\n  let username;\n  let email;\n\n   if (LDAP.settings_get('LDAP_USERNAME_FIELD') !== '') {\n    username = slug(getLdapUsername(ldapUser));\n  } else {\n    username = slug(loginRequest.username);\n  }\n\n  if(LDAP.settings_get('LDAP_EMAIL_FIELD') !== '') {\n    email = getLdapEmail(ldapUser);\n  }\n\n\n  if (!user) {\n    if(email && LDAP.settings_get('LDAP_EMAIL_MATCH_REQUIRE') === true) {\n      if(LDAP.settings_get('LDAP_EMAIL_MATCH_VERIFIED') === true) {\n        userQuery = {\n          '_id' : username,\n          'emails.0.address' : email,\n          'emails.0.verified' : true\n        };\n      } else {\n        userQuery = {\n          '_id' : username,\n          'emails.0.address' : email\n        };\n      }\n    } else {\n      userQuery = {\n        username\n      };\n    }\n\n    log_debug('userQuery', userQuery);\n\n    user = Meteor.users.findOne(userQuery);\n  }\n\n  // Attempt to find user by e-mail address only\n\n  if (!user && email && LDAP.settings_get('LDAP_EMAIL_MATCH_ENABLE') === true) {\n\n    log_info('No user exists with username', username, '- attempting to find by e-mail address instead');\n\n    if(LDAP.settings_get('LDAP_EMAIL_MATCH_VERIFIED') === true) {\n      userQuery = {\n        'emails.0.address': email,\n        'emails.0.verified' : true\n      };\n    } else {\n      userQuery = {\n        'emails.0.address' : email\n      };\n    }\n\n    log_debug('userQuery', userQuery);\n\n    user = Meteor.users.findOne(userQuery);\n\n  }\n\n  // Login user if they exist\n  if (user) {\n    if (user.authenticationMethod !== 'ldap' && LDAP.settings_get('LDAP_MERGE_EXISTING_USERS') !== true) {\n      log_info('User exists without \"authenticationMethod : ldap\"');\n      throw new Meteor.Error('LDAP-login-error', `LDAP Authentication succeded, but there's already a matching Wekan account in MongoDB`);\n    }\n\n    log_info('Logging user');\n\n    const stampedToken = Accounts._generateStampedLoginToken();\n    const update_data = {\n      $push: {\n        'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken),\n      },\n    };\n\n    if (LDAP.settings_get('LDAP_SYNC_ADMIN_STATUS') === true) {\n      log_debug('Updating admin status');\n      const targetGroups = LDAP.settings_get('LDAP_SYNC_ADMIN_GROUPS').split(',');\n      const groups = ldap.getUserGroups(username, ldapUser).filter((value) => targetGroups.includes(value));\n\n      user.isAdmin = groups.length > 0;\n      Meteor.users.update({_id: user._id}, {$set: {isAdmin: user.isAdmin}});\n    }\n\n    if( LDAP.settings_get('LDAP_SYNC_GROUP_ROLES') === true ) {\n      log_debug('Updating Groups/Roles');\n      const groups = ldap.getUserGroups(username, ldapUser);\n\n      if( groups.length > 0 ) {\n        Roles.setUserRoles(user._id, groups );\n        log_info(`Updated roles to:${  groups.join(',')}`);\n      }\n    }\n\n    Meteor.users.update(user._id, update_data );\n\n    syncUserData(user, ldapUser);\n\n    if (LDAP.settings_get('LDAP_LOGIN_FALLBACK') === true) {\n      Accounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n    }\n\n    return {\n      userId: user._id,\n      token: stampedToken.token,\n    };\n  }\n\n  // Create new user\n\n  log_info('User does not exist, creating', username);\n\n  if (LDAP.settings_get('LDAP_USERNAME_FIELD') === '') {\n    username = undefined;\n  }\n\n  if (LDAP.settings_get('LDAP_LOGIN_FALLBACK') !== true) {\n    loginRequest.ldapPass = undefined;\n  }\n\n  const result = addLdapUser(ldapUser, username, loginRequest.ldapPass);\n\n  if (LDAP.settings_get('LDAP_SYNC_ADMIN_STATUS') === true) {\n    log_debug('Updating admin status');\n    const targetGroups = LDAP.settings_get('LDAP_SYNC_ADMIN_GROUPS').split(',');\n    const groups = ldap.getUserGroups(username, ldapUser).filter((value) => targetGroups.includes(value));\n\n    result.isAdmin = groups.length > 0;\n    Meteor.users.update({_id: result.userId}, {$set: {isAdmin: result.isAdmin}});\n  }\n\n  if( LDAP.settings_get('LDAP_SYNC_GROUP_ROLES') === true ) {\n    const groups = ldap.getUserGroups(username, ldapUser);\n    if( groups.length > 0 ) {\n      Roles.setUserRoles(result.userId, groups );\n      log_info(`Set roles to:${  groups.join(',')}`);\n    }\n  }\n\n\n  if (result instanceof Error) {\n    throw result;\n  }\n\n  return result;\n});\n","import _ from 'underscore';\nimport SyncedCron from 'meteor/percolate:synced-cron';\nimport LDAP from './ldap';\nimport { log_debug, log_info, log_warn, log_error } from './logger';\n\nObject.defineProperty(Object.prototype, \"getLDAPValue\", {\n  value: function (prop) {\n      const self = this;\n      for (let key in self) {\n          if (key.toLowerCase() == prop.toLowerCase()) {\n              return self[key];\n          }\n      }\n  },\n\n  enumerable: false\n});\n\nexport function slug(text) {\n  if (LDAP.settings_get('LDAP_UTF8_NAMES_SLUGIFY') !== true) {\n    return text;\n  }\n  text = slugify(text, '.');\n  return text.replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction templateVarHandler (variable, object) {\n\n  const templateRegex = /#{([\\w\\-]+)}/gi;\n  let match = templateRegex.exec(variable);\n  let tmpVariable = variable;\n\n  if (match == null) {\n    if (!object.hasOwnProperty(variable)) {\n      return;\n    }\n    return object[variable];\n  } else {\n    while (match != null) {\n      const tmplVar = match[0];\n      const tmplAttrName = match[1];\n\n      if (!object.hasOwnProperty(tmplAttrName)) {\n        return;\n      }\n\n      const attrVal = object[tmplAttrName];\n      tmpVariable = tmpVariable.replace(tmplVar, attrVal);\n      match = templateRegex.exec(variable);\n    }\n    return tmpVariable;\n  }\n}\n\nexport function getPropertyValue(obj, key) {\n  try {\n    return _.reduce(key.split('.'), (acc, el) => acc[el], obj);\n  } catch (err) {\n    return undefined;\n  }\n}\n\nexport function getLdapUsername(ldapUser) {\n  const usernameField = LDAP.settings_get('LDAP_USERNAME_FIELD');\n\n  if (usernameField.indexOf('#{') > -1) {\n    return usernameField.replace(/#{(.+?)}/g, function(match, field) {\n      return ldapUser.getLDAPValue(field);\n    });\n  }\n\n  return ldapUser.getLDAPValue(usernameField);\n}\n\nexport function getLdapEmail(ldapUser) {\n  const emailField = LDAP.settings_get('LDAP_EMAIL_FIELD');\n\n  if (emailField.indexOf('#{') > -1) {\n    return emailField.replace(/#{(.+?)}/g, function(match, field) {\n      return ldapUser.getLDAPValue(field);\n    });\n  }\n\n  const ldapMail = ldapUser.getLDAPValue(emailField);\n  if (typeof ldapMail === 'string') {\n    return ldapMail;\n  } else {\n    return ldapMail[0].toString();\n  }\n}\n\nexport function getLdapFullname(ldapUser) {\n  const fullnameField = LDAP.settings_get('LDAP_FULLNAME_FIELD');\n  if (fullnameField.indexOf('#{') > -1) {\n    return fullnameField.replace(/#{(.+?)}/g, function(match, field) {\n      return ldapUser.getLDAPValue(field);\n    });\n  }\n  return ldapUser.getLDAPValue(fullnameField);\n}\n\nexport function getLdapUserUniqueID(ldapUser) {\n  let Unique_Identifier_Field = LDAP.settings_get('LDAP_UNIQUE_IDENTIFIER_FIELD');\n\n  if (Unique_Identifier_Field !== '') {\n    Unique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n  } else {\n    Unique_Identifier_Field = [];\n  }\n\n  let User_Search_Field = LDAP.settings_get('LDAP_USER_SEARCH_FIELD');\n\n  if (User_Search_Field !== '') {\n    User_Search_Field = User_Search_Field.replace(/\\s/g, '').split(',');\n  } else {\n    User_Search_Field = [];\n  }\n\n  Unique_Identifier_Field = Unique_Identifier_Field.concat(User_Search_Field);\n\n  if (Unique_Identifier_Field.length > 0) {\n    Unique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n      return !_.isEmpty(ldapUser._raw.getLDAPValue(field));\n    });\n    if (Unique_Identifier_Field) {\n\t\t    log_debug(`Identifying user with: ${  Unique_Identifier_Field}`);\n      Unique_Identifier_Field = {\n        attribute: Unique_Identifier_Field,\n        value: ldapUser._raw.getLDAPValue(Unique_Identifier_Field).toString('hex'),\n      };\n    }\n    return Unique_Identifier_Field;\n  }\n}\n\nexport function getDataToSyncUserData(ldapUser, user) {\n  const syncUserData = LDAP.settings_get('LDAP_SYNC_USER_DATA');\n  const syncUserDataFieldMap = LDAP.settings_get('LDAP_SYNC_USER_DATA_FIELDMAP').trim();\n\n  const userData = {};\n\n  if (syncUserData && syncUserDataFieldMap) {\n    const whitelistedUserFields = ['email', 'name', 'customFields'];\n    const fieldMap = JSON.parse(syncUserDataFieldMap);\n    const emailList = [];\n    _.map(fieldMap, function(userField, ldapField) {\n\t\t    log_debug(`Mapping field ${ldapField} -> ${userField}`);\n      switch (userField) {\n      case 'email':\n        if (!ldapUser.hasOwnProperty(ldapField)) {\n          log_debug(`user does not have attribute: ${ ldapField }`);\n          return;\n        }\n\n        if (_.isObject(ldapUser[ldapField])) {\n          _.map(ldapUser[ldapField], function(item) {\n            emailList.push({ address: item, verified: true });\n          });\n        } else {\n          emailList.push({ address: ldapUser[ldapField], verified: true });\n        }\n        break;\n\n      default:\n        const [outerKey, innerKeys] = userField.split(/\\.(.+)/);\n\n        if (!_.find(whitelistedUserFields, (el) => el === outerKey)) {\n          log_debug(`user attribute not whitelisted: ${ userField }`);\n          return;\n        }\n\n        if (outerKey === 'customFields') {\n          let customFieldsMeta;\n\n          try {\n            customFieldsMeta = JSON.parse(LDAP.settings_get('Accounts_CustomFields'));\n          } catch (e) {\n            log_debug('Invalid JSON for Custom Fields');\n            return;\n          }\n\n          if (!getPropertyValue(customFieldsMeta, innerKeys)) {\n            log_debug(`user attribute does not exist: ${ userField }`);\n            return;\n          }\n        }\n\n        const tmpUserField = getPropertyValue(user, userField);\n        const tmpLdapField = templateVarHandler(ldapField, ldapUser);\n\n        if (tmpLdapField && tmpUserField !== tmpLdapField) {\n          // creates the object structure instead of just assigning 'tmpLdapField' to\n          // 'userData[userField]' in order to avoid the \"cannot use the part (...)\n          // to traverse the element\" (MongoDB) error that can happen. Do not handle\n          // arrays.\n          // TODO: Find a better solution.\n          const dKeys = userField.split('.');\n          const lastKey = _.last(dKeys);\n          _.reduce(dKeys, (obj, currKey) =>\n            (currKey === lastKey)\n              ? obj[currKey] = tmpLdapField\n              : obj[currKey] = obj[currKey] || {}\n            , userData);\n          log_debug(`user.${ userField } changed to: ${ tmpLdapField }`);\n        }\n      }\n    });\n\n    if (emailList.length > 0) {\n      if (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n        userData.emails = emailList;\n      }\n    }\n  }\n\n  const uniqueId = getLdapUserUniqueID(ldapUser);\n\n  if (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n    userData['services.ldap.id'] = uniqueId.value;\n    userData['services.ldap.idAttribute'] = uniqueId.attribute;\n  }\n\n  if (user.authenticationMethod !== 'ldap') {\n    userData.ldap = true;\n  }\n\n  if (_.size(userData)) {\n    return userData;\n  }\n}\n\n\nexport function syncUserData(user, ldapUser) {\n  log_info('Syncing user data');\n  log_debug('user', {'email': user.email, '_id': user._id});\n  // log_debug('ldapUser', ldapUser.object);\n\n  if (LDAP.settings_get('LDAP_USERNAME_FIELD') !== '') {\n    const username = slug(getLdapUsername(ldapUser));\n    if (user && user._id && username !== user.username) {\n      log_info('Syncing user username', user.username, '->', username);\n      Meteor.users.findOne({ _id: user._id }, { $set: { username }});\n    }\n  }\n\n  if (LDAP.settings_get('LDAP_FULLNAME_FIELD') !== '') {\n    const fullname= getLdapFullname(ldapUser);\n    log_debug('fullname=',fullname);\n    if (user && user._id && fullname !== '') {\n      log_info('Syncing user fullname:', fullname);\n      Meteor.users.update({ _id:  user._id }, { $set: { 'profile.fullname' : fullname, }});\n    }\n  }\n\n  if (LDAP.settings_get('LDAP_EMAIL_FIELD') !== '') {\n    const email = getLdapEmail(ldapUser);\n    log_debug('email=', email);\n\n    if (user && user._id && email !== '') {\n      log_info('Syncing user email:', email);\n      Meteor.users.update({\n        _id: user._id\n      }, {\n        $set: {\n          'emails.0.address': email,\n        }\n      });\n    }\n  }\n\n}\n\nexport function addLdapUser(ldapUser, username, password) {\n  const uniqueId = getLdapUserUniqueID(ldapUser);\n\n  const userObject = {\n  };\n\n  if (username) {\n    userObject.username = username;\n  }\n\n  const userData = getDataToSyncUserData(ldapUser, {});\n\n  if (userData && userData.emails && userData.emails[0] && userData.emails[0].address) {\n    if (Array.isArray(userData.emails[0].address)) {\n      userObject.email = userData.emails[0].address[0];\n    } else {\n      userObject.email = userData.emails[0].address;\n    }\n  } else if (ldapUser.mail && ldapUser.mail.indexOf('@') > -1) {\n    userObject.email = ldapUser.mail;\n  } else if (LDAP.settings_get('LDAP_DEFAULT_DOMAIN') !== '') {\n    userObject.email = `${ username || uniqueId.value }@${ LDAP.settings_get('LDAP_DEFAULT_DOMAIN') }`;\n  } else {\n    const error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n    log_error(error);\n    throw error;\n  }\n\n  log_debug('New user data', userObject);\n\n  if (password) {\n    userObject.password = password;\n  }\n\n  try {\n    // This creates the account with password service\n    userObject.ldap = true;\n    userObject._id = Accounts.createUser(userObject);\n\n    // Add the services.ldap identifiers\n    Meteor.users.update({ _id:  userObject._id }, {\n\t\t    $set: {\n\t\t        'services.ldap': { id: uniqueId.value },\n\t\t        'emails.0.verified': true,\n\t\t        'authenticationMethod': 'ldap',\n\t\t    }});\n  } catch (error) {\n    log_error('Error creating user', error);\n    return error;\n  }\n\n  syncUserData(userObject, ldapUser);\n\n  return {\n    userId: userObject._id,\n  };\n}\n\nexport function importNewUsers(ldap) {\n  if (LDAP.settings_get('LDAP_ENABLE') !== true) {\n    log_error('Can\\'t run LDAP Import, LDAP is disabled');\n    return;\n  }\n\n  if (!ldap) {\n    ldap = new LDAP();\n    ldap.connectSync();\n  }\n\n  let count = 0;\n  ldap.searchUsersSync('*', Meteor.bindEnvironment((error, ldapUsers, {next, end} = {}) => {\n    if (error) {\n      throw error;\n    }\n\n    ldapUsers.forEach((ldapUser) => {\n      count++;\n\n      const uniqueId = getLdapUserUniqueID(ldapUser);\n      // Look to see if user already exists\n      const userQuery = {\n        'services.ldap.id': uniqueId.value,\n      };\n\n      log_debug('userQuery', userQuery);\n\n      let username;\n      if (LDAP.settings_get('LDAP_USERNAME_FIELD') !== '') {\n        username = slug(getLdapUsername(ldapUser));\n      }\n\n      // Add user if it was not added before\n      let user = Meteor.users.findOne(userQuery);\n\n      if (!user && username && LDAP.settings_get('LDAP_MERGE_EXISTING_USERS') === true) {\n        const userQuery = {\n          username,\n        };\n\n        log_debug('userQuery merge', userQuery);\n\n        user = Meteor.users.findOne(userQuery);\n        if (user) {\n          syncUserData(user, ldapUser);\n        }\n      }\n\n      if (!user) {\n        addLdapUser(ldapUser, username);\n      }\n\n      if (count % 100 === 0) {\n        log_info('Import running. Users imported until now:', count);\n      }\n    });\n\n    if (end) {\n      log_info('Import finished. Users imported:', count);\n    }\n\n    next(count);\n  }));\n}\n\nfunction sync() {\n  if (LDAP.settings_get('LDAP_ENABLE') !== true) {\n    return;\n  }\n\n  const ldap = new LDAP();\n\n  try {\n    ldap.connectSync();\n\n    let users;\n    if (LDAP.settings_get('LDAP_BACKGROUND_SYNC_KEEP_EXISTANT_USERS_UPDATED') === true) {\n      users = Meteor.users.find({ 'services.ldap': { $exists: true }});\n    }\n\n    if (LDAP.settings_get('LDAP_BACKGROUND_SYNC_IMPORT_NEW_USERS') === true) {\n      importNewUsers(ldap);\n    }\n\n    if (LDAP.settings_get('LDAP_BACKGROUND_SYNC_KEEP_EXISTANT_USERS_UPDATED') === true) {\n      users.forEach(function(user) {\n        let ldapUser;\n\n        if (user.services && user.services.ldap && user.services.ldap.id) {\n          ldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n        } else {\n          ldapUser = ldap.getUserByUsernameSync(user.username);\n        }\n\n        if (ldapUser) {\n          syncUserData(user, ldapUser);\n        } else {\n          log_info('Can\\'t sync user', user.username);\n        }\n      });\n    }\n  } catch (error) {\n    log_error(error);\n    return error;\n  }\n  return true;\n}\n\nconst jobName = 'LDAP_Sync';\n\nconst addCronJob = _.debounce(Meteor.bindEnvironment(function addCronJobDebounced() {\n  let sc=SyncedCron.SyncedCron; //Why ?? something must be wrong in the import\n  if (LDAP.settings_get('LDAP_BACKGROUND_SYNC') !== true) {\n    log_info('Disabling LDAP Background Sync');\n    if (sc.nextScheduledAtDate(jobName)) {\n      sc.remove(jobName);\n    }\n    return;\n  }\n\n  log_info('Enabling LDAP Background Sync');\n  sc.add({\n    name: jobName,\n    schedule: function(parser) {\n    if (LDAP.settings_get('LDAP_BACKGROUND_SYNC_INTERVAL')) {\n       return parser.text(LDAP.settings_get('LDAP_BACKGROUND_SYNC_INTERVAL'));\n    }\n    else {\n       return parser.recur().on(0).minute();\n    }},\n    job: function() {\n      sync();\n    },\n  });\n  sc.start();\n\n}), 500);\n\nMeteor.startup(() => {\n  Meteor.defer(() => {\n    if(LDAP.settings_get('LDAP_BACKGROUND_SYNC')){addCronJob();}\n  });\n});\n"]}