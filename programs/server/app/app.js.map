{"version":3,"sources":["meteor://💻app/models/lib/fsHooks/createOnAfterUpload.js","meteor://💻app/models/lib/grid/createBucket.js","meteor://💻app/models/lib/grid/createObjectId.js","meteor://💻app/models/lib/attachmentStoreStrategy.js","meteor://💻app/models/lib/fileStoreStrategy.js","meteor://💻app/models/lib/httpStream.js","meteor://💻app/models/server/ExporterCardPDF.js","meteor://💻app/models/server/ExporterExcel.js","meteor://💻app/models/server/createWorkbook.js","meteor://💻app/models/server/metrics.js","meteor://💻app/models/accessibilitySettings.js","meteor://💻app/models/accountSettings.js","meteor://💻app/models/actions.js","meteor://💻app/models/activities.js","meteor://💻app/models/announcements.js","meteor://💻app/models/attachments.js","meteor://💻app/models/avatars.js","meteor://💻app/models/boards.js","meteor://💻app/models/cardCommentReactions.js","meteor://💻app/models/cardComments.js","meteor://💻app/models/cards.js","meteor://💻app/models/checklistItems.js","meteor://💻app/models/checklists.js","meteor://💻app/models/counters.js","meteor://💻app/models/csvCreator.js","meteor://💻app/models/customFields.js","meteor://💻app/models/export.js","meteor://💻app/models/exportExcel.js","meteor://💻app/models/exportPDF.js","meteor://💻app/models/exporter.js","meteor://💻app/models/fileValidation.js","meteor://💻app/models/impersonatedUsers.js","meteor://💻app/models/import.js","meteor://💻app/models/integrations.js","meteor://💻app/models/invitationCodes.js","meteor://💻app/models/lists.js","meteor://💻app/models/org.js","meteor://💻app/models/orgUser.js","meteor://💻app/models/rules.js","meteor://💻app/models/runOnServer.js","meteor://💻app/models/settings.js","meteor://💻app/models/swimlanes.js","meteor://💻app/models/tableVisibilityModeSettings.js","meteor://💻app/models/team.js","meteor://💻app/models/translation.js","meteor://💻app/models/trelloCreator.js","meteor://💻app/models/triggers.js","meteor://💻app/models/unsavedEdits.js","meteor://💻app/models/users.js","meteor://💻app/models/usersessiondata.js","meteor://💻app/models/watchable.js","meteor://💻app/models/wekanCreator.js","meteor://💻app/models/wekanmapper.js","meteor://💻app/server/lib/emailLocalization.js","meteor://💻app/server/lib/importer.js","meteor://💻app/server/lib/utils.js","meteor://💻app/server/notifications/email.js","meteor://💻app/server/notifications/notifications.js","meteor://💻app/server/notifications/outgoing.js","meteor://💻app/server/notifications/profile.js","meteor://💻app/server/notifications/watch.js","meteor://💻app/server/publications/accountSettings.js","meteor://💻app/server/publications/activities.js","meteor://💻app/server/publications/announcements.js","meteor://💻app/server/publications/attachments.js","meteor://💻app/server/publications/avatars.js","meteor://💻app/server/publications/boards.js","meteor://💻app/server/publications/cards.js","meteor://💻app/server/publications/notifications.js","meteor://💻app/server/publications/org.js","meteor://💻app/server/publications/people.js","meteor://💻app/server/publications/rules.js","meteor://💻app/server/publications/settings.js","meteor://💻app/server/publications/swimlanes.js","meteor://💻app/server/publications/tableVisibilityModeSettings.js","meteor://💻app/server/publications/team.js","meteor://💻app/server/publications/translation.js","meteor://💻app/server/publications/unsavedEdits.js","meteor://💻app/server/publications/users.js","meteor://💻app/server/00checkStartup.js","meteor://💻app/server/accounts-common.js","meteor://💻app/server/authentication.js","meteor://💻app/server/card-opened-webhook.js","meteor://💻app/server/cors.js","meteor://💻app/server/header-login.js","meteor://💻app/server/max-image-pixel.js","meteor://💻app/server/max-size.js","meteor://💻app/server/migrations.js","meteor://💻app/server/policy.js","meteor://💻app/server/richer-editor-setting-helper.js","meteor://💻app/server/rulesHelper.js","meteor://💻app/server/saml.js","meteor://💻app/server/spinner.js","meteor://💻app/server/statistics.js","meteor://💻app/server/triggersDef.js","meteor://💻app/imports/i18n/accounts.js","meteor://💻app/imports/i18n/blaze.js","meteor://💻app/imports/i18n/index.js","meteor://💻app/imports/i18n/languages.js","meteor://💻app/imports/i18n/moment.js","meteor://💻app/imports/i18n/tap.js","meteor://💻app/imports/reactiveCache.js","meteor://💻app/config/accounts.js","meteor://💻app/config/const.js","meteor://💻app/config/models.js","meteor://💻app/config/query-classes.js","meteor://💻app/config/router.js","meteor://💻app/config/search-const.js","meteor://💻app/sandstorm.js"],"names":["_objectSpread","module","link","default","v","export","createOnAfterUpload","Meteor","fs","bucket","onAfterUpload","file","self","Object","keys","versions","forEach","versionName","metadata","meta","fileId","_id","createReadStream","path","pipe","openUploadStream","name","contentType","type","on","err","unlink","collection","findOne","bindEnvironment","ver","property","concat","update","$set","toHexString","createBucket","MongoInternals","bucketName","options","NpmModule","GridFSBucket","defaultRemoteCollectionDriver","mongo","db","createObjectId","_ref","gridFsFileId","ObjectID","AttachmentStoreStrategyGridFs","AttachmentStoreStrategyFilesystem","AttachmentStoreStrategyS3","FileStoreStrategy","FileStoreStrategyFilesystem","FileStoreStrategyGridFs","FileStoreStrategyS3","insertActivity","fileObj","activityType","Activities","insert","userId","attachmentId","attachmentName","boardId","cardId","listId","swimlaneId","constructor","gridFsBucket","source","onAfterRemove","s3Bucket","STORAGE_NAME_FILESYSTEM","STORAGE_NAME_GRIDFS","STORAGE_NAME_S3","FileStoreStrategyFactory","moveToStorage","copyFile","rename","httpStreamOutput","Minio","require","classFileStoreStrategyFilesystem","storagePath","classFileStoreStrategyGridFs","classFileStoreStrategyS3","getFileStrategy","storage","version","pipePath","ret","includes","interceptDownload","http","cacheControl","getReadStream","getWriteStream","filePath","writeStreamFinished","finishedData","getNewPath","_","isString","join","newFilePath","getStorageName","_http$params","_http$params$query","readStream","downloadFlag","params","query","download","gfsId","getGridFsObjectId","openDownloadStream","gridFsFileIdName","getGridFsFileIdName","Attachments","delete","console","error","$unset","getGridFsFileId","createWriteStream","renameSync","process","env","S3","settings","s3","JSON","parse","s3Conf","bound","callback","key","secret","endPoint","port","sslEnabled","s3Client","Client","useSSL","accessKey","secretKey","UserFiles","FilesCollection","debug","collectionName","allowClientCode","fileRef","each","vRef","Random","id","extension","putObject","Bucket","Key","Body","ContentType","upd","updError","opts","request","headers","range","clone","array","split","start","parseInt","end","isNaN","chunkSize","size","Range","fileColl","getObject","response","finished","httpResponse","replace","dataStream","stream","PassThrough","serve","data","_origRemove","remove","selector","cursor","find","deleteObject","call","s3Id","getS3ObjectId","s3FileIdName","getS3FileIdName","gets3ObjectId","s3FileId","getS3FileId","storageDestination","fileStoreStrategyFactory","strategyRead","strategyWrite","writeStream","newCardId","newCard","ReactiveCache","getCard","tempPath","toString","addFile","fileName","copyFrom","copyStorage","fileSize","log","newName","strategy","write","statusCode","setHeader","getContentDisposition","dispositionType","encodedName","encodeURIComponent","dispositionName","dispositionEncoding","ExporterCardPDF","createWorkbook","_boardId","build","res","doc","PDFDocument","margin","fontSize","text","align","width","writeHead","outputSync","canExport","user","board","getBoard","isVisibleBy","ExporterExcel","moment","TAPi18n","userLanguage","Npm","os","byBoard","byBoardNoLinked","linkedId","$in","noBoardId","fields","result","_format","extend","stars","lists","getLists","cards","getCards","swimlanes","getSwimlanes","customFields","getCustomFields","boardIds","comments","getCardComments","activities","getActivities","rules","getRules","checklists","checklistItems","subtaskItems","triggers","actions","card","push","getChecklists","getChecklistItems","parentId","rule","getTriggers","triggerId","getActions","actionId","users","members","member","list","memberId","assignees","comment","activity","checklist","byUserIds","getOwnPropertyNames","userFields","username","getUsers","map","profile","avatarUrl","FlowRouter","url","workbook","creator","__","lastModifiedBy","created","Date","modified","lastPrinted","filename","title","worksheetTitle","length","words","tmpTitle","i","substr","worksheet","addWorksheet","properties","tabColor","argb","pageSetup","paperSize","orientation","ws","getWorksheet","defaultRowHeight","columns","style","font","numFmt","mergeCells","getCell","value","alignment","vertical","horizontal","getRow","height","jmem","jassig","jmeml","jassigl","ia","jlist","klist","jswimlane","kswimlane","jlabel","isFirst","klabel","labels","addTZhours","jdate","curdate","checkCorrectDate","isValid","cellCenter","cellno","wrapText","cellLeft","cellCardAlignment","allBorder","border","top","left","bottom","right","addRow","values","description","bold","createdAt","modifiedAt","jcard","jcmem","j","jcassig","ja","jclabel","jl","labelIds","parentCard","parentCardTitle","t","Number","dateLastActivity","receivedAt","startAt","dueAt","endAt","isOvertime","spentTime","y","worksheet2","ws2","cellCardAlignmentWs2","allBorderWs2","commentcnt","jcomment","cardTitle","xlsx","then","Excel","Workbook","Users","acceptedIpAddress","ipAddress","trustedIpAddress","METRICS_ACCEPTED_IP_ADDRESS","undefined","accessToken","req","valid_token","METRICS_ACCESS_TOKEN","token","authorization","parts","scheme","credentials","test","access_token","getBoardTitleWithMostActivities","dateWithXdaysAgo","nbLimit","Promise","await","rawCollection","aggregate","$match","$gte","$group","count","$sum","$sort","$lookup","from","localField","foreignField","as","$project","limit","toArray","getBoards","startup","WebApp","connectHandlers","use","next","socket","remoteAddress","metricsRes","resCount","allOpenedSockets","server","stream_server","open_sockets","connectedUserIds","_meteorSession","archived","$size","xdays","lastConnectionDate","boardTitleWithMostActivities","boardWithMostActivities","lookup","index","e","AccessibilitySettings","Mongo","Collection","attachSchema","SimpleSchema","enabled","Boolean","defaultValue","String","optional","body","autoValue","isInsert","isUpsert","$setOnInsert","unset","denyUpdate","isUpdate","allow","getUser","isAdmin","isServer","_collection","createIndex","accessibilitySetting","sort","exportDefault","AccountSettings","booleanValue","decimal","upsert","helpers","allowEmailChange","allowUserNameChange","allowUserDelete","Actions","allowIsBoardAdmin","before","fieldNames","modifier","desc","oldBoard","oldBoardId","getList","swimlane","getSwimlane","oldSwimlane","oldSwimlaneId","oldList","oldListId","getCardComment","commentId","attachment","getAttachment","getChecklist","checklistId","checklistItem","getChecklistItem","checklistItemId","subtasks","subtaskId","customField","getCustomField","customFieldId","label","labelId","after","_transform","RulesHelper","executeRules","partialFilterExpression","$exists","participants","watchers","activityId","getName","emails","userEmails","absoluteUrl","union","knownUsers","u","mentionRegex","currentMention","exec","ignored","quoteduser","simple","knownUids","atUser","findWhere","uid","atUsername","atEmails","customFieldValue","color","timeKey","timeValue","timeOldValue","BIGEVENTS","BIGEVENTS_PATTERN","atype","RegExp","activeMembers","watchingUsers","pluck","where","level","trackingUsers","intersection","Notifications","notify","integrations","getIntegrations","Integrations","Const","GLOBAL_WEBHOOK_ID","integration","Announcements","announcements","isFileValid","attachmentUploadExternalProgram","attachmentUploadMimeTypes","attachmentUploadSize","attachmentBucket","ATTACHMENTS_UPLOAD_MIME_TYPES","trim","ATTACHMENTS_UPLOAD_MAX_SIZE","ATTACHMENTS_UPLOAD_EXTERNAL_PROGRAM","WRITABLE_PATH","namingFunction","_opts$file","filenameWithoutExtension","extensionWithDot","Math","random","slice","sanitize","str","max","replacement","_now","uploadedAtOstrio","defer","files","protected","isPublic","hasMember","allowIsBoardMember","fetch","methods","moveAttachmentToStorage","fileObjId","check","renameAttachment","validateAttachment","validateAttachmentAndMoveToStorage","existsSync","mkdirSync","recursive","formatFleURL","filesize","avatarsUploadExternalProgram","avatarsUploadMimeTypes","avatarsUploadSize","avatarsBucket","AVATARS_UPLOAD_MIME_TYPES","AVATARS_UPLOAD_MAX_SIZE","avatarsUploadSize_","isNumber","AVATARS_UPLOAD_EXTERNAL_PROGRAM","Avatars","onBeforeUpload","startsWith","setAvatarUrl","onBeforeRemove","isOwner","escapeForRegex","ALLOWED_BOARD_COLORS","ALLOWED_COLORS","TYPE_BOARD","TYPE_TEMPLATE_BOARD","TYPE_TEMPLATE_CONTAINER","Boards","slug","field","isSet","getSlug","archivedAt","allowedValues","isActive","isNoComments","isCommentOnly","isWorker","permission","orgs","teams","backgroundImageURL","allowsCardCounterList","allowsBoardMemberList","subtasksDefaultBoardId","subtasksDefaultListId","dateSettingsDefaultBoardId","dateSettingsDefaultListId","allowsSubtasks","allowsAttachments","allowsChecklists","allowsComments","allowsDescriptionTitle","allowsDescriptionText","allowsDescriptionTextOnMinicard","allowsCoverAttachmentOnMinicard","allowsBadgeAttachmentOnMinicard","allowsCardSortingByNumberOnMinicard","allowsCardNumber","allowsActivities","allowsLabels","allowsCreator","allowsCreatorOnMinicard","allowsAssignee","allowsMembers","allowsRequestedBy","allowsCardSortingByNumber","allowsShowLists","allowsAssignedBy","allowsReceivedDate","allowsStartDate","allowsEndDate","allowsDueDate","presentParentTask","showActivities","copy","oldId","oldWatchers","copyTitle","cfMap","cf","CustomFields","Cards","actionsMap","action","triggersMap","trigger","Triggers","Rules","uniqueTitle","isActiveMember","draggableLists","newestLists","getCurrentUser","_getListSortBy","sortKey","starred","getLastList","nullSortLists","$eq","nextSwimlane","$ne","nullSortSwimlanes","hasOvertimeCards","hasSpentTimeCards","$gt","linkedBoardId","sortBy","activeOrgs","activeTeams","activeAdmins","memberUsers","getLabel","getLabelById","labelIndex","indexOf","memberIndex","hasAdmin","hasNoComments","hasCommentOnly","hasWorker","hasAnyAllowsDate","hasAnyAllowsUser","originRelativeUrl","colorClass","pushLabel","direct","$push","setNewLabelOrder","newLabelOrderOnlyIds","every","_label","newLabels","searchBoards","term","Match","OneOf","projection","regex","$or","searchSwimlanes","isTemplatesBoard","$nin","searchLists","searchCards","excludeLinked","$elemMatch","getDefaultSubtasksBoardId","Swimlanes","getDefaultSubtasksBoard","getDefaultDateSettingsBoardId","getDefaultDateSettingsBoard","getDefaultSubtasksListId","Lists","setSubtasksDefaultListId","getDefaultSubtasksList","getDefaultDateSettingsListId","setDateSettingsDefaultListId","getDefaultDateSettingsList","getDefaultSwimline","getNextCardNumber","boardCards","cardNumber","maxCardNr","cardsDueInBetween","$lte","cardsInInterval","isTemplateBoard","mutations","archive","restore","setDescription","setColor","setBackgroundImageURL","currentUser","isBoardAdmin","setVisibility","visibility","addLabel","editLabel","removeLabel","$pull","changeOwnership","fromId","toId","addMember","removeMember","allowRemove","setMemberPermission","currentUserId","arguments","setAllowsSubtasks","setAllowsCreator","setAllowsCreatorOnMinicard","setAllowsMembers","setAllowsChecklists","setAllowsAssignee","setAllowsAssignedBy","setAllowsRequestedBy","setAllowsCardSortingByNumber","setAllowsShowLists","setAllowsAttachments","setAllowsLabels","setAllowsComments","setAllowsDescriptionTitle","setAllowsCardNumber","setAllowsDescriptionText","setallowsDescriptionTextOnMinicard","setallowsCoverAttachmentOnMinicard","setallowsBadgeAttachmentOnMinicard","setallowsCardSortingByNumberOnMinicard","setAllowsActivities","setAllowsReceivedDate","setAllowsCardCounterList","setAllowsBoardMemberList","setAllowsStartDate","setAllowsEndDate","setAllowsDueDate","setSubtasksDefaultBoardId","setPresentParentTask","move","sortIndex","toggleShowActivities","boardRemover","element","m","match","base","groups","baseTitle","boards","num","n","userSearch","userBoards","orgId","orgIds","teamId","teamIds","userBoardIds","colorMap","colors","labelColors","contains","deny","isObject","nbAdmins","removedMemberId","getBackgroundImageURL","backgroundImageUrl","quitBoard","Error","acceptInvite","myLabelNames","names","filter","uniq","myBoardNames","setAllBoardsHideActivities","multi","archiveBoard","setBoardOrgs","boardOrgsArray","currBoardId","Array","setBoardTeams","boardTeamsArray","membersArray","lastBoard","unique","activityTypeId","removedLabelId","foreachRemovedMember","set","setWatcher","JsonRoutes","add","Authentication","checkLoggedIn","paramUserId","checkAdminOrCondition","sendResult","code","checkUserId","private","public","paramBoardId","checkBoardAccess","owner","defaultSwimlaneId","hasOwnProperty","adminAccess","some","isTrue","toLowerCase","getAttachments","attachmentType","urlDownload","commentReactionSchema","reactionCodepoint","custom","userIds","CardCommentReactions","cardCommentId","reactions","DOMPurify","CardComments","cardCommentReactions","getCardCommentReaction","toggleReaction","reaction","r","userHasReacted","splice","hookOptions","fetchPrevious","commentCreation","textSearch","textArray","$and","getActivity","paramCardId","authorId","paramCommentId","cardComment","ReactiveMiniMongoIndex","TYPE_CARD","TYPE_LINKED_BOARD","TYPE_LINKED_CARD","coverId","requestedBy","assignedBy","subtaskSort","vote","poker","targetId_gantt","linkType_gantt","linkId_gantt","hideFinishedChecklistIfItemsAreHidden","isEqual","setGanttTargetId","sourceId","targetId","linkType","linkId","removeGanttTargetId","mapCustomFieldsToBoard","oldCf","newCf","addBoard","oldCard","oldBoardLabels","oldCardLabels","newBoard","newBoardLabels","newCardLabels","attachments","att","ch","subtask","cmt","linkCard","stringify","getRealId","__id","isLinkedCard","boardLabels","cardLabels","hasLabel","getSort","isBoolean","sorting","getMinSort","getMaxSort","isAssigned","getMembers","isAssignee","assigneeId","getAssignees","isLinkedBoard","getCardCommentsWithCardId","uploadedAt","cover","getChecklistsWithCardId","firstChecklist","first","lastChecklist","last","checklistItemCount","itemCount","reduce","prev","checklistFinishedCount","finishedCount","checklistFinished","hasChecklist","getSubTasksWithParentId","subtasksFinished","allSubtasks","subtasksCount","subtasksFinishedCount","subtasksArchived","allSubtasksCount","customFieldIndex","customFieldsWD","definitions","definition","trueValue","dropdownItems","a","b","localeCompare","canBeRestored","getWipLimit","parentCardName","parentListId","crtParentId","crt","unshift","parentList","resultId","parentString","sep","elem","isTopLevel","isLinked","getDescription","assignee","assignMember","$addToSet","assignAssignee","addAssignee","unassignMember","unassignAssignee","removeAssignee","toggleMember","toggleAssignee","getReceived","setReceived","getStart","setStart","getDue","setDue","getEnd","setEnd","getIsOvertime","setIsOvertime","getSpentTime","setSpentTime","getVoteQuestion","question","getVotePublic","getVoteEnd","expiredVote","isBefore","voteMemberPositive","positive","voteMemberNegative","negative","voteState","state","getPokerQuestion","getPokerEstimation","estimation","getPokerEnd","expiredPoker","pokerMemberOne","one","pokerMemberTwo","two","pokerMemberThree","three","pokerMemberFive","five","pokerMemberEight","eight","pokerMemberThirteen","thirteen","pokerMemberTwenty","twenty","pokerMemberForty","forty","pokerMemberOneHundred","oneHundred","pokerMemberUnsure","unsure","pokerState","getTitle","getCardNumber","getBoardTitle","setTitle","getArchived","setRequestedBy","getRequestedBy","setAssignedBy","getAssignedBy","isTemplateCard","votePublic","voteAllowNonBoardMembers","allowNonBoardMembers","voteCountNegative","voteCountPositive","voteCount","pokerAllowNonBoardMembers","pokerCountOne","pokerCountTwo","pokerCountThree","pokerCountFive","pokerCountEight","pokerCountThirteen","pokerCountTwenty","pokerCountForty","pokerCountOneHundred","pokerCountUnsure","pokerCount","pokerWinner","pokerListMaps","pokerWinnersListMap","pokerCard","task","applyToChildren","funct","moveToEndOfList","parentElementDom","$","get","lastCardDom","Utils","calculateIndex","moveOptionalArgs","mutatedFields","newCardLabelIds","newCardNumber","assign","without","toggleLabel","newColor","assignCustomField","unassignCustomField","toggleCustomField","toggleHideFinishedChecklist","setCustomField","setCover","unsetCover","unsetReceived","unsetStart","unsetDue","unsetEnd","setOvertime","unsetSpentTime","setParentId","setVoteQuestion","publicVote","unsetVote","setVoteEnd","unsetVoteEnd","setVote","forIt","setPokerQuestion","setPokerEstimation","unsetPokerEstimation","unsetPoker","setPokerEnd","unsetPokerEnd","setPoker","replayPoker","updateActivities","lidx","cardMove","boardName","oldBoardName","swimlaneName","listName","cardState","cardMembers","cardAssignees","act","cardCustomFields","dotNotation","cardCreation","createCardWithDueDate","dueDate","usedId","cardRemover","ChecklistItems","Checklists","findDueCards","days","seekDue","$from","$to","$lt","now","aday","day","setHours","args","addCronJob","debounce","findDueCardsDebounced","envValue","NOTIFY_DUE_DAYS_BEFORE_AND_AFTER","notifydays","iValue","notifyitvl","NOTIFY_DUE_AT_HOUR_OF_DAY","defaultitvl","itvl","scheduler","job","hour","getHours","setTimeout","copyCard","insertAtTop","mergeCardValues","previous","dla","timingaction","oldvalue","subtract","toISOString","paramSwimlaneId","paramListId","addPermission","allowIsBoardMemberCommentOnly","paramParentId","nextCardNumber","customFieldsArr","automaticallyOnCard","alwaysOnCard","currentCards","board_cards_count","list_cards_count","newBoardId","newSwimlaneId","newListId","updated","newTitle","newSort","newParentId","newDescription","newVote","newPoker","newlabelIds","newrequestedBy","newassignedBy","newreceivedAt","newstartAt","newdueAt","newendAt","newspentTime","isOverTime","newisOverTime","newcustomFields","newmembers","newassignees","newParamSwimlaneId","newParamListId","fieldName","message","paramCustomFieldId","paramCustomFieldValue","updatedCustomFields","isFinished","allowIsBoardMemberByCard","uncheck","toggleItem","itemCreation","checklistItemName","itemRemover","publishCheckActivity","publishChekListCompleted","checkList","checklistName","publishChekListUncompleted","paramItemId","itemId","paramChecklistId","finishedAt","hideCheckedChecklistItems","hideAllChecklistItems","copyObj","newChecklistId","item","items","getChecklistItemsWithChecklistId","firstItem","lastItem","_item","finishedPercent","checklistItemsFinished","round","showChecklist","checkAllItems","checkItems","uncheckAllItems","itemIndex","toggleHideCheckedChecklistItems","toggleHideAllChecklistItems","idx","Counters","CsvCreator","isEmptyObject","_nowDate","fieldIndex","membersMapping","dateString","_user","wekanUserId","mapHeadertoCardFieldIndex","headerRow","stage","position","currencyCode","createCustomFields","option","showOnCard","showLabelOnMiniCard","createBoard","csvData","boardToCreate","wekanId","labelsToCreate","Set","importedLabel","labelName","labelColor","labelToCreate","system","createSwimlanes","swimlaneToCreate","updatedAt","createLists","numOfCreatedLists","listToCreate","existingList","createCards","cardToCreate","labelToApply","wekanMembers","importedMember","wId","create","currentBoardId","isSandstorm","sandstorm","currentBoard","showSumAtTopOfList","addToAllCards","$not","allowIsAnyBoardMember","customFieldCreation","customFieldDeletion","customFieldEdit","paramFieldId","paramItems","isArray","$each","paramDropdownItemId","dropdownItemId","paramName","Exporter","Picker","impersonateDone","adminId","loginToken","authToken","hashToken","Accounts","_hashLoginToken","getImpersonatedUser","exporter","ImpersonatedUsers","reason","route","exportType","delimiter","language","Uint8Array","buildCsv","runOnServer","exporterExcel","exporterCardPDF","Papa","_attachmentId","getBase64Data","buffer","Buffer","allocUnsafe","fill","tmpFile","tmpdir","pid","tmpWriteable","chunk","getBase64DataSync","wrapAsync","byBoardAndAttachment","filebase64","userDelimiter","columnHeaders","cardRows","papaconfig","quotes","quoteChar","escapeChar","header","newline","skipEmptyLines","escapeFormulae","customFieldMap","currentRow","_ref2","_ref3","usernames","_ref4","_ref5","_ref6","format","positiveVoters","negativeVoters","_ref7","_ref8","votingResult","trimRight","customFieldValuesToPush","dropdownOptions","_ref9","fieldObj","_ref10","fieldValue","valueIndex","unparse","promisify","FileType","asyncExec","mimeTypesAllowed","sizeAllowed","externalCommandLine","asyncApply","TrelloCreator","WekanCreator","getMembersToMap","importBoard","importSource","Maybe","cloneBoard","sourceBoardId","additionalData","mappingById","ONEWAY","TWOWAY","WEBHOOK_TYPES","permissionHelper","paramIntId","intId","getIntegration","newEnabled","newUrl","newToken","newActivities","$pullAll","InvitationCodes","email","regEx","RegEx","Email","boardsToBeInvited","valid","author","wipLimit","collapsed","existingListWithSameName","boardList","Filter","mongoSelector","cardsUnfiltered","allCards","isTemplateList","isStarred","isCollapsed","star","enable","collapse","toggleSoftLimit","toggle","toggleWipLimit","setWipLimit","userArchivedLists","userArchivedListIds","archivedLists","archivedListIds","applyWipLimit","enableWipLimit","enableSoftLimit","myLists","newStarred","newCollapsed","newWipLimit","Org","orgDisplayName","orgDesc","orgShortName","orgAutoAddUsersWithDomainName","orgWebsite","orgIsActive","setCreateOrg","_ReactiveCache$getCur","nOrgNames","getOrgs","setCreateOrgFromOidc","setOrgDisplayName","org","_ReactiveCache$getCur2","setOrgDesc","_ReactiveCache$getCur3","setOrgShortName","_ReactiveCache$getCur4","setAutoAddUsersWithDomainName","_ReactiveCache$getCur5","setOrgIsActive","_ReactiveCache$getCur6","setOrgAllFieldsFromOidc","setOrgAllFields","_ReactiveCache$getCur7","OrgUser","incrementCounter","role","getAction","getTrigger","fct","Settings","disableRegistration","disableForgotPassword","productName","displayAuthenticationMethod","defaultAuthenticationMethod","spinnerName","hideLogo","hideCardCounterList","hideBoardMemberList","customLoginLogoImageUrl","customLoginLogoLinkUrl","customHelpLinkUrl","textBelowCustomLoginLogo","automaticLinkedUrlSchemes","customTopLeftCornerLogoImageUrl","customTopLeftCornerLogoLinkUrl","customTopLeftCornerLogoHeight","oidcBtnText","mailDomainName","legalNotice","accessibilityPageEnabled","accessibilityTitle","accessibilityContent","mailUrl","mailServer","host","protocol","enableTLS","password","setting","getCurrentSetting","domain","ROOT_URL","defaultSetting","newSetting","MAIL_URL","emailTemplates","MAIL_FROM","getRandomNum","min","rand","getEnvVar","loadOidcConfig","service","config","ServiceConfiguration","configurations","sendInvitationEmail","icode","getInvitationCode","_ReactiveCache$getUse","_ReactiveCache$getUse2","fullName","fullname","inviter","lang","getLanguage","EmailLocalization","sendEmail","to","subject","send","isNonAdminAllowedToSendMail","currSett","isAllowed","address","endsWith","isLdapEnabled","LDAP_ENABLE","isOauth2Enabled","OAUTH2_ENABLED","isCasEnabled","CAS_ENABLED","isApiEnabled","WITH_API","sendInvitation","rc","userExist","invitation","sendSMTPTestEmail","unblock","lng","getCustomUI","isDisableRegistration","isDisableForgotPassword","getMatomoConf","siteId","doNotTrack","MATOMO_DO_NOT_TRACK","withUserName","MATOMO_WITH_USERNAME","_isLdapEnabled","_isOauth2Enabled","_isCasEnabled","_isApiEnabled","getAuthenticationsEnabled","ldap","oauth2","cas","getOauthServerUrl","OAUTH2_SERVER_URL","getOauthDashboardUrl","DASHBOARD_URL","getDefaultAuthenticationMethod","DEFAULT_AUTHENTICATION_METHOD","isPasswordLoginEnabled","PASSWORD_LOGIN_ENABLED","isOidcRedirectionEnabled","OIDC_REDIRECTION_ENABLED","getServiceConfiguration","toBoardId","toList","toListId","isTemplateSwimlane","isTemplateContainer","isListTemplatesSwimlane","listTemplatesSwimlaneId","isCardTemplatesSwimlane","cardTemplatesSwimlaneId","isBoardTemplatesSwimlane","boardTemplatesSwimlaneId","userArchivedSwimlanes","userArchivedSwimlaneIds","swim","archivedSwimlanes","archivedSwimlaneIds","TableVisibilityModeSettings","allowPrivateOnly","Team","teamDisplayName","teamDesc","teamShortName","teamWebsite","teamIsActive","setCreateTeam","nTeamNames","getTeams","setCreateTeamFromOidc","setTeamDisplayName","team","setTeamDesc","setTeamShortName","setTeamIsActive","setTeamAllFieldsFromOidc","setTeamAllFields","Translation","translationText","setCreateTranslation","nTexts","getTranslations","setTranslationText","translation","DateString","Where","dateAsString","ISO_8601","createdBy","attachmentIds","trelloUserId","checkActions","trelloActions","ObjectIncluding","date","checkBoard","trelloBoard","prefs","background","permissionLevel","checkCards","trelloCards","closed","idLabels","idMembers","pos","checkLabels","trelloLabels","checkLists","trelloLists","checkChecklists","trelloChecklists","idBoard","idCard","createBoardAndLabels","getColor","getPermission","memberships","trelloMembership","trelloId","idMember","wekanMember","getAdmin","memberType","fieldToCreate","display","cardFront","opt","idList","due","idMembersVoted","positiveVotes","customFieldItems","idCustomField","idValue","checked","number","commentToCreate","idMemberCreator","trelloCoverId","idAttachmentCover","cb","load","links","createLabels","existingLabel","idLabelCreated","createChecklists","checklistToCreate","counter","checklistItemTocreate","trelloMemberType","trelloColorCode","mapColors","blue","orange","green","red","purple","pink","lime","sky","grey","wekanColor","simpleSchema","_schema","trelloPermissionCode","parseActions","trelloAttachment","trelloCardId","importActions","old","listAfter","getRule","fromList","findList","UnsavedEditCollection","docId","isAuthor","SyncedCron","Index","MongoDBEngine","allowedSortValues","defaultSortBy","boardView","blackbox","services","heartbeat","createdThroughApi","loginDisabled","authenticationMethod","sessionData","importUsernames","adminsNumber","UserSearchIndex","allowedFields","engine","searchObject","safeFields","isClient","isBoardMember","getCurrentBoard","isNotNoComments","isNotCommentOnly","isNotWorker","parseImportUsernames","usernamesString","importUsernamesString","orgsUserBelongs","orgIdsUserBelongs","teamsUserBelongs","teamIdsUserBelongs","starredBoards","hasStarred","isAutoWidth","autoWidthBoards","invitedBoards","isInvitedTo","listSortBy","keyPattern","$2","$1","hasSortBy","hasShowDesktopDragHandles","getListSortBy","getListSortTypes","getListSortByDirection","getListWidths","listWidths","getListWidth","getListConstraints","listConstraints","getListConstraint","getSwimlaneHeights","swimlaneHeights","getSwimlaneHeight","getMoveAndCopyDialogOptions","_ret","moveAndCopyDialog","getMoveChecklistDialogOptions","moveChecklistDialog","getCopyChecklistDialogOptions","copyChecklistDialog","hasTag","tag","tags","hasNotification","notifications","notification","dbIndex","activityObj","getActivityWithId","toReversed","showDesktopDragHandles","hasCustomFieldsGrid","customFieldsGrid","hasCardMaximized","cardMaximized","hasHiddenMinicardLabelText","hiddenMinicardLabelText","hasRescuedCardDescription","rescueCardDescription","getEmailBuffer","emailBuffer","getInitials","initials","memo","word","toUpperCase","getLimitToShowCardsCount","showCardsCountAt","getStartDayOfWeek","startDayOfWeek","getTemplatesBoardId","templatesBoardId","getTemplatesBoardSlug","isKeyboardShortcuts","keyboardShortcuts","isVerticalScrollbars","verticalScrollbars","isShowWeekOfYear","showWeekOfYear","User","setMoveAndCopyDialogOption","currentOptions","setMoveChecklistDialogOption","setCopyChecklistDialogOption","toggleBoardStar","queryKind","toggleAutoWidth","toggleKeyboardShortcuts","toggleVerticalScrollbars","toggleShowWeekOfYear","addInvite","removeInvite","addTag","removeTag","toggleTag","setListSortBy","setName","toggleDesktopHandles","toggleFieldsGrid","toggleCardMaximized","toggleLabelText","toggleRescueCardDescription","addNotification","removeNotification","addEmailBuffer","clearEmailBuffer","setShowCardsCountAt","setStartDayOfWeek","startDay","setBoardView","view","setListWidth","currentWidths","setListConstraint","constraint","currentConstraints","setSwimlaneHeight","currentHeights","toggleDesktopDragHandles","toggleHideCheckedItems","toggleCustomFieldsGrid","toggleMinicardLabelText","changeLimitToShowCardsCount","changeStartDayOfWeek","applyListWidth","applySwimlaneHeight","setCreateUser","userOrgsArray","userTeamsArray","nUsersWithUsername","nUsersWithEmail","createUser","setUsername","setEmail","shift","existingUser","verified","setUsernameAndEmail","setPassword","newPassword","setEmailVerified","setInitials","inviteUserToBoard","allowInvite","posAt","substring","newUserId","sendEnrollmentEmail","subBoard","userFullName","impersonate","setUserId","isImpersonated","setUsersTeamsTeamDisplayName","_ReactiveCache$getCur8","setUsersOrgsOrgDisplayName","_ReactiveCache$getCur9","onCreateUser","userCount","oidc","invitationCode","invitationcode","notificationCleanupDebounced","envRemoveAge","NOTIFICATION_TRAY_AFTER_READ_DAYS_BEFORE_REMOVE","defaultRemoveAge","removeAge","schedule","parser","read","removeDate","setDate","getDate","$regex","getStarredBoardsIds","oldIds","newIds","incrementBoards","boardsIds","inc","$inc","difference","fakeUserId","EnvironmentVariable","getUserId","CollectionHooks","fakeUser","extendAutoValueContext","withValue","Future","future1","future2","future3","return","wait","Middleware","api","Location","_generateStampedLoginToken","_insertLoginToken","destroyToken","SessionData","sessionId","totalHits","resultsCount","lastHit","errorMessages","errors","getSelector","unpickle","getProjection","pickle","unpickleValue","$$class","flags","stringValue","unpickleObject","obj","newObject","entries","pickleValue","pickleObject","getSessionId","Session","simpleWatchable","getWatchLevels","watcherIndex","findWatcher","complexWatchOptions","complexWatchDefault","complexWatchable","getWatchOptions","getWatchDefault","getWatchLevel","watcher","commentIds","checkActivities","wekanActivities","wekanBoard","wekanCards","wekanLabels","wekanLists","checkSwimlanes","wekanSwimlanes","wekanChecklists","checkChecklistItems","wekanChecklistItems","checkRules","wekanRules","checkTriggers","wekanTriggers","membersToMap","wekanUser","wekanActions","actionType","boardToImport","sourceMemberId","wekanAssignees","wekanCoverId","wekanCustomFields","fieldId","listIndex","swimlaneIndex","createSubtasks","cardIdInNewBoard","parentIdInNewBoard","checklistIndex","createTriggers","createActions","createRules","createChecklistItems","checklistitem","checklistitemIndex","parseActivities","wekanAttachment","wekanCardId","wekanComment","importActivities","module1","html","exports","allowIsBoardMemberNoComments","subscribe","quoteParams","lan","existing","htmlEnabled","RICHER_CARD_COMMENT_EDITOR","texts","EMAIL_NOTIFICATION_TIMEOUT","notifyServices","serviceName","unsubscribe","k","notifyImpl","postCatchError","resolve","HTTP","post","Lock","_lock","_timer","echoDelay","normalDelay","ECHO","NORMAL","NULL","has","clear","delay","clearTimeout","webhooksAtbts","WEBHOOKS_ATTRIBUTES","responseFunc","newComment","inserted","outgoingWebhooks","clonedParams","descriptionText","is2way","cid","lockState","watch","watchableType","watchableObj","publish","kind","x","linkedElmtId","getAvatars","publishRelations","ready","isArchived","thisUserId","currUser","orgsIds","teamsIds","getCardCommentReactions","cardComments","_ids","cardCommentsLinkedBoard","parentCards","subCards","linkedBoardCards","impCardId","memberIds","copyBoard","DEFAULT_LIMIT","OPERATOR_ASSIGNEE","OPERATOR_BOARD","OPERATOR_COMMENT","OPERATOR_CREATED_AT","OPERATOR_CREATOR","OPERATOR_DEBUG","OPERATOR_DUE","OPERATOR_HAS","OPERATOR_LABEL","OPERATOR_LIMIT","OPERATOR_LIST","OPERATOR_MEMBER","OPERATOR_MODIFIED_AT","OPERATOR_ORG","OPERATOR_SORT","OPERATOR_STATUS","OPERATOR_SWIMLANE","OPERATOR_TEAM","OPERATOR_USER","ORDER_ASCENDING","PREDICATE_ALL","PREDICATE_ARCHIVED","PREDICATE_ASSIGNEES","PREDICATE_ATTACHMENT","PREDICATE_CHECKLIST","PREDICATE_CREATED_AT","PREDICATE_DESCRIPTION","PREDICATE_DUE_AT","PREDICATE_END_AT","PREDICATE_ENDED","PREDICATE_MEMBERS","PREDICATE_MODIFIED_AT","PREDICATE_PRIVATE","PREDICATE_PUBLIC","PREDICATE_START_AT","PREDICATE_SYSTEM","QueryErrors","QueryParams","Query","CARD_TYPES","queryParams","addPredicate","setPredicate","buildQuery","findCards","buildSelector","boardsSelector","hasOperator","getPredicates","status","getOrg","addNotFound","getTeam","queryBoards","querySwimlanes","queryLists","cardIds","com","predicate","getPredicate","operator","queryUsers","queryLabels","boardLabel","reLabel","exists","cardsSelector","attach","setQueryParams","_errors","buildProjection","skip","getQueryParams","configLimit","RESULTS_PER_PAGE","order","session","getSessionData","customFieldIds","c","activityIds","orgTeams","ruleId","actionIds","triggerIds","customHTMLafterBodyStart","customHTMLbeforeBodyEnd","copySwimlane","toBoard","moveSwimlane","WEKAN_METRICS_ACCEPTED_IP_ADDRESS","accessSync","constants","W_OK","userInfo","exit","AccountsCommon","loginExpirationInDays","ACCOUNTS_COMMON_LOGIN_EXPIRATION_IN_DAYS","Fiber","poolSize","validateLoginAttempt","admin","otherReq","normalAccess","ORACLE_OIM_ENABLED","loginStyle","OAUTH2_LOGIN_STYLE","clientId","OAUTH2_CLIENT_ID","OAUTH2_SECRET","serverUrl","authorizationEndpoint","OAUTH2_AUTH_ENDPOINT","userinfoEndpoint","OAUTH2_USERINFO_ENDPOINT","tokenEndpoint","OAUTH2_TOKEN_ENDPOINT","idTokenWhitelistFields","OAUTH2_ID_TOKEN_WHITELIST_FIELDS","requestPermissions","OAUTH2_REQUEST_PERMISSIONS","baseUrl","CAS_BASE_URL","loginUrl","CAS_LOGIN_URL","serviceParam","popupWidth","popupHeight","popup","autoClose","validateUrl","CASE_VALIDATE_URL","casVersion","attributes","DEBUG","SAML_ENABLED","provider","SAML_PROVIDER","entryPoint","SAML_ENTRYPOINT","issuer","SAML_ISSUER","cert","SAML_CERT","idpSLORedirectURL","SAML_IDPSLO_REDIRECTURL","privateKeyFile","SAML_PRIVATE_KEYFILE","publicCertFile","SAML_PUBLIC_CERTFILE","identifierFormat","SAML_IDENTIFIER_FORMAT","localProfileMatchAttribute","SAML_LOCAL_PROFILE_MATCH_ATTRIBUTE","attributesSAML","SAML_ATTRIBUTES","CARD_OPENED_WEBHOOK_ENABLED","CORS","rawConnectHandlers","CORS_ALLOW_HEADERS","CORS_EXPOSE_HEADERS","HEADER_LOGIN_ID","headerLoginId","headerLoginEmail","HEADER_LOGIN_EMAIL","headerLoginFirstname","HEADER_LOGIN_FIRSTNAME","headerLoginLastname","HEADER_LOGIN_LASTNAME","MAX_IMAGE_PIXEL","IMAGE_COMPRESS_RATIO","attachmentsUploadMaxSize","attachmentsUploadMimeTypes","avatarsUploadMaxSize","UnsavedEdits","noValidate","validate","autoConvert","removeEmptyStrings","getAutoValues","noValidateMulti","Migrations","defaultColor","associationTable","oldBoardColor","newBoardColor","nStars","allUsersWithSomeActivity","chain","currentUsers","formerUsers","newMemberSet","modifiedAtTables","all","updateMany","info","catch","tables","$type","hideBoardMember","_dropIndex","BROWSER_POLICY_ENABLED","trusted","TRUSTED_URL","matomoUrl","MATOMO_ADDRESS","RCCE","matchingRules","findMatchingRules","performAction","TriggersDef","matchingFields","matchingMap","buildMatchingFieldsMap","matchingTriggers","matchesList","minOrder","maxOrder","emailTo","emailMsg","emailSubject","recipientUser","recipientLang","currentDateTime","dateField","resStart","resEnd","resDue","resReceived","currentDateTimeUpdate","selectedColor","checkItem","checkItemName","checkListId","itemsArray","cardName","WAIT_SPINNER","getStatistics","_MongoInternals$defau","_MongoInternals$defau2","_client$s","_client$s$activeSessi","pjson","statistics","wekanVersion","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","nodeVersion","v8","nodeHeapStats","totalHeapSize","getHeapStatistics","total_heap_size","totalHeapSizeExecutable","total_heap_size_executable","totalPhysicalSize","total_physical_size","totalAvailableSize","total_available_size","usedHeapSize","used_heap_size","heapSizeLimit","heap_size_limit","mallocedMemory","malloced_memory","peakMallocedMemory","peak_malloced_memory","doesZapGarbage","does_zap_garbage","numberOfNativeContexts","number_of_native_contexts","numberOfDetachedContexts","number_of_detached_contexts","memoryUsage","nodeMemoryUsage","rss","heapTotal","heapUsed","external","meteorVersion","meteor","mongoVersion","mongoStorageEngine","mongoOplogEnabled","oplogEnabled","_oplogHandle","onOplogEntry","storageEngine","command","serverStatus","buildinfo","client","sessionsCount","s","activeSessions","createCard","moveCard","archivedCard","restoredCard","joinMember","unjoinMember","addChecklist","removeChecklist","completeChecklist","uncompleteChecklist","addedChecklistItem","removedChecklistItem","checkedItem","uncheckedItem","addAttachment","deleteAttachment","addedLabel","removedLabel","Tracker","T9n","setTracker","ar","ca","cs","da","de","el","en","es","es_ES","es_ES_formal","es_formal","et","fa","fi","fr","fr_CA","he","hr","hu","it","kh","ko","nl","no_NB","pl","pt","pt_PT","ro","ru","sk","sl","sv","th","tr","uk","vi","zh_CN","zh_HK","zh_TW","autorun","setLanguage","Blaze","registerHelper","_len","_key","hash","pop","sprintf","init","dynamicImport","rtl","locale","ReactiveVar","i18next","languages","DEFAULT_NAMESPACE","DEFAULT_LANGUAGE","i18n","current","createInstance","fallbackLng","cleanCode","supportedLngs","ns","defaultNs","postProcess","interpolation","prefix","suffix","escapeValue","resources","loadLanguage","isLanguageSupported","getSupportedLanguages","loadTranslation","reject","translationSubscription","onReady","onError","custom_translations","acc","cur","addResourceBundle","changeLanguage","dep","depend","DataCache","ReactiveCacheServer","idOrFirstObjectSelector","getQuery","getAvatar","getImpersonatedUsers","getSessionDatas","getInvitationCodes","getTranslation","ReactiveCacheClient","idOrFirstObjectSelect","__board","_idOrFirstObjectSelect","__select","EJSON","select","__boards","_select","__list","__lists","__swimlane","__swimlanes","__checklist","__checklists","__checklistItem","__checklistItems","__card","__cards","__cardComment","__cardComments","__cardCommentReaction","__cardCommentReactions","__customField","__customFields","__attachment","__attachments","__avatar","__avatars","__user","__users","__org","__orgs","__team","__teams","__activity","__activities","__rule","__rules","__action","__actions","__trigger","__triggers","__impersonatedUser","__impersonatedUsers","__integration","__integrations","__invitationCode","__invitationCodes","__currentSetting","__currentUser","__translation","__translations","runSetters","noCache","ReactiveMiniMongoIndexServer","addSelect","ReactiveMiniMongoIndexClient","__subTasksWithId","_subTasks","groupBy","__checklistsWithId","_checklists","__checklistItemsWithId","_checklistItems","__cardCommentsWithId","_cardComments","__activityWithId","_activities","indexBy","passwordField","AccountsTemplates","removeField","emailField","passwordLoginEnabled","oidcRedirectionEnabled","oauthServerUrl","oauthDashboardUrl","addFields","displayName","required","minLength","template","configure","defaultLayout","defaultContentRegion","confirmPassword","enablePasswordChange","sendVerificationEmail","showForgotPasswordLink","forbidClientAccountCreation","onLogoutHook","window","location","homePage","getRouteName","reload","go","routeName","configureRoute","changePwd","redirect","templateName","siteName","TYPE_TEMPLATE_CARD","TYPE_TEMPLATE_LIST","ALLOWED_WAIT_SPINNERS","models","connection","migrate","QueryDebug","OPERATOR_UNKNOWN","ORDER_DESCENDING","PREDICATE_MONTH","PREDICATE_OPEN","PREDICATE_OVERDUE","PREDICATE_PROJECTION","PREDICATE_QUARTER","PREDICATE_SELECTOR","PREDICATE_WEEK","PREDICATE_YEAR","show","showAll","showSelector","showProjection","getParams","operatorTagMap","operatorTags","addError","hasErrors","errs","messages","buildParams","queryText","reOperator1","reOperator2","reText","reQuotedText","reNegatedOperator","operators","predicates","durations","predicateTranslations","category","catPreds","operatorMap","op","abbrev","duration","week","year","month","quarter","negated","previousPath","triggersEnter","ensureSignedIn","reset","EscapeActions","executeAll","manageCustomUI","manageMatomo","BlazeLayout","render","headerBar","content","previousBoard","executeUpTo","shortcutsTemplate","Modal","open","onCloseGoTo","DocHead","getQueryParam","decodeURIComponent","brokenCardsTemplate","notFound","redirections","newPath","oldPath","context","_Meteor$settings","_Meteor$settings$publ","sandstormBoard","Capnp","Package","importSystem","Powerbox","Identity","SandstormHttpBridge","httpBridge","capnpConnection","bridgeConfig","BridgeConfig","readFileSync","getHttpBridge","connect","sandstormClaimIdentityRequest","descriptor","parsedDescriptor","PowerboxDescriptor","packed","PowerboxTag","permissions","sandstormSessionId","getSessionContext","getSandstormApi","done","claimRequest","identity","cap","castAs","promises","getIdentityId","getProfile","saveIdentity","responses","identityId","picture","getUrl","sandstormInfo","defaultText","hostPath","preferredHandle","pronouns","login","updateOrCreateUserFromExternalService","updateUserPermissions","reportActivity","caption","getSavedIdentity","mentioned","subscribed","maybeUsers","event","invocation","DDP","_CurrentInvocation","eventTypes","viewInfo","defIdx","findIndex","def","ensureUserListed","mentionedUser","subscribedUser","permissionDoc","boardMembers","boardPath","generateUniqueUsername","appendNumber","observeChanges","changed","sandstormData","_httpMethods","newMethods","auth","sandstormID","rpcCounter","rpcs","addEventListener","parent","rpcId","handler","sendRpc","postMessage","powerboxDescriptors","doRequest","serializedPowerboxDescriptor","onSuccess","canceled","sandstormRequestIdentity","updateSandstormMetaData","msg","enter","setPath","_absoluteUrl","_defaultOptions","defaultOptions"],"mappings":"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pL,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACL,IAAI,CAACkL,KAAK,CAAC,CAAC;MACd;IACF;EACF,CAAC;EACD;EACAzO,KAAK,EAAE;IACL;AACN;AACA;IACMnP,IAAI,EAAE0X,MAAM;IACZ;IACA8F,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjB,OAAO,CAAC;MACV;IACF;EACF,CAAC;EACD;EACAjI,MAAM,EAAE;IACN;AACN;AACA;IACMxV,IAAI,EAAE,CAACf,MAAM,CAAC;IACdqe,QAAQ,EAAE;IACV;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;EACD,cAAc,EAAE;IACd;AACN;AACA;IACM;IACA;IACA;IACA;IACA;IACAtd,IAAI,EAAEqd;EACR,CAAC;EACD,eAAe,EAAE;IACf;AACN;AACA;IACMrd,IAAI,EAAEqd,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACD,gBAAgB,EAAE;IAChB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMtd,IAAI,EAAEqd,MAAM;IACZqL,aAAa,EAAEV;EACjB,CAAC;EACD;EACA;EACA;EACA7W,OAAO,EAAE;IACP;AACN;AACA;IACMnR,IAAI,EAAE,CAACf,MAAM,CAAC;IACd;IACAue,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAAC8K,KAAK,EAAE;QAChC,OAAO,CACL;UACEjmB,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB2b,OAAO,EAAE,IAAI;UACb0K,QAAQ,EAAE,IAAI;UACdC,YAAY,EAAE,KAAK;UACnBC,aAAa,EAAE,KAAK;UACpBC,QAAQ,EAAE;QACZ,CAAC,CACF;MACH;IACF;EACF,CAAC;EACD,kBAAkB,EAAE;IAClB;AACN;AACA;IACM9oB,IAAI,EAAEqd;EACR,CAAC;EACD,mBAAmB,EAAE;IACnB;AACN;AACA;IACMrd,IAAI,EAAEmd;EACR,CAAC;EACD,oBAAoB,EAAE;IACpB;AA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CAACl7C,GAAG,CAAC,6BAA6B,EAAE,MAAM;EAClDzP,MAAM,CAAC1nB,MAAM,CACX;IACEkqB,eAAe,EAAE;MACfxJ,OAAO,EAAE;IACX;EACF,CAAC,EACD;IACEzgB,IAAI,EAAE;MACJiqB,eAAe,EAAE;IACnB;EACF,CAAC,EACDkoD,eACF,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,UAAU,CAACl7C,GAAG,CAAC,sCAAsC,EAAE,MAAM;EAC3D,IAAI;IACF7xB,WAAW,CAAC5F,UAAU,CAAC8zE,UAAU,CAAC;MAAC,QAAQ,EAAE;IAAC,CAAC,CAAC;EAClD,CAAC,CAAC,OAAO/tE,KAAK,EAAE,CAChB;AACF,CAAC,CAAC;AA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport fs from 'fs';\n\nexport const createOnAfterUpload = bucket =>\n  function onAfterUpload(file) {\n    const self = this;\n\n    // here you could manipulate your file\n    // and create a new version, for example a scaled 'thumbnail'\n    // ...\n\n    // then we read all versions we have got so far\n    Object.keys(file.versions).forEach(versionName => {\n      const metadata = { ...file.meta, versionName, fileId: file._id };\n      fs.createReadStream(file.versions[versionName].path)\n\n        // this is where we upload the binary to the bucket using bucket.openUploadStream\n        // see http://mongodb.github.io/node-mongodb-native/3.2/api/GridFSBucket.html#openUploadStream\n        .pipe(\n          bucket.openUploadStream(file.name, {\n            contentType: file.type || 'binary/octet-stream',\n            metadata,\n          }),\n        )\n\n        // and we unlink the file from the fs on any error\n        // that occurred during the upload to prevent zombie files\n        .on('error', err => {\n          // console.error(\"[createOnAfterUpload error]\", err);\n          self.unlink(this.collection.findOne(file._id), versionName); // Unlink files from FS\n        })\n\n        // once we are finished, we attach the gridFS Object id on the\n        // FilesCollection document's meta section and finally unlink the\n        // upload file from the filesystem\n        .on(\n          'finish',\n          Meteor.bindEnvironment(ver => {\n            const property = `versions.${versionName}.meta.gridFsFileId`;\n\n            self.collection.update(file._id, {\n              $set: {\n                [property]: ver._id.toHexString(),\n              },\n            });\n\n            self.unlink(this.collection.findOne(file._id), versionName); // Unlink files from FS\n          }),\n        );\n    });\n  };\n","import { MongoInternals } from 'meteor/mongo';\n\nexport const createBucket = bucketName => {\n  const options = bucketName ? { bucketName } : void 0;\n  return new MongoInternals.NpmModule.GridFSBucket(\n    MongoInternals.defaultRemoteCollectionDriver().mongo.db,\n    options,\n  );\n};\n","import { MongoInternals } from 'meteor/mongo';\n\nexport const createObjectId = ({ gridFsFileId }) =>\n  new MongoInternals.NpmModule.ObjectID(gridFsFileId);\n","import fs from 'fs';\nimport FileStoreStrategy, {FileStoreStrategyFilesystem, FileStoreStrategyGridFs, FileStoreStrategyS3} from './fileStoreStrategy'\n\nconst insertActivity = (fileObj, activityType) =>\n  Activities.insert({\n    userId: fileObj.userId,\n    type: 'card',\n    activityType,\n    attachmentId: fileObj._id,\n    attachmentName: fileObj.name,\n    boardId: fileObj.meta.boardId,\n    cardId: fileObj.meta.cardId,\n    listId: fileObj.meta.listId,\n    swimlaneId: fileObj.meta.swimlaneId,\n  });\n\n/** Strategy to store attachments at GridFS (MongoDB) */\nexport class AttachmentStoreStrategyGridFs extends FileStoreStrategyGridFs {\n\n  /** constructor\n   * @param gridFsBucket use this GridFS Bucket\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(gridFsBucket, fileObj, versionName) {\n    super(gridFsBucket, fileObj, versionName);\n  }\n\n  /** after successfull upload */\n  onAfterUpload() {\n    super.onAfterUpload();\n    // If the attachment doesn't have a source field or its source is different than import\n    if (!this.fileObj.meta.source || this.fileObj.meta.source !== 'import') {\n      // Add activity about adding the attachment\n      insertActivity(this.fileObj, 'addAttachment');\n    }\n  }\n\n  /** after file remove */\n  onAfterRemove() {\n    super.onAfterRemove();\n    insertActivity(this.fileObj, 'deleteAttachment');\n  }\n}\n\n/** Strategy to store attachments at filesystem */\nexport class AttachmentStoreStrategyFilesystem extends FileStoreStrategyFilesystem {\n\n  /** constructor\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(fileObj, versionName) {\n    super(fileObj, versionName);\n  }\n\n  /** after successfull upload */\n  onAfterUpload() {\n    super.onAfterUpload();\n    // If the attachment doesn't have a source field or its source is different than import\n    if (!this.fileObj.meta.source || this.fileObj.meta.source !== 'import') {\n      // Add activity about adding the attachment\n      insertActivity(this.fileObj, 'addAttachment');\n    }\n  }\n\n  /** after file remove */\n  onAfterRemove() {\n    super.onAfterRemove();\n    insertActivity(this.fileObj, 'deleteAttachment');\n  }\n}\n\n/** Strategy to store attachments at filesystem */\nexport class AttachmentStoreStrategyS3 extends FileStoreStrategyS3 {\n\n  /** constructor\n   * @param s3Bucket use this S3 Bucket\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(s3Bucket, fileObj, versionName) {\n    super(s3Bucket, fileObj, versionName);\n  }\n\n  /** after successfull upload */\n  onAfterUpload() {\n    super.onAfterUpload();\n    // If the attachment doesn't have a source field or its source is different than import\n    if (!this.fileObj.meta.source || this.fileObj.meta.source !== 'import') {\n      // Add activity about adding the attachment\n      insertActivity(this.fileObj, 'addAttachment');\n    }\n  }\n\n  /** after file remove */\n  onAfterRemove() {\n    super.onAfterRemove();\n    insertActivity(this.fileObj, 'deleteAttachment');\n  }\n}\n","import fs from 'fs';\nimport path from 'path';\nimport { createObjectId } from './grid/createObjectId';\nimport { httpStreamOutput } from './httpStream.js';\n//import {} from './s3/Server-side-file-store.js';\nimport { ObjectID } from 'bson';\nvar Minio = require('minio');\n\nexport const STORAGE_NAME_FILESYSTEM = \"fs\";\nexport const STORAGE_NAME_GRIDFS     = \"gridfs\";\nexport const STORAGE_NAME_S3         = \"s3\";\n\n/** Factory for FileStoreStrategy */\nexport default class FileStoreStrategyFactory {\n\n  /** constructor\n   * @param classFileStoreStrategyFilesystem use this strategy for filesystem storage\n   * @param storagePath file storage path\n   * @param classFileStoreStrategyGridFs use this strategy for GridFS storage\n   * @param gridFsBucket use this GridFS Bucket as GridFS Storage\n   * @param classFileStoreStrategyS3 use this strategy for S3 storage\n   * @param s3Bucket use this S3 Bucket as S3 Storage\n   */\n  constructor(classFileStoreStrategyFilesystem, storagePath, classFileStoreStrategyGridFs, gridFsBucket, classFileStoreStrategyS3, s3Bucket) {\n    this.classFileStoreStrategyFilesystem = classFileStoreStrategyFilesystem;\n    this.storagePath = storagePath;\n    this.classFileStoreStrategyGridFs = classFileStoreStrategyGridFs;\n    this.gridFsBucket = gridFsBucket;\n    this.classFileStoreStrategyS3 = classFileStoreStrategyS3;\n    this.s3Bucket = s3Bucket;\n  }\n\n  /** returns the right FileStoreStrategy\n   * @param fileObj the current file object\n   * @param versionName the current version\n   * @param use this storage, or if not set, get the storage from fileObj\n   */\n  getFileStrategy(fileObj, versionName, storage) {\n    if (!storage) {\n      storage = fileObj.versions[versionName].storage;\n      if (!storage) {\n        if (fileObj.meta.source == \"import\" || fileObj.versions[versionName].meta.gridFsFileId) {\n          // uploaded by import, so it's in GridFS (MongoDB)\n          storage = STORAGE_NAME_GRIDFS;\n        } else if (fileObj && fileObj.versions && fileObj.versions[version] && fileObj.versions[version].meta && fileObj.versions[version].meta.pipePath) {\n          storage = STORAGE_NAME_S3;\n        } else {\n          // newly uploaded, so it's at the filesystem\n          storage = STORAGE_NAME_FILESYSTEM;\n        }\n      }\n    }\n    let ret;\n    if ([STORAGE_NAME_FILESYSTEM, STORAGE_NAME_GRIDFS, STORAGE_NAME_S3].includes(storage)) {\n      if (storage == STORAGE_NAME_FILESYSTEM) {\n        ret = new this.classFileStoreStrategyFilesystem(fileObj, versionName);\n      } else if (storage == STORAGE_NAME_S3) {\n        ret = new this.classFileStoreStrategyS3(this.s3Bucket, fileObj, versionName);\n      } else if (storage == STORAGE_NAME_GRIDFS) {\n        ret = new this.classFileStoreStrategyGridFs(this.gridFsBucket, fileObj, versionName);\n      }\n    }\n    return ret;\n  }\n}\n\n/** Strategy to store files */\nclass FileStoreStrategy {\n\n  /** constructor\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(fileObj, versionName) {\n    this.fileObj = fileObj;\n    this.versionName = versionName;\n  }\n\n  /** after successfull upload */\n  onAfterUpload() {\n  }\n\n  /** download the file\n   * @param http the current http request\n   * @param cacheControl cacheControl of FilesCollection\n   */\n  interceptDownload(http, cacheControl) {\n  }\n\n  /** after file remove */\n  onAfterRemove() {\n  }\n\n  /** returns a read stream\n   * @return the read stream\n   */\n  getReadStream() {\n  }\n\n  /** returns a write stream\n   * @param filePath if set, use this path\n   * @return the write stream\n   */\n  getWriteStream(filePath) {\n  }\n\n  /** writing finished\n   * @param finishedData the data of the write stream finish event\n   */\n  writeStreamFinished(finishedData) {\n  }\n\n  /** returns the new file path\n   * @param storagePath use this storage path\n   * @return the new file path\n   */\n  getNewPath(storagePath, name) {\n    if (!_.isString(name)) {\n      name = this.fileObj.name;\n    }\n    const ret = path.join(storagePath, this.fileObj._id + \"-\" + this.versionName + \"-\" + name);\n    return ret;\n  }\n\n  /** remove the file */\n  unlink() {\n  }\n\n  /** rename the file (physical)\n   * @li at database the filename is updated after this method\n   * @param newFilePath the new file path\n   */\n  rename(newFilePath) {\n  }\n\n  /** return the storage name\n   * @return the storage name\n   */\n  getStorageName() {\n  }\n}\n\n/** Strategy to store attachments at GridFS (MongoDB) */\nexport class FileStoreStrategyGridFs extends FileStoreStrategy {\n\n  /** constructor\n   * @param gridFsBucket use this GridFS Bucket\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(gridFsBucket, fileObj, versionName) {\n    super(fileObj, versionName);\n    this.gridFsBucket = gridFsBucket;\n  }\n\n  /** download the file\n   * @param http the current http request\n   * @param cacheControl cacheControl of FilesCollection\n   */\n  interceptDownload(http, cacheControl) {\n    const readStream = this.getReadStream();\n    const downloadFlag = http?.params?.query?.download;\n\n    let ret = false;\n    if (readStream) {\n      ret = true;\n      httpStreamOutput(readStream, this.fileObj.name, http, downloadFlag, cacheControl);\n    }\n\n    return ret;\n  }\n\n  /** after file remove */\n  onAfterRemove() {\n    this.unlink();\n    super.onAfterRemove();\n  }\n\n  /** returns a read stream\n   * @return the read stream\n   */\n  getReadStream() {\n    const gfsId = this.getGridFsObjectId();\n    let ret;\n    if (gfsId) {\n      ret = this.gridFsBucket.openDownloadStream(gfsId);\n    }\n    return ret;\n  }\n\n  /** returns a write stream\n   * @param filePath if set, use this path\n   * @return the write stream\n   */\n  getWriteStream(filePath) {\n    const fileObj = this.fileObj;\n    const versionName = this.versionName;\n    const metadata = { ...fileObj.meta, versionName, fileId: fileObj._id };\n    const ret = this.gridFsBucket.openUploadStream(this.fileObj.name, {\n      contentType: fileObj.type || 'binary/octet-stream',\n      metadata,\n    });\n    return ret;\n  }\n\n  /** writing finished\n   * @param finishedData the data of the write stream finish event\n   */\n  writeStreamFinished(finishedData) {\n    const gridFsFileIdName = this.getGridFsFileIdName();\n    Attachments.update({ _id: this.fileObj._id }, { $set: { [gridFsFileIdName]: finishedData._id.toHexString(), } });\n  }\n\n  /** remove the file */\n  unlink() {\n    const gfsId = this.getGridFsObjectId();\n    if (gfsId) {\n      this.gridFsBucket.delete(gfsId, err => {\n        if (err) {\n          console.error(\"error on gfs bucket.delete: \", err);\n        }\n      });\n    }\n\n    const gridFsFileIdName = this.getGridFsFileIdName();\n    Attachments.update({ _id: this.fileObj._id }, { $unset: { [gridFsFileIdName]: 1 } });\n  }\n\n  /** return the storage name\n   * @return the storage name\n   */\n  getStorageName() {\n    return STORAGE_NAME_GRIDFS;\n  }\n\n  /** returns the GridFS Object-Id\n   * @return the GridFS Object-Id\n   */\n  getGridFsObjectId() {\n    let ret;\n    const gridFsFileId = this.getGridFsFileId();\n    if (gridFsFileId) {\n      ret = createObjectId({ gridFsFileId });\n    }\n    return ret;\n  }\n\n  /** returns the GridFS Object-Id\n   * @return the GridFS Object-Id\n   */\n  getGridFsFileId() {\n    const ret = (this.fileObj.versions[this.versionName].meta || {})\n      .gridFsFileId;\n    return ret;\n  }\n\n  /** returns the property name of gridFsFileId\n   * @return the property name of gridFsFileId\n   */\n  getGridFsFileIdName() {\n    const ret = `versions.${this.versionName}.meta.gridFsFileId`;\n    return ret;\n  }\n}\n\n/** Strategy to store attachments at filesystem */\nexport class FileStoreStrategyFilesystem extends FileStoreStrategy {\n\n  /** constructor\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(fileObj, versionName) {\n    super(fileObj, versionName);\n  }\n\n  /** returns a read stream\n   * @return the read stream\n   */\n  getReadStream() {\n    const ret = fs.createReadStream(this.fileObj.versions[this.versionName].path)\n    return ret;\n  }\n\n  /** returns a write stream\n   * @param filePath if set, use this path\n   * @return the write stream\n   */\n  getWriteStream(filePath) {\n    if (!_.isString(filePath)) {\n      filePath = this.fileObj.versions[this.versionName].path;\n    }\n    const ret = fs.createWriteStream(filePath);\n    return ret;\n  }\n\n  /** writing finished\n   * @param finishedData the data of the write stream finish event\n   */\n  writeStreamFinished(finishedData) {\n  }\n\n  /** remove the file */\n  unlink() {\n    const filePath = this.fileObj.versions[this.versionName].path;\n    fs.unlink(filePath, () => {});\n  }\n\n  /** rename the file (physical)\n   * @li at database the filename is updated after this method\n   * @param newFilePath the new file path\n   */\n  rename(newFilePath) {\n    fs.renameSync(this.fileObj.versions[this.versionName].path, newFilePath);\n  }\n\n  /** return the storage name\n   * @return the storage name\n   */\n  getStorageName() {\n    return STORAGE_NAME_FILESYSTEM;\n  }\n}\n\n\n/** Strategy to store attachments at S3 */\nexport class FileStoreStrategyS3 extends FileStoreStrategy {\n\n\n  /** constructor\n   * @param s3Bucket use this S3 Bucket\n   * @param fileObj the current file object\n   * @param versionName the current version\n   */\n  constructor(s3Bucket, fileObj, versionName) {\n    super(fileObj, versionName);\n    this.s3Bucket = s3Bucket;\n  }\n\n  /** after successfull upload */\n  onAfterUpload() {\n    if (process.env.S3) {\n      Meteor.settings.s3 = JSON.parse(process.env.S3).s3;\n    }\n\n    const s3Conf = Meteor.settings.s3 || {};\n    const bound  = Meteor.bindEnvironment((callback) => {\n      return callback();\n    });\n\n    /* https://github.com/veliovgroup/Meteor-Files/blob/master/docs/aws-s3-integration.md */\n    /* Check settings existence in `Meteor.settings` */\n    /* This is the best practice for app security */\n\n    /*\n    if (s3Conf && s3Conf.key && s3Conf.secret && s3Conf.bucket && s3Conf.region && s3Conf.sslEnabled) {\n      // Create a new S3 object\n      const s3 = new S3({\n        secretAccessKey: s3Conf.secret,\n        accessKeyId: s3Conf.key,\n        region: s3Conf.region,\n        sslEnabled: s3Conf.sslEnabled, // optional\n        httpOptions: {\n          timeout: 6000,\n          agent: false\n        }\n      });\n    }\n    */\n\n    if (s3Conf && s3Conf.key && s3Conf.secret && s3Conf.bucket && s3Conf.endPoint && s3Conf.port && s3Conf.sslEnabled) {\n      // Create a new S3 object\n      var s3Client = new Minio.Client({\n        endPoint: s3Conf.endPoint,\n        port: s3Conf.port,\n        useSSL: s3Conf.sslEnabled,\n        accessKey: s3Conf.key,\n        secretKey: s3Conf.secret\n        //region: s3Conf.region,\n        // sslEnabled: true, // optional\n        //httpOptions: {\n        //  timeout: 6000,\n        //  agent: false\n        //\n      });\n\n      // Declare the Meteor file collection on the Server\n      const UserFiles = new FilesCollection({\n        debug: false, // Change to `true` for debugging\n        storagePath: storagePath,\n        collectionName: 'userFiles',\n        // Disallow Client to execute remove, use the Meteor.method\n        allowClientCode: false,\n\n        // Start moving files to AWS:S3\n        // after fully received by the Meteor server\n        onAfterUpload(fileRef) {\n          // Run through each of the uploaded file\n          _.each(fileRef.versions, (vRef, version) => {\n            // We use Random.id() instead of real file's _id\n            // to secure files from reverse engineering on the AWS client\n            const filePath = 'files/' + (Random.id()) + '-' + version + '.' + fileRef.extension;\n\n            // Create the AWS:S3 object.\n            // Feel free to change the storage class from, see the documentation,\n            // `STANDARD_IA` is the best deal for low access files.\n            // Key is the file name we are creating on AWS:S3, so it will be like files/XXXXXXXXXXXXXXXXX-original.XXXX\n            // Body is the file stream we are sending to AWS\n\n            const fileObj = this.fileObj;\n            const versionName = this.versionName;\n            const metadata = { ...fileObj.meta, versionName, fileId: fileObj._id };\n\n            s3Client.putObject({\n              // ServerSideEncryption: 'AES256', // Optional\n              //StorageClass: 'STANDARD',\n              Bucket: s3Conf.bucket,\n              Key: filePath,\n              Body: fs.createReadStream(vRef.path),\n              metadata,\n              ContentType: vRef.type,\n            }, (error) => {\n              bound(() => {\n                if (error) {\n                  console.error(error);\n                } else {\n                  // Update FilesCollection with link to the file at AWS\n                  const upd = { $set: {} };\n                  upd['$set']['versions.' + version + '.meta.pipePath'] = filePath;\n\n                  this.collection.update({\n                    _id: fileRef._id\n                  }, upd, (updError) => {\n                    if (updError) {\n                      console.error(updError);\n                    } else {\n                      // Unlink original files from FS after successful upload to AWS:S3\n                      this.unlink(this.collection.findOne(fileRef._id), version);\n                    }\n                  });\n                }\n              });\n            });\n          });\n        },\n      });\n    }\n  }\n\n  // Intercept access to the file\n  // And redirect request to AWS:S3\n  interceptDownload(http, fileRef, version) {\n    let path;\n\n    if (fileRef && fileRef.versions && fileRef.versions[version] && fileRef.versions[version].meta && fileRef.versions[version].meta.pipePath) {\n      path = fileRef.versions[version].meta.pipePath;\n    }\n\n    if (path) {\n      // If file is successfully moved to AWS:S3\n      // We will pipe request to AWS:S3\n      // So, original link will stay always secure\n\n      // To force ?play and ?download parameters\n      // and to keep original file name, content-type,\n      // content-disposition, chunked \"streaming\" and cache-control\n      // we're using low-level .serve() method\n      const opts = {\n        Bucket: s3Conf.bucket,\n        Key: path\n      };\n\n      if (http.request.headers.range) {\n        const vRef  = fileRef.versions[version];\n        let range   = _.clone(http.request.headers.range);\n        const array = range.split(/bytes=([0-9]*)-([0-9]*)/);\n        const start = parseInt(array[1]);\n        let end     = parseInt(array[2]);\n        if (isNaN(end)) {\n          // Request data from AWS:S3 by small chunks\n          end       = (start + this.chunkSize) - 1;\n          if (end >= vRef.size) {\n            end     = vRef.size - 1;\n          }\n        }\n        opts.Range   = `bytes=${start}-${end}`;\n        http.request.headers.range = `bytes=${start}-${end}`;\n      }\n\n      const fileColl = this;\n      s3Client.getObject(opts, function (error) {\n        if (error) {\n          console.error(error);\n          if (!http.response.finished) {\n            http.response.end();\n          }\n        } else {\n          if (http.request.headers.range && this.httpResponse.headers['content-range']) {\n            // Set proper range header in according to what is returned from AWS:S3\n            http.request.headers.range = this.httpResponse.headers['content-range'].split('/')[0].replace('bytes ', 'bytes=');\n          }\n\n          const dataStream = new stream.PassThrough();\n          fileColl.serve(http, fileRef, fileRef.versions[version], version, dataStream);\n          dataStream.end(this.data.Body);\n        }\n      });\n      return true;\n    }\n    // While file is not yet uploaded to AWS:S3\n    // It will be served file from FS\n    return false;\n  }\n\n\n  /** after file remove */\n  onAfterRemove() {\n\n    if (process.env.S3) {\n      Meteor.settings.s3 = JSON.parse(process.env.S3).s3;\n    }\n\n    const s3Conf = Meteor.settings.s3 || {};\n    const bound  = Meteor.bindEnvironment((callback) => {\n      return callback();\n    });\n\n    if (s3Conf && s3Conf.key && s3Conf.secret && s3Conf.bucket && s3Conf.endPoint && s3Conf.port && s3Conf.sslEnabled) {\n      // Create a new S3 object\n      var s3Client = new Minio.Client({\n        endPoint: s3Conf.endPoint,\n        port: s3Conf.port,\n        useSSL: s3Conf.sslEnabled,\n        accessKey: s3Conf.key,\n        secretKey: s3Conf.secret\n      });\n    }\n\n    this.unlink();\n    super.onAfterRemove();\n    // Intercept FilesCollection's remove method to remove file from AWS:S3\n    const _origRemove = UserFiles.remove;\n    UserFiles.remove = function (selector, callback) {\n      const cursor = this.collection.find(selector);\n      cursor.forEach((fileRef) => {\n        _.each(fileRef.versions, (vRef) => {\n          if (vRef && vRef.meta && vRef.meta.pipePath) {\n            // Remove the object from AWS:S3 first, then we will call the original FilesCollection remove\n            s3Client.deleteObject({\n              Bucket: s3Conf.bucket,\n              Key: vRef.meta.pipePath,\n            }, (error) => {\n              bound(() => {\n                if (error) {\n                  console.error(error);\n                }\n              });\n            });\n          }\n        });\n      });\n    // Remove original file from database\n    _origRemove.call(this, selector, callback);\n  };\n}\n\n  /** returns a read stream\n   * @return the read stream\n   */\n  getReadStream() {\n    const s3Id = this.getS3ObjectId();\n    let ret;\n    if (s3Id) {\n      ret = this.s3Bucket.openDownloadStream(s3Id);\n    }\n    return ret;\n  }\n\n  /** returns a write stream\n   * @param filePath if set, use this path\n   * @return the write stream\n   */\n  getWriteStream(filePath) {\n    const fileObj = this.fileObj;\n    const versionName = this.versionName;\n    const metadata = { ...fileObj.meta, versionName, fileId: fileObj._id };\n    const ret = this.s3Bucket.openUploadStream(this.fileObj.name, {\n      contentType: fileObj.type || 'binary/octet-stream',\n      metadata,\n    });\n    return ret;\n  }\n\n  /** writing finished\n   * @param finishedData the data of the write stream finish event\n   */\n  writeStreamFinished(finishedData) {\n    const s3FileIdName = this.getS3FileIdName();\n    Attachments.update({ _id: this.fileObj._id }, { $set: { [s3FileIdName]: finishedData._id.toHexString(), } });\n  }\n\n  /** remove the file */\n  unlink() {\n    const s3Id = this.gets3ObjectId();\n    if (s3Id) {\n      this.s3Bucket.delete(s3Id, err => {\n        if (err) {\n          console.error(\"error on S3 bucket.delete: \", err);\n        }\n      });\n    }\n\n    const s3FileIdName = this.getS3FileIdName();\n    Attachments.update({ _id: this.fileObj._id }, { $unset: { [s3FileIdName]: 1 } });\n  }\n\n  /** return the storage name\n   * @return the storage name\n   */\n  getStorageName() {\n    return STORAGE_NAME_S3;\n  }\n\n  /** returns the GridFS Object-Id\n   * @return the GridFS Object-Id\n   */\n  getS3ObjectId() {\n    let ret;\n    const s3FileId = this.s3FileId();\n    if (s3FileId) {\n      ret = createObjectId({ s3FileId });\n    }\n    return ret;\n  }\n\n  /** returns the S3 Object-Id\n   * @return the S3 Object-Id\n   */\n  getS3FileId() {\n    const ret = (this.fileObj.versions[this.versionName].meta || {})\n      .s3FileId;\n    return ret;\n  }\n\n  /** returns the property name of s3FileId\n   * @return the property name of s3FileId\n   */\n  getS3FileIdName() {\n    const ret = `versions.${this.versionName}.meta.s3FileId`;\n    return ret;\n  }\n};\n\n\n\n/** move the fileObj to another storage\n * @param fileObj move this fileObj to another storage\n * @param storageDestination the storage destination (fs or gridfs)\n * @param fileStoreStrategyFactory get FileStoreStrategy from this factory\n */\nexport const moveToStorage = function(fileObj, storageDestination, fileStoreStrategyFactory) {\n  Object.keys(fileObj.versions).forEach(versionName => {\n    const strategyRead = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName);\n    const strategyWrite = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName, storageDestination);\n\n    if (strategyRead.constructor.name != strategyWrite.constructor.name) {\n      const readStream = strategyRead.getReadStream();\n\n      const filePath = strategyWrite.getNewPath(fileStoreStrategyFactory.storagePath);\n      const writeStream = strategyWrite.getWriteStream(filePath);\n\n      writeStream.on('error', error => {\n        console.error('[writeStream error]: ', error, fileObj._id);\n      });\n\n      readStream.on('error', error => {\n        console.error('[readStream error]: ', error, fileObj._id);\n      });\n\n      writeStream.on('finish', Meteor.bindEnvironment((finishedData) => {\n        strategyWrite.writeStreamFinished(finishedData);\n      }));\n\n      // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099/8\n      readStream.on('end', Meteor.bindEnvironment(() => {\n        Attachments.update({ _id: fileObj._id }, { $set: {\n          [`versions.${versionName}.storage`]: strategyWrite.getStorageName(),\n          [`versions.${versionName}.path`]: filePath,\n        } });\n        strategyRead.unlink();\n      }));\n\n      readStream.pipe(writeStream);\n    }\n  });\n};\n\nexport const copyFile = function(fileObj, newCardId, fileStoreStrategyFactory) {\n  const newCard = ReactiveCache.getCard(newCardId);\n  Object.keys(fileObj.versions).forEach(versionName => {\n    const strategyRead = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName);\n    const readStream = strategyRead.getReadStream();\n    const strategyWrite = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName, STORAGE_NAME_FILESYSTEM);\n\n    const tempPath = path.join(fileStoreStrategyFactory.storagePath, Random.id() + \"-\" + versionName + \"-\" + fileObj.name);\n    const writeStream = strategyWrite.getWriteStream(tempPath);\n\n    writeStream.on('error', error => {\n      console.error('[writeStream error]: ', error, fileObj._id);\n    });\n\n    readStream.on('error', error => {\n      console.error('[readStream error]: ', error, fileObj._id);\n    });\n\n    // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099/8\n    readStream.on('end', Meteor.bindEnvironment(() => {\n      const fileId = new ObjectID().toString();\n      Attachments.addFile(\n        tempPath,\n        {\n          fileName: fileObj.name,\n          type: fileObj.type,\n          meta: {\n            boardId: newCard.boardId,\n            cardId: newCardId,\n            listId: newCard.listId,\n            swimlaneId: newCard.swimlaneId,\n            source: 'copy',\n            copyFrom: fileObj._id,\n            copyStorage: strategyRead.getStorageName(),\n          },\n          userId: fileObj.userId,\n          size: fileObj.fileSize,\n          fileId,\n        },\n        (err, fileRef) => {\n          if (err) {\n            console.log(err);\n          } else {\n            // Set the userId again\n            Attachments.update({ _id: fileRef._id }, { $set: { userId: fileObj.userId } });\n          }\n        },\n        true,\n      );\n    }));\n\n    readStream.pipe(writeStream);\n  });\n};\n\nexport const rename = function(fileObj, newName, fileStoreStrategyFactory) {\n  Object.keys(fileObj.versions).forEach(versionName => {\n    const strategy = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName);\n    const newFilePath = strategy.getNewPath(fileStoreStrategyFactory.storagePath, newName);\n    strategy.rename(newFilePath);\n\n    Attachments.update({ _id: fileObj._id }, { $set: {\n      \"name\": newName,\n      [`versions.${versionName}.path`]: newFilePath,\n    } });\n  });\n};\n","export const httpStreamOutput = function(readStream, name, http, downloadFlag, cacheControl) {\n    readStream.on('data', data => {\n      http.response.write(data);\n    });\n\n    readStream.on('end', () => {\n      // don't pass parameters to end() or it will be attached to the file's binary stream\n      http.response.end();\n    });\n\n    readStream.on('error', () => {\n      http.response.statusCode = 404;\n      http.response.end('not found');\n    });\n\n    if (cacheControl) {\n      http.response.setHeader('Cache-Control', cacheControl);\n    }\n    http.response.setHeader('Content-Disposition', getContentDisposition(name, http?.params?.query?.download));\n  };\n\n/** will initiate download, if links are called with ?download=\"true\" queryparam */\nconst getContentDisposition = (name, downloadFlag) => {\n  const dispositionType = downloadFlag === 'true' ? 'attachment;' : 'inline;';\n\n  const encodedName = encodeURIComponent(name);\n  const dispositionName = `filename=\"${encodedName}\"; filename=*UTF-8\"${encodedName}\";`;\n  const dispositionEncoding = 'charset=utf-8';\n\n  return `${dispositionType} ${dispositionName} ${dispositionEncoding}`;\n};\n","import { ReactiveCache } from '/imports/reactiveCache';\n// exporter maybe is broken since Gridfs introduced, add fs and path\nimport { createWorkbook } from './createWorkbook';\n\nclass ExporterCardPDF {\n  constructor(boardId) {\n    this._boardId = boardId;\n  }\n\n  build(res) {\n\n    /*\n        const fs = Npm.require('fs');\n        const os = Npm.require('os');\n        const path = Npm.require('path');\n\n        const byBoard = {\n          boardId: this._boardId,\n        };\n        const byBoardNoLinked = {\n          boardId: this._boardId,\n          linkedId: {\n            $in: ['', null],\n          },\n        };\n        // we do not want to retrieve boardId in related elements\n        const noBoardId = {\n          fields: {\n            boardId: 0,\n          },\n        };\n        const result = {\n          _format: 'wekan-board-1.0.0',\n        };\n        _.extend(\n          result,\n          ReactiveCache.getBoard(this._boardId, {\n            fields: {\n              stars: 0,\n            },\n          }),\n        );\n        result.lists = ReactiveCache.getLists(byBoard, noBoardId);\n        result.cards = ReactiveCache.getCards(byBoardNoLinked, noBoardId);\n        result.swimlanes = ReactiveCache.getSwimlanes(byBoard, noBoardId);\n        result.customFields = ReactiveCache.getCustomFields(\n          {\n            boardIds: {\n              $in: [this.boardId],\n            },\n          },\n          {\n            fields: {\n              boardId: 0,\n            },\n          },\n        );\n        result.comments = ReactiveCache.getCardComments(byBoard, noBoardId);\n        result.activities = ReactiveCache.getActivities(byBoard, noBoardId);\n        result.rules = ReactiveCache.getRules(byBoard, noBoardId);\n        result.checklists = [];\n        result.checklistItems = [];\n        result.subtaskItems = [];\n        result.triggers = [];\n        result.actions = [];\n        result.cards.forEach((card) => {\n          result.checklists.push(\n            ...ReactiveCache.getChecklists({\n              cardId: card._id,\n            }),\n          );\n          result.checklistItems.push(\n            ...ReactiveCache.getChecklistItems({\n              cardId: card._id,\n            }),\n          );\n          result.subtaskItems.push(\n            ...ReactiveCache.getCards({\n              parentId: card._id,\n            }),\n          );\n        });\n        result.rules.forEach((rule) => {\n          result.triggers.push(\n            ...ReactiveCache.getTriggers(\n              {\n                _id: rule.triggerId,\n              },\n              noBoardId,\n            ),\n          );\n          result.actions.push(\n            ...ReactiveCache.getActions(\n              {\n                _id: rule.actionId,\n              },\n              noBoardId,\n            ),\n          );\n        });\n\n        // we also have to export some user data - as the other elements only\n        // include id but we have to be careful:\n        // 1- only exports users that are linked somehow to that board\n        // 2- do not export any sensitive information\n        const users = {};\n        result.members.forEach((member) => {\n          users[member.userId] = true;\n        });\n        result.lists.forEach((list) => {\n          users[list.userId] = true;\n        });\n        result.cards.forEach((card) => {\n          users[card.userId] = true;\n          if (card.members) {\n            card.members.forEach((memberId) => {\n              users[memberId] = true;\n            });\n          }\n          if (card.assignees) {\n            card.assignees.forEach((memberId) => {\n              users[memberId] = true;\n            });\n          }\n        });\n        result.comments.forEach((comment) => {\n          users[comment.userId] = true;\n        });\n        result.activities.forEach((activity) => {\n          users[activity.userId] = true;\n        });\n        result.checklists.forEach((checklist) => {\n          users[checklist.userId] = true;\n        });\n        const byUserIds = {\n          _id: {\n            $in: Object.getOwnPropertyNames(users),\n          },\n        };\n        // we use whitelist to be sure we do not expose inadvertently\n        // some secret fields that gets added to User later.\n        const userFields = {\n          fields: {\n            _id: 1,\n            username: 1,\n            'profile.initials': 1,\n            'profile.avatarUrl': 1,\n          },\n        };\n        result.users = ReactiveCache.getUsers(byUserIds, userFields)\n          .map((user) => {\n            // user avatar is stored as a relative url, we export absolute\n            if ((user.profile || {}).avatarUrl) {\n              user.profile.avatarUrl = FlowRouter.url(user.profile.avatarUrl);\n            }\n            return user;\n          });\n\n        //init exceljs workbook\n        const workbook = createWorkbook();\n        workbook.creator = TAPi18n.__('export-board');\n        workbook.lastModifiedBy = TAPi18n.__('export-board');\n        workbook.created = new Date();\n        workbook.modified = new Date();\n        workbook.lastPrinted = new Date();\n        const filename = `${result.title}.xlsx`;\n        //init worksheet\n        const worksheet = workbook.addWorksheet(result.title, {\n          properties: {\n            tabColor: {\n              argb: 'FFC0000',\n            },\n          },\n          pageSetup: {\n            paperSize: 9,\n            orientation: 'landscape',\n          },\n        });\n        //get worksheet\n        const ws = workbook.getWorksheet(result.title);\n        ws.properties.defaultRowHeight = 20;\n        //init columns\n        //Excel font. Western: Arial. zh-CN: 宋体\n        ws.columns = [\n          {\n            key: 'a',\n            width: 14,\n          },\n          {\n            key: 'b',\n            width: 40,\n          },\n          {\n            key: 'c',\n            width: 60,\n          },\n          {\n            key: 'd',\n            width: 40,\n          },\n          {\n            key: 'e',\n            width: 20,\n          },\n          {\n            key: 'f',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'g',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'h',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'i',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'j',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'k',\n            width: 20,\n            style: {\n              font: {\n                name: TAPi18n.__('excel-font'),\n                size: '10',\n              },\n              numFmt: 'yyyy/mm/dd hh:mm:ss',\n            },\n          },\n          {\n            key: 'l',\n            width: 20,\n          },\n          {\n            key: 'm',\n            width: 20,\n          },\n          {\n            key: 'n',\n            width: 20,\n          },\n          {\n            key: 'o',\n            width: 20,\n          },\n          {\n            key: 'p',\n            width: 20,\n          },\n          {\n            key: 'q',\n            width: 20,\n          },\n          {\n            key: 'r',\n            width: 20,\n          },\n        ];\n\n        //add title line\n        ws.mergeCells('A1:H1');\n        ws.getCell('A1').value = result.title;\n        ws.getCell('A1').style = {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '20',\n          },\n        };\n        ws.getCell('A1').alignment = {\n          vertical: 'middle',\n          horizontal: 'center',\n        };\n        ws.getRow(1).height = 40;\n        //get member and assignee info\n        let jmem = '';\n        let jassig = '';\n        const jmeml = {};\n        const jassigl = {};\n        for (const i in result.users) {\n          jmem = `${jmem + result.users[i].username},`;\n          jmeml[result.users[i]._id] = result.users[i].username;\n        }\n        jmem = jmem.substr(0, jmem.length - 1);\n        for (const ia in result.users) {\n          jassig = `${jassig + result.users[ia].username},`;\n          jassigl[result.users[ia]._id] = result.users[ia].username;\n        }\n        jassig = jassig.substr(0, jassig.length - 1);\n        //get kanban list info\n        const jlist = {};\n        for (const klist in result.lists) {\n          jlist[result.lists[klist]._id] = result.lists[klist].title;\n        }\n        //get kanban swimlanes info\n        const jswimlane = {};\n        for (const kswimlane in result.swimlanes) {\n          jswimlane[result.swimlanes[kswimlane]._id] =\n            result.swimlanes[kswimlane].title;\n        }\n        //get kanban label info\n        const jlabel = {};\n        var isFirst = 1;\n        for (const klabel in result.labels) {\n          // console.log(klabel);\n          if (isFirst == 0) {\n            jlabel[result.labels[klabel]._id] = `,${result.labels[klabel].name}`;\n          } else {\n            isFirst = 0;\n            jlabel[result.labels[klabel]._id] = result.labels[klabel].name;\n          }\n        }\n        //add data +8 hours\n        function addTZhours(jdate) {\n          const curdate = new Date(jdate);\n          const checkCorrectDate = moment(curdate);\n          if (checkCorrectDate.isValid()) {\n            return curdate;\n          } else {\n            return ' ';\n          }\n          ////Do not add 8 hours to GMT. Use GMT instead.\n          ////Could not yet figure out how to get localtime.\n          //return new Date(curdate.setHours(curdate.getHours() + 8));\n          //return curdate;\n        }\n        //add blank row\n        ws.addRow().values = ['', '', '', '', '', ''];\n        //add kanban info\n        ws.addRow().values = [\n          TAPi18n.__('createdAt'),\n          addTZhours(result.createdAt),\n          TAPi18n.__('modifiedAt'),\n          addTZhours(result.modifiedAt),\n          TAPi18n.__('members'),\n          jmem,\n        ];\n        ws.getRow(3).font = {\n          name: TAPi18n.__('excel-font'),\n          size: 10,\n          bold: true,\n        };\n        ws.mergeCells('F3:R3');\n        ws.getCell('B3').style = {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n            bold: true,\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        };\n        //cell center\n        function cellCenter(cellno) {\n          ws.getCell(cellno).alignment = {\n            vertical: 'middle',\n            horizontal: 'center',\n            wrapText: true,\n          };\n        }\n        function cellLeft(cellno) {\n          ws.getCell(cellno).alignment = {\n            vertical: 'middle',\n            horizontal: 'left',\n            wrapText: true,\n          };\n        }\n        cellCenter('A3');\n        cellCenter('B3');\n        cellCenter('C3');\n        cellCenter('D3');\n        cellCenter('E3');\n        cellLeft('F3');\n        ws.getRow(3).height = 20;\n        //all border\n        function allBorder(cellno) {\n          ws.getCell(cellno).border = {\n            top: {\n              style: 'thin',\n            },\n            left: {\n              style: 'thin',\n            },\n            bottom: {\n              style: 'thin',\n            },\n            right: {\n              style: 'thin',\n            },\n          };\n        }\n        allBorder('A3');\n        allBorder('B3');\n        allBorder('C3');\n        allBorder('D3');\n        allBorder('E3');\n        allBorder('F3');\n        //add blank row\n        ws.addRow().values = [\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n        ];\n        //add card title\n        //ws.addRow().values = ['编号', '标题', '创建人', '创建时间', '更新时间', '列表', '成员', '描述', '标签'];\n        //this is where order in which the excel file generates\n        ws.addRow().values = [\n          TAPi18n.__('number'),\n          TAPi18n.__('title'),\n          TAPi18n.__('description'),\n          TAPi18n.__('parent-card'),\n          TAPi18n.__('owner'),\n          TAPi18n.__('createdAt'),\n          TAPi18n.__('last-modified-at'),\n          TAPi18n.__('card-received'),\n          TAPi18n.__('card-start'),\n          TAPi18n.__('card-due'),\n          TAPi18n.__('card-end'),\n          TAPi18n.__('list'),\n          TAPi18n.__('swimlane'),\n          TAPi18n.__('assignee'),\n          TAPi18n.__('members'),\n          TAPi18n.__('labels'),\n          TAPi18n.__('overtime-hours'),\n          TAPi18n.__('spent-time-hours'),\n        ];\n        ws.getRow(5).height = 20;\n        allBorder('A5');\n        allBorder('B5');\n        allBorder('C5');\n        allBorder('D5');\n        allBorder('E5');\n        allBorder('F5');\n        allBorder('G5');\n        allBorder('H5');\n        allBorder('I5');\n        allBorder('J5');\n        allBorder('K5');\n        allBorder('L5');\n        allBorder('M5');\n        allBorder('N5');\n        allBorder('O5');\n        allBorder('P5');\n        allBorder('Q5');\n        allBorder('R5');\n        cellCenter('A5');\n        cellCenter('B5');\n        cellCenter('C5');\n        cellCenter('D5');\n        cellCenter('E5');\n        cellCenter('F5');\n        cellCenter('G5');\n        cellCenter('H5');\n        cellCenter('I5');\n        cellCenter('J5');\n        cellCenter('K5');\n        cellCenter('L5');\n        cellCenter('M5');\n        cellCenter('N5');\n        cellCenter('O5');\n        cellCenter('P5');\n        cellCenter('Q5');\n        cellCenter('R5');\n        ws.getRow(5).font = {\n          name: TAPi18n.__('excel-font'),\n          size: 12,\n          bold: true,\n        };\n        //add blank row\n        //add card info\n        for (const i in result.cards) {\n          const jcard = result.cards[i];\n          //get member info\n          let jcmem = '';\n          for (const j in jcard.members) {\n            jcmem += jmeml[jcard.members[j]];\n            jcmem += ' ';\n          }\n          //get assignee info\n          let jcassig = '';\n          for (const ja in jcard.assignees) {\n            jcassig += jassigl[jcard.assignees[ja]];\n            jcassig += ' ';\n          }\n          //get card label info\n          let jclabel = '';\n          for (const jl in jcard.labelIds) {\n            jclabel += jlabel[jcard.labelIds[jl]];\n            jclabel += ' ';\n          }\n          //get parent name\n          if (jcard.parentId) {\n            const parentCard = result.cards.find(\n              (card) => card._id === jcard.parentId,\n            );\n            jcard.parentCardTitle = parentCard ? parentCard.title : '';\n          }\n\n          //add card detail\n          const t = Number(i) + 1;\n          ws.addRow().values = [\n            t.toString(),\n            jcard.title,\n            jcard.description,\n            jcard.parentCardTitle,\n            jmeml[jcard.userId],\n            addTZhours(jcard.createdAt),\n            addTZhours(jcard.dateLastActivity),\n            addTZhours(jcard.receivedAt),\n            addTZhours(jcard.startAt),\n            addTZhours(jcard.dueAt),\n            addTZhours(jcard.endAt),\n            jlist[jcard.listId],\n            jswimlane[jcard.swimlaneId],\n            jcassig,\n            jcmem,\n            jclabel,\n            jcard.isOvertime ? 'true' : 'false',\n            jcard.spentTime,\n          ];\n          const y = Number(i) + 6;\n          //ws.getRow(y).height = 25;\n          allBorder(`A${y}`);\n          allBorder(`B${y}`);\n          allBorder(`C${y}`);\n          allBorder(`D${y}`);\n          allBorder(`E${y}`);\n          allBorder(`F${y}`);\n          allBorder(`G${y}`);\n          allBorder(`H${y}`);\n          allBorder(`I${y}`);\n          allBorder(`J${y}`);\n          allBorder(`K${y}`);\n          allBorder(`L${y}`);\n          allBorder(`M${y}`);\n          allBorder(`N${y}`);\n          allBorder(`O${y}`);\n          allBorder(`P${y}`);\n          allBorder(`Q${y}`);\n          allBorder(`R${y}`);\n          cellCenter(`A${y}`);\n          ws.getCell(`B${y}`).alignment = {\n            wrapText: true,\n          };\n          ws.getCell(`C${y}`).alignment = {\n            wrapText: true,\n          };\n          ws.getCell(`M${y}`).alignment = {\n            wrapText: true,\n          };\n          ws.getCell(`N${y}`).alignment = {\n            wrapText: true,\n          };\n          ws.getCell(`O${y}`).alignment = {\n            wrapText: true,\n          };\n        }\n        workbook.xlsx.write(res).then(function () {});\n        */\n\n    var doc = new PDFDocument({size: 'A4', margin: 50});\n    doc.fontSize(12);\n    doc.text('Some test text', 10, 30, {align: 'center', width: 200});\n    this.response.writeHead(200, {\n      'Content-type': 'application/pdf',\n      'Content-Disposition': \"attachment; filename=test.pdf\"\n    });\n    this.response.end( doc.outputSync() );\n\n  }\n\n  canExport(user) {\n    const board = ReactiveCache.getBoard(this._boardId);\n    return board && board.isVisibleBy(user);\n  }\n}\n\nexport { ExporterCardPDF };\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\nimport { TAPi18n } from '/imports/i18n';\nimport { createWorkbook } from './createWorkbook';\n\n// exporter maybe is broken since Gridfs introduced, add fs and path\n\nclass ExporterExcel {\n  constructor(boardId, userLanguage) {\n    this._boardId = boardId;\n    this.userLanguage = userLanguage;\n  }\n\n  build(res) {\n    const fs = Npm.require('fs');\n    const os = Npm.require('os');\n    const path = Npm.require('path');\n\n    const byBoard = {\n      boardId: this._boardId,\n    };\n    const byBoardNoLinked = {\n      boardId: this._boardId,\n      linkedId: {\n        $in: ['', null],\n      },\n    };\n    // we do not want to retrieve boardId in related elements\n    const noBoardId = {\n      fields: {\n        boardId: 0,\n      },\n    };\n    const result = {\n      _format: 'wekan-board-1.0.0',\n    };\n    _.extend(\n      result,\n      ReactiveCache.getBoard(this._boardId, {\n        fields: {\n          stars: 0,\n        },\n      }),\n    );\n    result.lists = ReactiveCache.getLists(byBoard, noBoardId);\n    result.cards = ReactiveCache.getCards(byBoardNoLinked, noBoardId);\n    result.swimlanes = ReactiveCache.getSwimlanes(byBoard, noBoardId);\n    result.customFields = ReactiveCache.getCustomFields(\n      {\n        boardIds: {\n          $in: [this.boardId],\n        },\n      },\n      {\n        fields: {\n          boardId: 0,\n        },\n      },\n    );\n    result.comments = ReactiveCache.getCardComments(byBoard, noBoardId);\n    result.activities = ReactiveCache.getActivities(byBoard, noBoardId);\n    result.rules = ReactiveCache.getRules(byBoard, noBoardId);\n    result.checklists = [];\n    result.checklistItems = [];\n    result.subtaskItems = [];\n    result.triggers = [];\n    result.actions = [];\n    result.cards.forEach((card) => {\n      result.checklists.push(\n        ...ReactiveCache.getChecklists({\n          cardId: card._id,\n        }),\n      );\n      result.checklistItems.push(\n        ...ReactiveCache.getChecklistItems({\n          cardId: card._id,\n        }),\n      );\n      result.subtaskItems.push(\n        ...ReactiveCache.getCards({\n          parentId: card._id,\n        }),\n      );\n    });\n    result.rules.forEach((rule) => {\n      result.triggers.push(\n        ...ReactiveCache.getTriggers(\n          {\n            _id: rule.triggerId,\n          },\n          noBoardId,\n        ),\n      );\n      result.actions.push(\n        ...ReactiveCache.getActions(\n          {\n            _id: rule.actionId,\n          },\n          noBoardId,\n        ),\n      );\n    });\n\n    // we also have to export some user data - as the other elements only\n    // include id but we have to be careful:\n    // 1- only exports users that are linked somehow to that board\n    // 2- do not export any sensitive information\n    const users = {};\n    result.members.forEach((member) => {\n      users[member.userId] = true;\n    });\n    result.lists.forEach((list) => {\n      users[list.userId] = true;\n    });\n    result.cards.forEach((card) => {\n      users[card.userId] = true;\n      if (card.members) {\n        card.members.forEach((memberId) => {\n          users[memberId] = true;\n        });\n      }\n      if (card.assignees) {\n        card.assignees.forEach((memberId) => {\n          users[memberId] = true;\n        });\n      }\n    });\n    result.comments.forEach((comment) => {\n      users[comment.userId] = true;\n    });\n    result.activities.forEach((activity) => {\n      users[activity.userId] = true;\n    });\n    result.checklists.forEach((checklist) => {\n      users[checklist.userId] = true;\n    });\n    const byUserIds = {\n      _id: {\n        $in: Object.getOwnPropertyNames(users),\n      },\n    };\n    // we use whitelist to be sure we do not expose inadvertently\n    // some secret fields that gets added to User later.\n    const userFields = {\n      fields: {\n        _id: 1,\n        username: 1,\n        'profile.initials': 1,\n        'profile.avatarUrl': 1,\n      },\n    };\n    result.users = ReactiveCache.getUsers(byUserIds, userFields)\n      .map((user) => {\n        // user avatar is stored as a relative url, we export absolute\n        if ((user.profile || {}).avatarUrl) {\n          user.profile.avatarUrl = FlowRouter.url(user.profile.avatarUrl);\n        }\n        return user;\n      });\n\n\n\n    //init exceljs workbook\n    const workbook = createWorkbook();\n    workbook.creator = TAPi18n.__('export-board','',this.userLanguage);\n    workbook.lastModifiedBy = TAPi18n.__('export-board','',this.userLanguage);\n    workbook.created = new Date();\n    workbook.modified = new Date();\n    workbook.lastPrinted = new Date();\n    const filename = `${result.title}.xlsx`;\n    //init worksheet\n    let worksheetTitle = result.title;\n    if (worksheetTitle.length > 31) {\n      // MS Excel doesn't allow worksheet name longer than 31 chars\n      // Exceljs truncate names to 31 chars\n      let words = worksheetTitle.split(' ');\n      let tmpTitle = '';\n      for (let i=0;i<words.length; i++) {\n        if (words[0].length > 27) {\n          // title has no spaces\n          tmpTitle = words[0].substr(0,27) + ' ';\n          break;\n        }\n        if(tmpTitle.length + words[i].length < 27) {\n          tmpTitle += words[i] + ' ';\n        }\n        else {\n          break;\n        }\n      }\n      worksheetTitle = tmpTitle + '...';\n    }\n    const worksheet = workbook.addWorksheet(worksheetTitle, {\n      properties: {\n        tabColor: {\n          argb: 'FFC0000',\n        },\n      },\n      pageSetup: {\n        paperSize: 9,\n        orientation: 'landscape',\n      },\n    });\n    //get worksheet\n    const ws = workbook.getWorksheet(worksheetTitle);\n    ws.properties.defaultRowHeight = 20;\n    //init columns\n    //Excel font. Western: Arial. zh-CN: 宋体\n    ws.columns = [\n      {\n        key: 'a',\n        width: 14,\n      },\n      {\n        key: 'b',\n        width: 40,\n      },\n      {\n        key: 'c',\n        width: 60,\n      },\n      {\n        key: 'd',\n        width: 40,\n      },\n      {\n        key: 'e',\n        width: 20,\n      },\n      {\n        key: 'f',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'g',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'h',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'i',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'j',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'k',\n        width: 20,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'l',\n        width: 20,\n      },\n      {\n        key: 'm',\n        width: 20,\n      },\n      {\n        key: 'n',\n        width: 20,\n      },\n      {\n        key: 'o',\n        width: 20,\n      },\n      {\n        key: 'p',\n        width: 20,\n      },\n      {\n        key: 'q',\n        width: 20,\n      },\n      {\n        key: 'r',\n        width: 20,\n      },\n    ];\n\n    //add title line\n    ws.mergeCells('A1:H1');\n    ws.getCell('A1').value = result.title;\n    ws.getCell('A1').style = {\n      font: {\n        name: TAPi18n.__('excel-font'),\n        size: '20',\n      },\n    };\n    ws.getCell('A1').alignment = {\n      vertical: 'middle',\n      horizontal: 'left',\n    };\n    ws.getRow(1).height = 40;\n    //get member and assignee info\n    let jmem = '';\n    let jassig = '';\n    const jmeml = {};\n    const jassigl = {};\n    for (const i in result.users) {\n      jmem = `${jmem + result.users[i].username},`;\n      jmeml[result.users[i]._id] = result.users[i].username;\n    }\n    jmem = jmem.substr(0, jmem.length - 1);\n    for (const ia in result.users) {\n      jassig = `${jassig + result.users[ia].username},`;\n      jassigl[result.users[ia]._id] = result.users[ia].username;\n    }\n    jassig = jassig.substr(0, jassig.length - 1);\n    //get kanban list info\n    const jlist = {};\n    for (const klist in result.lists) {\n      jlist[result.lists[klist]._id] = result.lists[klist].title;\n    }\n    //get kanban swimlanes info\n    const jswimlane = {};\n    for (const kswimlane in result.swimlanes) {\n      jswimlane[result.swimlanes[kswimlane]._id] =\n        result.swimlanes[kswimlane].title;\n    }\n    //get kanban label info\n    const jlabel = {};\n    var isFirst = 1;\n    for (const klabel in result.labels) {\n      // console.log(klabel);\n      if (isFirst == 0) {\n        jlabel[result.labels[klabel]._id] = `,${result.labels[klabel].name}`;\n      } else {\n        isFirst = 0;\n        jlabel[result.labels[klabel]._id] = result.labels[klabel].name;\n      }\n    }\n    //add data +8 hours\n    function addTZhours(jdate) {\n      if (!jdate) { return ' '; }\n      const curdate = new Date(jdate);\n      const checkCorrectDate = moment(curdate);\n      if (checkCorrectDate.isValid()) {\n        return curdate;\n      } else {\n        return ' ';\n      }\n      ////Do not add 8 hours to GMT. Use GMT instead.\n      ////Could not yet figure out how to get localtime.\n      //return new Date(curdate.setHours(curdate.getHours() + 8));\n      //return curdate;\n    }\n\n    //cell center\n    function cellCenter(cellno) {\n      ws.getCell(cellno).alignment = {\n        vertical: 'middle',\n        horizontal: 'center',\n        wrapText: true,\n      };\n    }\n    function cellLeft(cellno) {\n      ws.getCell(cellno).alignment = {\n        vertical: 'middle',\n        horizontal: 'left',\n        wrapText: true,\n      };\n    }\n    // cell Card alignment\n    function cellCardAlignment(cellno) {\n      ws.getCell(cellno).alignment = {\n        vertical: 'top',\n        horizontal: 'left',\n        wrapText: true,\n      };\n    }\n    //all border\n    function allBorder(cellno) {\n      ws.getCell(cellno).border = {\n        top: {\n          style: 'thin',\n        },\n        left: {\n          style: 'thin',\n        },\n        bottom: {\n          style: 'thin',\n        },\n        right: {\n          style: 'thin',\n        },\n      };\n    }\n\n    //add blank row\n    ws.addRow().values = ['', '', '', '', '', ''];\n\n    //add board description\n    ws.addRow().values = [\n      TAPi18n.__('description','',this.userLanguage),\n      result.description,\n    ];\n\n    ws.mergeCells('B3:H3');\n    ws.getRow(3).height = 40;\n    // In MS Excel, we can't use the AutoFit feature on a column that contains a cell merged with cells in other columns.\n    // Likewise, we can't use AutoFit on a row that contains a cell merged with cells in other rows.\n    ws.getRow(3).font = {\n      name: TAPi18n.__('excel-font'),\n      size: 10,\n    };\n    ws.getCell('A3').style = {\n      font: {\n        name: TAPi18n.__('excel-font'),\n        size: '10',\n        bold: true,\n      },\n    };\n    ws.getCell(`B3`).alignment = {\n      wrapText: true,\n      vertical: 'middle',\n    };\n    cellCenter('A3');\n\n    //add blank row\n    ws.addRow().values = ['', '', '', '', '', ''];\n\n    //add kanban info\n    ws.addRow().values = [\n      TAPi18n.__('createdAt','',this.userLanguage),\n      addTZhours(result.createdAt),\n      TAPi18n.__('modifiedAt','',this.userLanguage),\n      addTZhours(result.modifiedAt),\n      TAPi18n.__('members','',this.userLanguage),\n      jmem,\n    ];\n    ws.getRow(5).font = {\n      name: TAPi18n.__('excel-font'),\n      size: 10,\n      bold: true,\n    };\n    ws.mergeCells('F5:R5');\n    ws.getCell('B5').style = {\n      font: {\n        name: TAPi18n.__('excel-font'),\n        size: '10',\n        bold: true,\n      },\n      numFmt: 'yyyy/mm/dd hh:mm:ss',\n    };\n    ws.getCell('D5').style = {\n      font: {\n        name: TAPi18n.__('excel-font'),\n        size: '10',\n        bold: true,\n      },\n      numFmt: 'yyyy/mm/dd hh:mm:ss',\n    };\n\n    cellCenter('A5');\n    cellCenter('B5');\n    cellCenter('C5');\n    cellCenter('D5');\n    cellCenter('E5');\n    cellLeft('F5');\n    ws.getRow(5).height = 20;\n\n    allBorder('A5');\n    allBorder('B5');\n    allBorder('C5');\n    allBorder('D5');\n    allBorder('E5');\n    allBorder('F5');\n    //add blank row\n    ws.addRow().values = [\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n    ];\n    //add card title\n    //ws.addRow().values = ['编号', '标题', '创建人', '创建时间', '更新时间', '列表', '成员', '描述', '标签'];\n    //this is where order in which the excel file generates\n    ws.addRow().values = [\n      TAPi18n.__('number','',this.userLanguage),\n      TAPi18n.__('title','',this.userLanguage),\n      TAPi18n.__('description','',this.userLanguage),\n      TAPi18n.__('parent-card','',this.userLanguage),\n      TAPi18n.__('owner','',this.userLanguage),\n      TAPi18n.__('createdAt','',this.userLanguage),\n      TAPi18n.__('last-modified-at','',this.userLanguage),\n      TAPi18n.__('card-received','',this.userLanguage),\n      TAPi18n.__('card-start','',this.userLanguage),\n      TAPi18n.__('card-due','',this.userLanguage),\n      TAPi18n.__('card-end','',this.userLanguage),\n      TAPi18n.__('list','',this.userLanguage),\n      TAPi18n.__('swimlane','',this.userLanguage),\n      TAPi18n.__('assignee','',this.userLanguage),\n      TAPi18n.__('members','',this.userLanguage),\n      TAPi18n.__('labels','',this.userLanguage),\n      TAPi18n.__('overtime-hours','',this.userLanguage),\n      TAPi18n.__('spent-time-hours','',this.userLanguage),\n    ];\n    ws.getRow(7).height = 20;\n    allBorder('A7');\n    allBorder('B7');\n    allBorder('C7');\n    allBorder('D7');\n    allBorder('E7');\n    allBorder('F7');\n    allBorder('G7');\n    allBorder('H7');\n    allBorder('I7');\n    allBorder('J7');\n    allBorder('K7');\n    allBorder('L7');\n    allBorder('M7');\n    allBorder('N7');\n    allBorder('O7');\n    allBorder('P7');\n    allBorder('Q7');\n    allBorder('R7');\n    cellCenter('A7');\n    cellCenter('B7');\n    cellCenter('C7');\n    cellCenter('D7');\n    cellCenter('E7');\n    cellCenter('F7');\n    cellCenter('G7');\n    cellCenter('H7');\n    cellCenter('I7');\n    cellCenter('J7');\n    cellCenter('K7');\n    cellCenter('L7');\n    cellCenter('M7');\n    cellCenter('N7');\n    cellCenter('O7');\n    cellCenter('P7');\n    cellCenter('Q7');\n    cellCenter('R7');\n    ws.getRow(7).font = {\n      name: TAPi18n.__('excel-font'),\n      size: 10,\n      bold: true,\n    };\n    //add blank row\n    //add card info\n    for (const i in result.cards) {\n      const jcard = result.cards[i];\n      //get member info\n      let jcmem = '';\n      for (const j in jcard.members) {\n        jcmem += jmeml[jcard.members[j]];\n        jcmem += ' ';\n      }\n      //get assignee info\n      let jcassig = '';\n      for (const ja in jcard.assignees) {\n        jcassig += jassigl[jcard.assignees[ja]];\n        jcassig += ' ';\n      }\n      //get card label info\n      let jclabel = '';\n      for (const jl in jcard.labelIds) {\n        jclabel += jlabel[jcard.labelIds[jl]];\n        jclabel += ' ';\n      }\n      //get parent name\n      if (jcard.parentId) {\n        const parentCard = result.cards.find(\n          (card) => card._id === jcard.parentId,\n        );\n        jcard.parentCardTitle = parentCard ? parentCard.title : '';\n      }\n\n      //add card detail\n      const t = Number(i) + 1;\n      ws.addRow().values = [\n        t.toString(),\n        jcard.title,\n        jcard.description,\n        jcard.parentCardTitle,\n        jmeml[jcard.userId],\n        addTZhours(jcard.createdAt),\n        addTZhours(jcard.dateLastActivity),\n        addTZhours(jcard.receivedAt),\n        addTZhours(jcard.startAt),\n        addTZhours(jcard.dueAt),\n        addTZhours(jcard.endAt),\n        jlist[jcard.listId],\n        jswimlane[jcard.swimlaneId],\n        jcassig,\n        jcmem,\n        jclabel,\n        jcard.isOvertime ? 'true' : 'false',\n        jcard.spentTime,\n      ];\n      const y = Number(i) + 8;\n      //ws.getRow(y).height = 25;\n      ws.getRow(y).font = {\n        name: TAPi18n.__('excel-font'),\n        size: 10,\n      };\n      // Border\n      allBorder(`A${y}`);\n      allBorder(`B${y}`);\n      allBorder(`C${y}`);\n      allBorder(`D${y}`);\n      allBorder(`E${y}`);\n      allBorder(`F${y}`);\n      allBorder(`G${y}`);\n      allBorder(`H${y}`);\n      allBorder(`I${y}`);\n      allBorder(`J${y}`);\n      allBorder(`K${y}`);\n      allBorder(`L${y}`);\n      allBorder(`M${y}`);\n      allBorder(`N${y}`);\n      allBorder(`O${y}`);\n      allBorder(`P${y}`);\n      allBorder(`Q${y}`);\n      allBorder(`R${y}`);\n      // Alignment\n      ws.getCell(`A${y}`).alignment = {\n        vertical: 'top',\n        horizontal: 'right',\n        wrapText: true,\n      };\n      cellCardAlignment(`B${y}`);\n      cellCardAlignment(`C${y}`);\n      cellCardAlignment(`D${y}`);\n      cellCardAlignment(`E${y}`);\n      cellCardAlignment(`F${y}`);\n      cellCardAlignment(`G${y}`);\n      cellCardAlignment(`H${y}`);\n      cellCardAlignment(`I${y}`);\n      cellCardAlignment(`J${y}`);\n      cellCardAlignment(`K${y}`);\n      cellCardAlignment(`L${y}`);\n      cellCardAlignment(`M${y}`);\n      cellCardAlignment(`N${y}`);\n      cellCardAlignment(`O${y}`);\n      cellCardAlignment(`P${y}`);\n      ws.getCell(`Q${y}`).alignment = {\n        vertical: 'top',\n        horizontal: 'center',\n        wrapText: true,\n      };\n      ws.getCell(`R${y}`).alignment = {\n        vertical: 'top',\n        horizontal: 'center',\n        wrapText: true,\n      };\n    }\n\n\n\n    //Activities worksheet\n    //init worksheet\n    const worksheet2 = workbook.addWorksheet(TAPi18n.__('activity','',this.userLanguage), {\n      properties: {\n        tabColor: {\n          argb: 'FFC0000',\n        },\n      },\n      pageSetup: {\n        paperSize: 9,\n        orientation: 'landscape',\n      },\n    });\n    //get worksheet\n    const ws2 = workbook.getWorksheet(TAPi18n.__('activity','',this.userLanguage));\n    ws2.properties.defaultRowHeight = 20;\n    //init columns\n    ws2.columns = [\n      {\n        key: 'a',\n        width: 14,\n      },\n      {\n        key: 'b',\n        width: 60,\n      },\n      {\n        key: 'c',\n        width: 40,\n      },\n      {\n        key: 'd',\n        width: 40,\n      },\n      {\n        key: 'e',\n        width: 30,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n      {\n        key: 'f',\n        width: 30,\n        style: {\n          font: {\n            name: TAPi18n.__('excel-font'),\n            size: '10',\n          },\n          numFmt: 'yyyy/mm/dd hh:mm:ss',\n        },\n      },\n    ];\n    // cell Card alignment\n    function cellCardAlignmentWs2(cellno) {\n      ws2.getCell(cellno).alignment = {\n        vertical: 'top',\n        horizontal: 'left',\n        wrapText: true,\n      };\n    }\n    //all border\n    function allBorderWs2(cellno) {\n      ws2.getCell(cellno).border = {\n        top: {\n          style: 'thin',\n        },\n        left: {\n          style: 'thin',\n        },\n        bottom: {\n          style: 'thin',\n        },\n        right: {\n          style: 'thin',\n        },\n      };\n    }\n\n    //add title line\n    ws2.mergeCells('A1:F1');\n    ws2.getCell('A1').value = result.title;\n    ws2.getCell('A1').style = {\n      font: {\n        name: TAPi18n.__('excel-font'),\n        size: '20',\n      },\n    };\n    ws2.getCell('A1').alignment = {\n      vertical: 'middle',\n      horizontal: 'center',\n      wrapText: true,\n    };\n    ws2.getRow(1).height = 40;\n\n    //add blank row\n    ws2.addRow().values = ['', '', '', '', '', ''];\n\n    //add comment title\n    ws2.addRow().values = [\n      TAPi18n.__('number','',this.userLanguage),\n      TAPi18n.__('activity','',this.userLanguage),\n      TAPi18n.__('card','',this.userLanguage),\n      TAPi18n.__('owner','',this.userLanguage),\n      TAPi18n.__('createdAt','',this.userLanguage),\n      TAPi18n.__('last-modified-at','',this.userLanguage),\n    ];\n    ws2.getRow(3).height = 20;\n    ws2.getRow(3).font = {\n      name: TAPi18n.__('excel-font'),\n      size: 10,\n      bold: true,\n    };\n    ws2.getRow(3).alignment = {\n      vertical: 'middle',\n      horizontal: 'center',\n      wrapText: true,\n    };\n    allBorderWs2('A3');\n    allBorderWs2('B3');\n    allBorderWs2('C3');\n    allBorderWs2('D3');\n    allBorderWs2('E3');\n    allBorderWs2('F3');\n\n    //add comment info\n    let commentcnt = 0;\n    for (const i in result.comments) {\n      const jcomment = result.comments[i];\n      //card title\n      const parentCard = result.cards.find(\n        (card) => card._id === jcomment.cardId,\n      );\n      jcomment.cardTitle = parentCard ? parentCard.title : '';\n      if (jcomment.cardTitle == '') {\n        continue;\n      }\n      //add comment detail\n      commentcnt++;\n      ws2.addRow().values = [\n        commentcnt.toString(),\n        jcomment.text,\n        jcomment.cardTitle,\n        jmeml[jcomment.userId],\n        addTZhours(jcomment.createdAt),\n        addTZhours(jcomment.modifiedAt),\n      ];\n      const y = commentcnt + 3;\n      ws2.getRow(y).font = {\n        name: TAPi18n.__('excel-font'),\n        size: 10,\n      };\n      // Border\n      allBorderWs2(`A${y}`);\n      allBorderWs2(`B${y}`);\n      allBorderWs2(`C${y}`);\n      allBorderWs2(`D${y}`);\n      allBorderWs2(`E${y}`);\n      allBorderWs2(`F${y}`);\n      // Alignment\n      ws2.getCell(`A${y}`).alignment = {\n        vertical: 'top',\n        horizontal: 'right',\n        wrapText: true,\n      };\n      cellCardAlignmentWs2(`B${y}`);\n      cellCardAlignmentWs2(`C${y}`);\n      cellCardAlignmentWs2(`D${y}`);\n      cellCardAlignmentWs2(`E${y}`);\n      cellCardAlignmentWs2(`F${y}`);\n\n    }\n    workbook.xlsx.write(res).then(function () {});\n  }\n\n  canExport(user) {\n    const board = ReactiveCache.getBoard(this._boardId);\n    return board && board.isVisibleBy(user);\n  }\n}\n\nexport { ExporterExcel };\n","import Excel from '@wekanteam/exceljs';\n\nexport const createWorkbook = function() {\n  return new Excel.Workbook();\n};\n","import { Meteor } from 'meteor/meteor';\nimport Users from '../users';\n\nfunction acceptedIpAddress(ipAddress) {\n  const trustedIpAddress = process.env.METRICS_ACCEPTED_IP_ADDRESS;\n  return (\n    trustedIpAddress !== undefined &&\n    trustedIpAddress.split(',').includes(ipAddress)\n  );\n}\n\nfunction accessToken(req) {\n  const valid_token = process.env.METRICS_ACCESS_TOKEN;\n  let token;\n  if (req.headers && req.headers.authorization) {\n    var parts = req.headers.authorization.split(\" \");\n\n    if (parts.length === 2) {\n      var scheme = parts[0];\n      var credentials = parts[1];\n\n      if (/^Bearer$/i.test(scheme)) {\n        token = credentials;\n      }\n    }\n  }\n  if (!token && req.query && req.query.access_token) {\n    token = req.query.access_token;\n  }\n  return (\n    token !== undefined &&\n    valid_token !== undefined &&\n    token == valid_token\n  );\n}\n\nconst getBoardTitleWithMostActivities = (dateWithXdaysAgo, nbLimit) => {\n  return Promise.await(\n    Activities.rawCollection()\n      .aggregate([\n      {\n          $match: { modifiedAt: { $gte: dateWithXdaysAgo }}\n      },\n      {\n       $group: { _id: '$boardId', count: { $sum: 1 } }\n      },\n      {\n       $sort: { count: -1 }\n      },\n      {\n       $lookup: { from: 'boards', localField: '_id', foreignField: '_id', as: 'lookup'}\n      },\n      {\n       $project: { \"lookup.title\":1, \"count\":1}\n      }])\n      .limit(nbLimit).toArray()\n      );\n};\n\nconst getBoards = (boardIds) => {\n  const ret = ReactiveCache.getBoards({ _id: { $in: boardIds } });\n  return ret;\n};\nMeteor.startup(() => {\n  WebApp.connectHandlers.use('/metrics', (req, res, next) => {\n    try {\n      const ipAddress =\n        req.headers['x-forwarded-for'] || req.socket.remoteAddress;\n      // if(process.env.TRUST_PROXY_FORXARD)\n      // {\n      //   const ipAddress = req.headers['x-forwarded-for'] || req.socket.remoteAddress\n      // }else{\n      //   const ipAddress = req.socket.remoteAddress\n      // }\n\n      // List of trusted ip adress will be found in environment variable \"METRICS_ACCEPTED_IP_ADDRESS\" (separeted with commas)\n      if (acceptedIpAddress(ipAddress) || (accessToken(req))) {\n        let metricsRes = '';\n        let resCount = 0;\n        //connected users\n        metricsRes += '# Number of connected users\\n';\n\n        // Get number of connected user by using meteor socketJs\n        const allOpenedSockets = Meteor.server.stream_server.open_sockets;\n        let connectedUserIds = [];\n        allOpenedSockets.forEach(\n          (socket) =>\n            socket._meteorSession.userId !== null &&\n            connectedUserIds.push(socket._meteorSession.userId),\n        );\n        resCount = connectedUserIds.length; // KPI 1\n        metricsRes += 'wekan_connectedUsers ' + resCount + '\\n';\n\n        //registered users\n        metricsRes += '# Number of registered users\\n';\n\n        // Get number of registered user\n        resCount = ReactiveCache.getUsers({}).length; // KPI 2\n        metricsRes += 'wekan_registeredUsers ' + resCount + '\\n';\n        resCount = 0;\n\n        //board numbers\n        metricsRes += '# Number of registered boards\\n';\n\n        // Get number of registered boards\n        resCount = ReactiveCache.getBoards({ archived: false, type: 'board' }).length; // KPI 3\n        metricsRes += 'wekan_registeredboards ' + resCount + '\\n';\n        resCount = 0;\n\n        //board numbers by registered users\n        metricsRes += '# Number of registered boards by registered users\\n';\n\n        // Get number of registered boards by registered users\n        resCount =\n          ReactiveCache.getBoards({ archived: false, type: 'board' }).length /\n          ReactiveCache.getUsers({}).length; // KPI 4\n        metricsRes +=\n          'wekan_registeredboardsBysRegisteredUsers ' + resCount + '\\n';\n        resCount = 0;\n\n        //board numbers with only one member\n        metricsRes += '# Number of registered boards\\n';\n\n        // Get board numbers with only one member\n        resCount = ReactiveCache.getBoards({\n          archived: false,\n          type: 'board',\n          members: { $size: 1 },\n        }).length; // KPI 5\n        metricsRes +=\n          'wekan_registeredboardsWithOnlyOneMember ' + resCount + '\\n';\n        resCount = 0;\n\n        // KPI 6 : - store last login date\n        //         KPI 6 = count where date of last connection > x days\n        // Cutting in label since 5 days / 10 days / 20 days / 30 days\n\n        //Number of users with last connection dated 5 days ago\n        metricsRes +=\n          '# Number of users with last connection dated 5 days ago\\n';\n\n        // Get number of users with last connection dated 5 days ago\n        let xdays = 5;\n        let dateWithXdaysAgo = new Date(\n          new Date() - xdays * 24 * 60 * 60 * 1000,\n        );\n        resCount = ReactiveCache.getUsers({\n          lastConnectionDate: { $gte: dateWithXdaysAgo },\n        }).length; // KPI 5\n        metricsRes +=\n          'wekan_usersWithLastConnectionDated5DaysAgo ' + resCount + '\\n';\n        resCount = 0;\n\n        metricsRes +=\n          '# Number of users with last connection dated 10 days ago\\n';\n\n        // Get number of users with last connection dated 10 days ago\n        xdays = 10;\n        dateWithXdaysAgo = new Date(new Date() - xdays * 24 * 60 * 60 * 1000);\n        resCount = ReactiveCache.getUsers({\n          lastConnectionDate: { $gte: dateWithXdaysAgo },\n        }).length; // KPI 5\n        metricsRes +=\n          'wekan_usersWithLastConnectionDated10DaysAgo ' + resCount + '\\n';\n        resCount = 0;\n\n        metricsRes +=\n          '# Number of users with last connection dated 20 days ago\\n';\n\n        // Get number of users with last connection dated 20 days ago\n        xdays = 20;\n        dateWithXdaysAgo = new Date(new Date() - xdays * 24 * 60 * 60 * 1000);\n        resCount = ReactiveCache.getUsers({\n          lastConnectionDate: { $gte: dateWithXdaysAgo },\n        }).length; // KPI 5\n        metricsRes +=\n          'wekan_usersWithLastConnectionDated20DaysAgo ' + resCount + '\\n';\n        resCount = 0;\n\n        metricsRes +=\n          '# Number of users with last connection dated 30 days ago\\n';\n\n        // Get number of users with last connection dated 20 days ago\n        xdays = 30;\n        dateWithXdaysAgo = new Date(new Date() - xdays * 24 * 60 * 60 * 1000);\n        resCount = ReactiveCache.getUsers({\n          lastConnectionDate: { $gte: dateWithXdaysAgo },\n        }).length; // KPI 5\n        metricsRes +=\n          'wekan_usersWithLastConnectionDated30DaysAgo ' + resCount + '\\n';\n        resCount = 0;\n        // TO DO:\n        // connection average: ((disconnection date - last connection date) + (last average)) / 2\n        // KPI 7 : sum of connection average / number of users (ignore users with 0 average)\n\n        metricsRes +=\n          '# Top 10 boards with most activities dated 30 days ago\\n';\n        //Get top 10 table with most activities in current month\n        const boardTitleWithMostActivities = getBoardTitleWithMostActivities(\n          dateWithXdaysAgo,\n          xdays,\n        );\n\n        const boardWithMostActivities = boardTitleWithMostActivities.map(\n          (board) => board.lookup[0].title,\n        );\n\n        boardWithMostActivities.forEach((title, index) => {\n          metricsRes +=\n            `wekan_top10BoardsWithMostActivities{n=\"${title}\"} ${\n              index + 1\n            }` + '\\n';\n        });\n\n        res.writeHead(200); // HTTP status\n        res.end(metricsRes);\n      } else {\n        res.writeHead(401); // HTTP status\n        res.end(\n          'IpAddress: ' +\n            ipAddress +\n            ' is not authorized to perform this action !!\\n',\n        );\n      }\n    } catch (e) {\n      res.writeHead(500); // HTTP status\n      res.end(e.toString());\n    }\n  });\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nAccessibilitySettings = new Mongo.Collection('accessibilitySettings');\n\nAccessibilitySettings.attachSchema(\n  new SimpleSchema({\n    enabled: {\n      type: Boolean,\n      defaultValue: false,\n    },\n    title: {\n      type: String,\n      optional: true,\n    },\n    body: {\n      type: String,\n      optional: true,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nAccessibilitySettings.allow({\n  update(userId) {\n    const user = ReactiveCache.getUser(userId);\n    return user && user.isAdmin;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    AccessibilitySettings._collection.createIndex({ modifiedAt: -1 });\n    const accessibilitySetting = AccessibilitySettings.findOne({});\n    if (!accessibilitySetting) {\n      AccessibilitySettings.insert({ enabled: false, sort: 0 });\n    }\n  });\n}\n\nexport default AccessibilitySettings;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nAccountSettings = new Mongo.Collection('accountSettings');\n\nAccountSettings.attachSchema(\n  new SimpleSchema({\n    _id: {\n      type: String,\n    },\n    booleanValue: {\n      type: Boolean,\n      optional: true,\n    },\n    sort: {\n      type: Number,\n      decimal: true,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nAccountSettings.allow({\n  update(userId) {\n    const user = ReactiveCache.getUser(userId);\n    return user && user.isAdmin;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    AccountSettings._collection.createIndex({ modifiedAt: -1 });\n    AccountSettings.upsert(\n      { _id: 'accounts-allowEmailChange' },\n      {\n        $setOnInsert: {\n          booleanValue: false,\n          sort: 0,\n        },\n      },\n    );\n    AccountSettings.upsert(\n      { _id: 'accounts-allowUserNameChange' },\n      {\n        $setOnInsert: {\n          booleanValue: false,\n          sort: 1,\n        },\n      },\n    );\n    AccountSettings.upsert(\n      { _id: 'accounts-allowUserDelete' },\n      {\n        $setOnInsert: {\n          booleanValue: false,\n          sort: 0,\n        },\n      },\n    );\n  });\n}\n\nAccountSettings.helpers({\n  allowEmailChange() {\n    return AccountSettings.findOne('accounts-allowEmailChange').booleanValue;\n  },\n  allowUserNameChange() {\n    return AccountSettings.findOne('accounts-allowUserNameChange').booleanValue;\n  },\n  allowUserDelete() {\n    return AccountSettings.findOne('accounts-allowUserDelete').booleanValue;\n  },\n});\n\nexport default AccountSettings;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\n\nActions = new Mongo.Collection('actions');\n\nActions.allow({\n  insert(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n});\n\nActions.before.insert((userId, doc) => {\n  doc.createdAt = new Date();\n  doc.modifiedAt = doc.createdAt;\n});\n\nActions.before.update((userId, doc, fieldNames, modifier) => {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.modifiedAt = new Date();\n});\n\nActions.helpers({\n  description() {\n    return this.desc;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Actions._collection.createIndex({ modifiedAt: -1 });\n  });\n}\n\nexport default Actions;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\n// Activities don't need a schema because they are always set from the a trusted\n// environment - the server - and there is no risk that a user change the logic\n// we use with this collection. Moreover using a schema for this collection\n// would be difficult (different activities have different fields) and wouldn't\n// bring any direct advantage.\n//\n// XXX The activities API is not so nice and need some functionalities. For\n// instance if a user archive a card, and un-archive it a few seconds later we\n// should remove both activities assuming it was an error the user decided to\n// revert.\nActivities = new Mongo.Collection('activities');\n\nActivities.helpers({\n  board() {\n    return ReactiveCache.getBoard(this.boardId);\n  },\n  oldBoard() {\n    return ReactiveCache.getBoard(this.oldBoardId);\n  },\n  user() {\n    return ReactiveCache.getUser(this.userId);\n  },\n  member() {\n    return ReactiveCache.getUser(this.memberId);\n  },\n  list() {\n    return ReactiveCache.getList(this.listId);\n  },\n  swimlane() {\n    return ReactiveCache.getSwimlane(this.swimlaneId);\n  },\n  oldSwimlane() {\n    return ReactiveCache.getSwimlane(this.oldSwimlaneId);\n  },\n  oldList() {\n    return ReactiveCache.getList(this.oldListId);\n  },\n  card() {\n    return ReactiveCache.getCard(this.cardId);\n  },\n  comment() {\n    return ReactiveCache.getCardComment(this.commentId);\n  },\n  attachment() {\n    return ReactiveCache.getAttachment(this.attachmentId);\n  },\n  checklist() {\n    return ReactiveCache.getChecklist(this.checklistId);\n  },\n  checklistItem() {\n    return ReactiveCache.getChecklistItem(this.checklistItemId);\n  },\n  subtasks() {\n    return ReactiveCache.getCard(this.subtaskId);\n  },\n  customField() {\n    return ReactiveCache.getCustomField(this.customFieldId);\n  },\n  label() {\n    // Label activity did not work yet, unable to edit labels when tried this.\n    return ReactiveCache.getCard(this.labelId);\n  },\n});\n\nActivities.before.update((userId, doc, fieldNames, modifier) => {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.modifiedAt = new Date();\n});\n\nActivities.before.insert((userId, doc) => {\n  doc.createdAt = new Date();\n  doc.modifiedAt = doc.createdAt;\n});\n\nActivities.after.insert((userId, doc) => {\n  const activity = Activities._transform(doc);\n  RulesHelper.executeRules(activity);\n});\n\nif (Meteor.isServer) {\n  // For efficiency create indexes on the date of creation, and on the date of\n  // creation in conjunction with the card or board id, as corresponding views\n  // are largely used in the App. See #524.\n  Meteor.startup(() => {\n    Activities._collection.createIndex({ createdAt: -1 });\n    Activities._collection.createIndex({ modifiedAt: -1 });\n    Activities._collection.createIndex({ cardId: 1, createdAt: -1 });\n    Activities._collection.createIndex({ boardId: 1, createdAt: -1 });\n    Activities._collection.createIndex(\n      { commentId: 1 },\n      { partialFilterExpression: { commentId: { $exists: true } } },\n    );\n    Activities._collection.createIndex(\n      { attachmentId: 1 },\n      { partialFilterExpression: { attachmentId: { $exists: true } } },\n    );\n    Activities._collection.createIndex(\n      { customFieldId: 1 },\n      { partialFilterExpression: { customFieldId: { $exists: true } } },\n    );\n    // Label activity did not work yet, unable to edit labels when tried this.\n    //Activities._collection.dropIndex({ labelId: 1 }, { \"indexKey\": -1 });\n    //Activities._collection.dropIndex({ labelId: 1 }, { partialFilterExpression: { labelId: { $exists: true } } });\n  });\n\n  Activities.after.insert((userId, doc) => {\n    const activity = Activities._transform(doc);\n    let participants = [];\n    let watchers = [];\n    let title = 'act-activity-notify';\n    const board = ReactiveCache.getBoard(activity.boardId);\n    const description = `act-${activity.activityType}`;\n    const params = {\n      activityId: activity._id,\n    };\n    if (activity.userId) {\n      // No need send notification to user of activity\n      // participants = _.union(participants, [activity.userId]);\n      const user = activity.user();\n      if (user) {\n        if (user.getName()) {\n          params.user = user.getName();\n        }\n        if (user.emails) {\n          params.userEmails = user.emails;\n        }\n        if (activity.userId) {\n          params.userId = activity.userId;\n        }\n      }\n    }\n    if (activity.boardId) {\n      if (board.title) {\n        if (board.title.length > 0) {\n          params.board = board.title;\n        } else {\n          params.board = '';\n        }\n      } else {\n        params.board = '';\n      }\n      title = 'act-withBoardTitle';\n      params.url = board.absoluteUrl();\n      params.boardId = activity.boardId;\n    }\n    if (activity.oldBoardId) {\n      const oldBoard = activity.oldBoard();\n      if (oldBoard) {\n        watchers = _.union(watchers, oldBoard.watchers || []);\n        params.oldBoard = oldBoard.title;\n        params.oldBoardId = activity.oldBoardId;\n      }\n    }\n    if (activity.memberId) {\n      participants = _.union(participants, [activity.memberId]);\n      params.member = activity.member().getName();\n    }\n    if (activity.listId) {\n      const list = activity.list();\n      if (list) {\n        if (list.watchers !== undefined) {\n          watchers = _.union(watchers, list.watchers || []);\n        }\n        params.list = list.title;\n        params.listId = activity.listId;\n      }\n    }\n    if (activity.oldListId) {\n      const oldList = activity.oldList();\n      if (oldList) {\n        watchers = _.union(watchers, oldList.watchers || []);\n        params.oldList = oldList.title;\n        params.oldListId = activity.oldListId;\n      }\n    }\n    if (activity.oldSwimlaneId) {\n      const oldSwimlane = activity.oldSwimlane();\n      if (oldSwimlane) {\n        watchers = _.union(watchers, oldSwimlane.watchers || []);\n        params.oldSwimlane = oldSwimlane.title;\n        params.oldSwimlaneId = activity.oldSwimlaneId;\n      }\n    }\n    if (activity.cardId) {\n      const card = activity.card();\n      participants = _.union(participants, [card.userId], card.members || []);\n      watchers = _.union(watchers, card.watchers || []);\n      params.card = card.title;\n      title = 'act-withCardTitle';\n      params.url = card.absoluteUrl();\n      params.cardId = activity.cardId;\n    }\n    if (activity.swimlaneId) {\n      const swimlane = activity.swimlane();\n      params.swimlane = swimlane.title;\n      params.swimlaneId = activity.swimlaneId;\n    }\n    if (activity.commentId) {\n      const comment = activity.comment();\n      params.comment = comment.text;\n      if (board) {\n        const comment = params.comment;\n        const knownUsers = board.members.map(member => {\n          const u = ReactiveCache.getUser(member.userId);\n          if (u) {\n            member.username = u.username;\n            member.emails = u.emails;\n          }\n          return member;\n        });\n        const mentionRegex = /\\B@(?:(?:\"([\\w.\\s-]*)\")|([\\w.-]+))/gi; // including space in username\n        let currentMention;\n        while ((currentMention = mentionRegex.exec(comment)) !== null) {\n          /*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\n          const [ignored, quoteduser, simple] = currentMention;\n          const username = quoteduser || simple;\n          if (username === params.user) {\n            // ignore commenter mention himself?\n            continue;\n          }\n\n          if (activity.boardId && username === 'board_members') {\n            // mentions all board members\n            const knownUids = knownUsers.map(u => u.userId);\n            watchers = _.union(watchers, [...knownUids]);\n            title = 'act-atUserComment';\n          } else if (activity.cardId && username === 'card_members') {\n            // mentions all card members if assigned\n            const card = activity.card();\n            watchers = _.union(watchers, [...card.members]);\n            title = 'act-atUserComment';\n          } else {\n            const atUser = _.findWhere(knownUsers, { username });\n            if (!atUser) {\n              continue;\n            }\n\n            const uid = atUser.userId;\n            params.atUsername = username;\n            params.atEmails = atUser.emails;\n            title = 'act-atUserComment';\n            watchers = _.union(watchers, [uid]);\n          }\n\n        }\n      }\n      params.commentId = comment._id;\n    }\n    if (activity.attachmentId) {\n      params.attachment = activity.attachmentName;\n      params.attachmentId = activity.attachmentId;\n    }\n    if (activity.checklistId) {\n      const checklist = activity.checklist();\n      if (checklist) {\n        if (checklist.title) {\n          params.checklist = checklist.title;\n        }\n      }\n    }\n    if (activity.checklistItemId) {\n      const checklistItem = activity.checklistItem();\n      if (checklistItem) {\n        if (checklistItem.title) {\n          params.checklistItem = checklistItem.title;\n        }\n      }\n    }\n    if (activity.customFieldId) {\n      const customField = activity.customField();\n      if (customField) {\n        if (customField.name) {\n          params.customField = customField.name;\n        }\n        if (activity.value) {\n          params.customFieldValue = activity.value;\n        }\n      }\n    }\n    // Label activity did not work yet, unable to edit labels when tried this.\n    if (activity.labelId) {\n      const label = activity.label();\n      if (label) {\n        if (label.name) {\n          params.label = label.name;\n        } else if (label.color) {\n          params.label = label.color;\n        }\n        if (label._id) {\n          params.labelId = label._id;\n        }\n      }\n    }\n    if (\n      (!activity.timeKey || activity.timeKey === 'dueAt') &&\n      activity.timeValue\n    ) {\n      // due time reminder, if it doesn't have old value, it's a brand new set, need some differentiation\n      title = activity.timeOldValue ? 'act-withDue' : 'act-newDue';\n    }\n    ['timeValue', 'timeOldValue'].forEach(key => {\n      // copy time related keys & values to params\n      const value = activity[key];\n      if (value) params[key] = value;\n    });\n    if (board) {\n      const BIGEVENTS = process.env.BIGEVENTS_PATTERN; // if environment BIGEVENTS_PATTERN is set, any activityType matching it is important\n      if (BIGEVENTS) {\n        try {\n          const atype = activity.activityType;\n          if (new RegExp(BIGEVENTS).exec(atype)) {\n            watchers = _.union(\n              watchers,\n              board.activeMembers().map(member => member.userId),\n            ); // notify all active members for important events\n          }\n        } catch (e) {\n          // passed env var BIGEVENTS_PATTERN is not a valid regex\n        }\n      }\n\n      const watchingUsers = _.pluck(\n        _.where(board.watchers, { level: 'watching' }),\n        'userId',\n      );\n      const trackingUsers = _.pluck(\n        _.where(board.watchers, { level: 'tracking' }),\n        'userId',\n      );\n      watchers = _.union(\n        watchers,\n        watchingUsers,\n        _.intersection(participants, trackingUsers),\n      );\n    }\n    Notifications.getUsers(watchers).forEach(user => {\n      // don't notify a user of their own behavior\n      if (user._id !== userId) {\n        Notifications.notify(user, title, description, params);\n      }\n    });\n\n    const integrations = ReactiveCache.getIntegrations({\n      boardId: { $in: [board._id, Integrations.Const.GLOBAL_WEBHOOK_ID] },\n      // type: 'outgoing-webhooks', // all types\n      enabled: true,\n      activities: { $in: [description, 'all'] },\n    });\n    if (integrations.length > 0) {\n      params.watchers = watchers;\n      integrations.forEach(integration => {\n        Meteor.call(\n          'outgoingWebhooks',\n          integration,\n          description,\n          params,\n          () => {\n            return;\n          },\n        );\n      });\n    }\n  });\n}\n\nexport default Activities;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nAnnouncements = new Mongo.Collection('announcements');\n\nAnnouncements.attachSchema(\n  new SimpleSchema({\n    enabled: {\n      type: Boolean,\n      defaultValue: false,\n    },\n    title: {\n      type: String,\n      optional: true,\n    },\n    body: {\n      type: String,\n      optional: true,\n    },\n    sort: {\n      type: Number,\n      decimal: true,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nAnnouncements.allow({\n  update(userId) {\n    const user = ReactiveCache.getUser(userId);\n    return user && user.isAdmin;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Announcements._collection.createIndex({ modifiedAt: -1 });\n    const announcements = Announcements.findOne({});\n    if (!announcements) {\n      Announcements.insert({ enabled: false, sort: 0 });\n    }\n  });\n}\n\nexport default Announcements;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\nimport { FilesCollection } from 'meteor/ostrio:files';\nimport { isFileValid } from './fileValidation';\nimport { createBucket } from './lib/grid/createBucket';\nimport fs from 'fs';\nimport path from 'path';\nimport { AttachmentStoreStrategyFilesystem, AttachmentStoreStrategyGridFs, AttachmentStoreStrategyS3 } from '/models/lib/attachmentStoreStrategy';\nimport FileStoreStrategyFactory, {moveToStorage, rename, STORAGE_NAME_FILESYSTEM, STORAGE_NAME_GRIDFS, STORAGE_NAME_S3} from '/models/lib/fileStoreStrategy';\n\nlet attachmentUploadExternalProgram;\nlet attachmentUploadMimeTypes = [];\nlet attachmentUploadSize = 0;\nlet attachmentBucket;\nlet storagePath;\n\nif (Meteor.isServer) {\n  attachmentBucket = createBucket('attachments');\n\n  if (process.env.ATTACHMENTS_UPLOAD_MIME_TYPES) {\n    attachmentUploadMimeTypes = process.env.ATTACHMENTS_UPLOAD_MIME_TYPES.split(',');\n    attachmentUploadMimeTypes = attachmentUploadMimeTypes.map(value => value.trim());\n  }\n\n  if (process.env.ATTACHMENTS_UPLOAD_MAX_SIZE) {\n    attachmentUploadSize = parseInt(process.env.ATTACHMENTS_UPLOAD_MAX_SIZE);\n\n    if (isNaN(attachmentUploadSize)) {\n      attachmentUploadSize = 0\n    }\n  }\n\n  if (process.env.ATTACHMENTS_UPLOAD_EXTERNAL_PROGRAM) {\n    attachmentUploadExternalProgram = process.env.ATTACHMENTS_UPLOAD_EXTERNAL_PROGRAM;\n\n    if (!attachmentUploadExternalProgram.includes(\"{file}\")) {\n      attachmentUploadExternalProgram = undefined;\n    }\n  }\n\n  storagePath = path.join(process.env.WRITABLE_PATH, 'attachments');\n}\n\nexport const fileStoreStrategyFactory = new FileStoreStrategyFactory(AttachmentStoreStrategyFilesystem, storagePath, AttachmentStoreStrategyGridFs, attachmentBucket);\n\n// XXX Enforce a schema for the Attachments FilesCollection\n// see: https://github.com/VeliovGroup/Meteor-Files/wiki/Schema\n\nAttachments = new FilesCollection({\n  debug: false, // Change to `true` for debugging\n  collectionName: 'attachments',\n  allowClientCode: true,\n  namingFunction(opts) {\n    let filenameWithoutExtension = \"\"\n    let fileId = \"\";\n    if (opts?.name) {\n      // Client\n      filenameWithoutExtension = opts.name.replace(/(.+)\\..+/, \"$1\");\n      fileId = opts.meta.fileId;\n      delete opts.meta.fileId;\n    } else if (opts?.file?.name) {\n      // Server\n      if (opts.file.extension) {\n        filenameWithoutExtension = opts.file.name.replace(new RegExp(opts.file.extensionWithDot + \"$\"), \"\")\n      } else {\n        // file has no extension, so don't replace anything, otherwise the last character is removed (because extensionWithDot = '.')\n        filenameWithoutExtension = opts.file.name;\n      }\n      fileId = opts.fileId;\n    }\n    else {\n      // should never reach here\n      filenameWithoutExtension = Math.random().toString(36).slice(2);\n      fileId = Math.random().toString(36).slice(2);\n    }\n\n    // OLD:\n    //const ret = fileId + \"-original-\" + filenameWithoutExtension;\n    // NEW: Save file only with filename of ObjectID, not including filename.\n    // Fixes https://github.com/wekan/wekan/issues/4416#issuecomment-1510517168\n    const ret = fileId;\n    // remove fileId from meta, it was only stored there to have this information here in the namingFunction function\n    return ret;\n  },\n  sanitize(str, max, replacement) {\n    // keep the original filename\n    return str;\n  },\n  storagePath() {\n    const ret = fileStoreStrategyFactory.storagePath;\n    return ret;\n  },\n  onAfterUpload(fileObj) {\n    // current storage is the filesystem, update object and database\n    Object.keys(fileObj.versions).forEach(versionName => {\n      fileObj.versions[versionName].storage = STORAGE_NAME_FILESYSTEM;\n    });\n\n    this._now = new Date();\n    Attachments.update({ _id: fileObj._id }, { $set: { \"versions\" : fileObj.versions } });\n    Attachments.update({ _id: fileObj.uploadedAtOstrio }, { $set: { \"uploadedAtOstrio\" : this._now } });\n\n    let storageDestination = fileObj.meta.copyStorage || STORAGE_NAME_GRIDFS;\n    Meteor.defer(() => Meteor.call('validateAttachmentAndMoveToStorage', fileObj._id, storageDestination));\n  },\n  interceptDownload(http, fileObj, versionName) {\n    const ret = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName).interceptDownload(http, this.cacheControl);\n    return ret;\n  },\n  onAfterRemove(files) {\n    files.forEach(fileObj => {\n      Object.keys(fileObj.versions).forEach(versionName => {\n        fileStoreStrategyFactory.getFileStrategy(fileObj, versionName).onAfterRemove();\n      });\n    });\n  },\n  // We authorize the attachment download either:\n  // - if the board is public, everyone (even unconnected) can download it\n  // - if the board is private, only board members can download it\n  protected(fileObj) {\n    // file may have been deleted already again after upload validation failed\n    if (!fileObj) {\n      return false;\n    }\n\n    const board = ReactiveCache.getBoard(fileObj.meta.boardId);\n    if (board.isPublic()) {\n      return true;\n    }\n\n    return board.hasMember(this.userId);\n  },\n});\n\nif (Meteor.isServer) {\n  Attachments.allow({\n    insert(userId, fileObj) {\n      return allowIsBoardMember(userId, ReactiveCache.getBoard(fileObj.boardId));\n    },\n    update(userId, fileObj) {\n      return allowIsBoardMember(userId, ReactiveCache.getBoard(fileObj.boardId));\n    },\n    remove(userId, fileObj) {\n      return allowIsBoardMember(userId, ReactiveCache.getBoard(fileObj.boardId));\n    },\n    fetch: ['meta'],\n  });\n\n  Meteor.methods({\n    moveAttachmentToStorage(fileObjId, storageDestination) {\n      check(fileObjId, String);\n      check(storageDestination, String);\n\n      const fileObj = ReactiveCache.getAttachment(fileObjId);\n      moveToStorage(fileObj, storageDestination, fileStoreStrategyFactory);\n    },\n    renameAttachment(fileObjId, newName) {\n      check(fileObjId, String);\n      check(newName, String);\n\n      const fileObj = ReactiveCache.getAttachment(fileObjId);\n      rename(fileObj, newName, fileStoreStrategyFactory);\n    },\n    validateAttachment(fileObjId) {\n      check(fileObjId, String);\n\n      const fileObj = ReactiveCache.getAttachment(fileObjId);\n      const isValid = Promise.await(isFileValid(fileObj, attachmentUploadMimeTypes, attachmentUploadSize, attachmentUploadExternalProgram));\n\n      if (!isValid) {\n        Attachments.remove(fileObjId);\n      }\n    },\n    validateAttachmentAndMoveToStorage(fileObjId, storageDestination) {\n      check(fileObjId, String);\n      check(storageDestination, String);\n\n      Meteor.call('validateAttachment', fileObjId);\n\n      const fileObj = ReactiveCache.getAttachment(fileObjId);\n\n      if (fileObj) {\n        Meteor.defer(() => Meteor.call('moveAttachmentToStorage', fileObjId, storageDestination));\n      }\n    },\n  });\n\n  Meteor.startup(() => {\n    Attachments.collection.createIndex({ 'meta.cardId': 1 });\n    const storagePath = fileStoreStrategyFactory.storagePath;\n    if (!fs.existsSync(storagePath)) {\n      console.log(\"create storagePath because it doesn't exist: \" + storagePath);\n      fs.mkdirSync(storagePath, { recursive: true });\n    }\n  });\n}\n\nexport default Attachments;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\nimport { FilesCollection } from 'meteor/ostrio:files';\nimport { formatFleURL } from 'meteor/ostrio:files/lib';\nimport { isFileValid } from './fileValidation';\nimport { createBucket } from './lib/grid/createBucket';\nimport { TAPi18n } from '/imports/i18n';\nimport fs from 'fs';\nimport path from 'path';\nimport FileStoreStrategyFactory, { FileStoreStrategyFilesystem, FileStoreStrategyGridFs, STORAGE_NAME_FILESYSTEM } from '/models/lib/fileStoreStrategy';\n\nconst filesize = require('filesize');\n\nlet avatarsUploadExternalProgram;\nlet avatarsUploadMimeTypes = [];\nlet avatarsUploadSize = 72000;\nlet avatarsBucket;\nlet storagePath;\n\nif (Meteor.isServer) {\n  if (process.env.AVATARS_UPLOAD_MIME_TYPES) {\n    avatarsUploadMimeTypes = process.env.AVATARS_UPLOAD_MIME_TYPES.split(',');\n    avatarsUploadMimeTypes = avatarsUploadMimeTypes.map(value => value.trim());\n  }\n\n  if (process.env.AVATARS_UPLOAD_MAX_SIZE) {\n    avatarsUploadSize_ = parseInt(process.env.AVATARS_UPLOAD_MAX_SIZE);\n\n    if (_.isNumber(avatarsUploadSize_) && avatarsUploadSize_ > 0) {\n      avatarsUploadSize = avatarsUploadSize_;\n    }\n  }\n\n  if (process.env.AVATARS_UPLOAD_EXTERNAL_PROGRAM) {\n    avatarsUploadExternalProgram = process.env.AVATARS_UPLOAD_EXTERNAL_PROGRAM;\n\n    if (!avatarsUploadExternalProgram.includes(\"{file}\")) {\n      avatarsUploadExternalProgram = undefined;\n    }\n  }\n\n  avatarsBucket = createBucket('avatars');\n  storagePath = path.join(process.env.WRITABLE_PATH, 'avatars');\n}\n\nconst fileStoreStrategyFactory = new FileStoreStrategyFactory(FileStoreStrategyFilesystem, storagePath, FileStoreStrategyGridFs, avatarsBucket);\n\nAvatars = new FilesCollection({\n  debug: false, // Change to `true` for debugging\n  collectionName: 'avatars',\n  allowClientCode: true,\n  namingFunction(opts) {\n    let filenameWithoutExtension = \"\"\n    let fileId = \"\";\n    if (opts?.name) {\n      // Client\n      filenameWithoutExtension = opts.name.replace(/(.+)\\..+/, \"$1\");\n      fileId = opts.meta.fileId;\n      delete opts.meta.fileId;\n    } else if (opts?.file?.name) {\n      // Server\n      if (opts.file.extension) {\n        filenameWithoutExtension = opts.file.name.replace(new RegExp(opts.file.extensionWithDot + \"$\"), \"\")\n      } else {\n        // file has no extension, so don't replace anything, otherwise the last character is removed (because extensionWithDot = '.')\n        filenameWithoutExtension = opts.file.name;\n      }\n      fileId = opts.fileId;\n    }\n    else {\n      // should never reach here\n      filenameWithoutExtension = Math.random().toString(36).slice(2);\n      fileId = Math.random().toString(36).slice(2);\n    }\n    const ret = fileId + \"-original-\" + filenameWithoutExtension;\n    // remove fileId from meta, it was only stored there to have this information here in the namingFunction function\n    return ret;\n  },\n  sanitize(str, max, replacement) {\n    // keep the original filename\n    return str;\n  },\n  storagePath() {\n    const ret = fileStoreStrategyFactory.storagePath;\n    return ret;\n  },\n  onBeforeUpload(file) {\n    if (file.size <= avatarsUploadSize && file.type.startsWith('image/')) {\n      return true;\n    }\n    return TAPi18n.__('avatar-too-big', {size: filesize(avatarsUploadSize)});\n  },\n  onAfterUpload(fileObj) {\n    // current storage is the filesystem, update object and database\n    Object.keys(fileObj.versions).forEach(versionName => {\n      fileObj.versions[versionName].storage = STORAGE_NAME_FILESYSTEM;\n    });\n\n    Avatars.update({ _id: fileObj._id }, { $set: { \"versions\": fileObj.versions } });\n\n    const isValid = Promise.await(isFileValid(fileObj, avatarsUploadMimeTypes, avatarsUploadSize, avatarsUploadExternalProgram));\n\n    if (isValid) {\n      ReactiveCache.getUser(fileObj.userId).setAvatarUrl(`${formatFleURL(fileObj)}?auth=false&brokenIsFine=true`);\n    } else {\n      Avatars.remove(fileObj._id);\n    }\n  },\n  interceptDownload(http, fileObj, versionName) {\n    const ret = fileStoreStrategyFactory.getFileStrategy(fileObj, versionName).interceptDownload(http, this.cacheControl);\n    return ret;\n  },\n  onBeforeRemove(files) {\n    files.forEach(fileObj => {\n      if (fileObj.userId) {\n        ReactiveCache.getUser(fileObj.userId).setAvatarUrl('');\n      }\n    });\n\n    return true;\n  },\n  onAfterRemove(files) {\n    files.forEach(fileObj => {\n      Object.keys(fileObj.versions).forEach(versionName => {\n        fileStoreStrategyFactory.getFileStrategy(fileObj, versionName).onAfterRemove();\n      });\n    });\n  },\n});\n\nfunction isOwner(userId, doc) {\n  return userId && userId === doc.userId;\n}\n\nif (Meteor.isServer) {\n  Avatars.allow({\n    insert: isOwner,\n    update: isOwner,\n    remove: isOwner,\n    fetch: ['userId'],\n  });\n\n  Meteor.startup(() => {\n    const storagePath = fileStoreStrategyFactory.storagePath;\n    if (!fs.existsSync(storagePath)) {\n      console.log(\"create storagePath because it doesn't exist: \" + storagePath);\n      fs.mkdirSync(storagePath, { recursive: true });\n    }\n  });\n}\n\nexport default Avatars;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport escapeForRegex from 'escape-string-regexp';\nimport { TAPi18n } from '/imports/i18n';\nimport {\n  ALLOWED_BOARD_COLORS,\n  ALLOWED_COLORS,\n  TYPE_BOARD,\n  TYPE_TEMPLATE_BOARD,\n  TYPE_TEMPLATE_CONTAINER,\n} from '/config/const';\nimport Users from \"./users\";\n\n// const escapeForRegex = require('escape-string-regexp');\n\nBoards = new Mongo.Collection('boards');\n\n/**\n * This is a Board.\n */\nBoards.attachSchema(\n  new SimpleSchema({\n    title: {\n      /**\n       * The title of the board\n       */\n      type: String,\n    },\n    slug: {\n      /**\n       * The title slugified.\n       */\n      type: String,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        // In some cases (Chinese and Japanese for instance) the `getSlug` function\n        // return an empty string. This is causes bugs in our application so we set\n        // a default slug in this case.\n        // Improvment would be to change client URL after slug is changed\n        const title = this.field('title');\n        if (title.isSet && !this.isSet) {\n          let slug = 'board';\n          slug = getSlug(title.value) || slug;\n          return slug;\n        }\n      },\n    },\n    archived: {\n      /**\n       * Is the board archived?\n       */\n      type: Boolean,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return false;\n        }\n      },\n    },\n    archivedAt: {\n      /**\n       * Latest archiving time of the board\n       */\n      type: Date,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * Creation time of the board\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    // XXX Inconsistent field naming\n    modifiedAt: {\n      /**\n       * Last modification time of the board\n       */\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    // De-normalized number of users that have starred this board\n    stars: {\n      /**\n       * How many stars the board has\n       */\n      type: Number,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return 0;\n        }\n      },\n    },\n    // De-normalized label system\n    labels: {\n      /**\n       * List of labels attached to a board\n       */\n      type: [Object],\n      optional: true,\n      /* Commented out, so does not create labels to new boards.\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          const colors = Boards.simpleSchema()._schema['labels.$.color']\n            .allowedValues;\n          const defaultLabelsColors = _.clone(colors).splice(0, 6);\n          return defaultLabelsColors.map(color => ({\n            color,\n            _id: Random.id(6),\n            name: '',\n          }));\n        }\n      },\n      */\n    },\n    'labels.$._id': {\n      /**\n       * Unique id of a label\n       */\n      // We don't specify that this field must be unique in the board because that\n      // will cause performance penalties and is not necessary since this field is\n      // always set on the server.\n      // XXX Actually if we create a new label, the `_id` is set on the client\n      // without being overwritten by the server, could it be a problem?\n      type: String,\n    },\n    'labels.$.name': {\n      /**\n       * Name of a label\n       */\n      type: String,\n      optional: true,\n    },\n    'labels.$.color': {\n      /**\n       * color of a label.\n       *\n       * Can be amongst `green`, `yellow`, `orange`, `red`, `purple`,\n       * `blue`, `sky`, `lime`, `pink`, `black`,\n       * `silver`, `peachpuff`, `crimson`, `plum`, `darkgreen`,\n       * `slateblue`, `magenta`, `gold`, `navy`, `gray`,\n       * `saddlebrown`, `paleturquoise`, `mistyrose`, `indigo`\n       */\n      type: String,\n      allowedValues: ALLOWED_COLORS,\n    },\n    // XXX We might want to maintain more informations under the member sub-\n    // documents like de-normalized meta-data (the date the member joined the\n    // board, the number of contributions, etc.).\n    members: {\n      /**\n       * List of members of a board\n       */\n      type: [Object],\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return [\n            {\n              userId: this.userId,\n              isAdmin: true,\n              isActive: true,\n              isNoComments: false,\n              isCommentOnly: false,\n              isWorker: false,\n            },\n          ];\n        }\n      },\n    },\n    'members.$.userId': {\n      /**\n       * The uniq ID of the member\n       */\n      type: String,\n    },\n    'members.$.isAdmin': {\n      /**\n       * Is the member an admin of the board?\n       */\n      type: Boolean,\n    },\n    'members.$.isActive': {\n      /**\n       * Is the member active?\n       */\n      type: Boolean,\n    },\n    'members.$.isNoComments': {\n      /**\n       * Is the member not allowed to make comments\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'members.$.isCommentOnly': {\n      /**\n       * Is the member only allowed to comment on the board\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'members.$.isWorker': {\n      /**\n       * Is the member only allowed to move card, assign himself to card and comment\n       */\n      type: Boolean,\n      optional: true,\n    },\n    permission: {\n      /**\n       * visibility of the board\n       */\n      type: String,\n      allowedValues: ['public', 'private'],\n    },\n    orgs: {\n      /**\n       * the list of organizations that a board belongs to\n       */\n       type: [Object],\n       optional: true,\n    },\n    'orgs.$.orgId':{\n      /**\n       * The uniq ID of the organization\n       */\n       type: String,\n    },\n    'orgs.$.orgDisplayName':{\n      /**\n       * The display name of the organization\n       */\n       type: String,\n    },\n    'orgs.$.isActive': {\n      /**\n       * Is the organization active?\n       */\n      type: Boolean,\n    },\n    teams: {\n      /**\n       * the list of teams that a board belongs to\n       */\n       type: [Object],\n       optional: true,\n    },\n    'teams.$.teamId':{\n      /**\n       * The uniq ID of the team\n       */\n       type: String,\n    },\n    'teams.$.teamDisplayName':{\n      /**\n       * The display name of the team\n       */\n       type: String,\n    },\n    'teams.$.isActive': {\n      /**\n       * Is the team active?\n       */\n      type: Boolean,\n    },\n    color: {\n      /**\n       * The color of the board.\n       */\n      type: String,\n      allowedValues: ALLOWED_BOARD_COLORS,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return ALLOWED_BOARD_COLORS[0];\n        }\n      },\n    },\n    backgroundImageURL: {\n      /**\n       * The background image URL of the board.\n       */\n      type: String,\n      optional: true,\n    },\n    allowsCardCounterList: {\n      /**\n       * Show card counter per list\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    allowsBoardMemberList: {\n      /**\n       * Show board member list\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    description: {\n      /**\n       * The description of the board\n       */\n      type: String,\n      optional: true,\n    },\n    subtasksDefaultBoardId: {\n      /**\n       * The default board ID assigned to subtasks.\n       */\n      type: String,\n      optional: true,\n      defaultValue: null,\n    },\n\n    subtasksDefaultListId: {\n      /**\n       * The default List ID assigned to subtasks.\n       */\n      type: String,\n      optional: true,\n      defaultValue: null,\n    },\n\n    dateSettingsDefaultBoardId: {\n      type: String,\n      optional: true,\n      defaultValue: null,\n    },\n\n    dateSettingsDefaultListId: {\n      type: String,\n      optional: true,\n      defaultValue: null,\n    },\n\n    allowsSubtasks: {\n      /**\n       * Does the board allows subtasks?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsAttachments: {\n      /**\n       * Does the board allows attachments?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsChecklists: {\n      /**\n       * Does the board allows checklists?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsComments: {\n      /**\n       * Does the board allows comments?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsDescriptionTitle: {\n      /**\n       * Does the board allows description title?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsDescriptionText: {\n      /**\n       * Does the board allows description text?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n    allowsDescriptionTextOnMinicard: {\n      /**\n       * Does the board allows description text on minicard?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsCoverAttachmentOnMinicard: {\n      /**\n       * Does the board allows cover attachment on minicard?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsBadgeAttachmentOnMinicard: {\n      /**\n       * Does the board allows badge attachment on minicard?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsCardSortingByNumberOnMinicard: {\n      /**\n       * Does the board allows card sorting by number on minicard?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsCardNumber: {\n      /**\n       * Does the board allows card numbers?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsActivities: {\n      /**\n       * Does the board allows comments?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsLabels: {\n      /**\n       * Does the board allows labels?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsCreator: {\n      /**\n       * Does the board allow creator?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsCreatorOnMinicard: {\n      /**\n       * Does the board allow creator?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n\n    allowsAssignee: {\n      /**\n       * Does the board allows assignee?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsMembers: {\n      /**\n       * Does the board allows members?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsRequestedBy: {\n      /**\n       * Does the board allows requested by?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsCardSortingByNumber: {\n      /**\n       * Does the board allows card sorting by number?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsShowLists: {\n      /**\n       * Does the board allows show lists on the card?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsAssignedBy: {\n      /**\n       * Does the board allows requested by?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsReceivedDate: {\n      /**\n       * Does the board allows received date?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsStartDate: {\n      /**\n       * Does the board allows start date?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsEndDate: {\n      /**\n       * Does the board allows end date?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    allowsDueDate: {\n      /**\n       * Does the board allows due date?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n\n    presentParentTask: {\n      /**\n       * Controls how to present the parent task:\n       *\n       * - `prefix-with-full-path`: add a prefix with the full path\n       * - `prefix-with-parent`: add a prefisx with the parent name\n       * - `subtext-with-full-path`: add a subtext with the full path\n       * - `subtext-with-parent`: add a subtext with the parent name\n       * - `no-parent`: does not show the parent at all\n       */\n      type: String,\n      allowedValues: [\n        'prefix-with-full-path',\n        'prefix-with-parent',\n        'subtext-with-full-path',\n        'subtext-with-parent',\n        'no-parent',\n      ],\n      optional: true,\n      defaultValue: 'no-parent',\n    },\n    receivedAt: {\n      /**\n       * Date the card was received\n       */\n      type: Date,\n      optional: true,\n    },\n    startAt: {\n      /**\n       * Starting date of the board.\n       */\n      type: Date,\n      optional: true,\n    },\n    dueAt: {\n      /**\n       * Due date of the board.\n       */\n      type: Date,\n      optional: true,\n    },\n    endAt: {\n      /**\n       * End date of the board.\n       */\n      type: Date,\n      optional: true,\n    },\n    spentTime: {\n      /**\n       * Time spent in the board.\n       */\n      type: Number,\n      decimal: true,\n      optional: true,\n    },\n    isOvertime: {\n      /**\n       * Is the board overtimed?\n       */\n      type: Boolean,\n      defaultValue: false,\n      optional: true,\n    },\n    type: {\n      /**\n       * The type of board\n       * possible values: board, template-board, template-container\n       */\n      type: String,\n      defaultValue: TYPE_BOARD,\n      allowedValues: [TYPE_BOARD, TYPE_TEMPLATE_BOARD, TYPE_TEMPLATE_CONTAINER],\n    },\n    sort: {\n      /**\n       * Sort value\n       */\n      type: Number,\n      decimal: true,\n      defaultValue: -1,\n    },\n    showActivities: {\n      type: Boolean,\n      defaultValue: false,\n    },\n  }),\n);\n\nBoards.helpers({\n  copy() {\n    const oldId = this._id;\n    const oldWatchers = this.watchers ? this.watchers.slice() : [];\n    delete this._id;\n    delete this.slug;\n    this.title = this.copyTitle();\n    const _id = Boards.insert(this);\n\n    // Temporary remove watchers to disable notifications\n      Boards.update(_id, {\n        $set: {\n          watchers: []\n        },\n    });\n\n    // Copy all swimlanes in board\n    ReactiveCache.getSwimlanes({\n      boardId: oldId,\n      archived: false,\n    }).forEach(swimlane => {\n      swimlane.type = 'swimlane';\n      swimlane.copy(_id);\n    });\n\n    // copy custom field definitions\n    const cfMap = {};\n    ReactiveCache.getCustomFields({ boardIds: oldId }).forEach(cf => {\n      const id = cf._id;\n      delete cf._id;\n      cf.boardIds = [_id];\n      cfMap[id] = CustomFields.insert(cf);\n    });\n    ReactiveCache.getCards({ boardId: _id }).forEach(card => {\n      Cards.update(card._id, {\n        $set: {\n          customFields: card.customFields.map(cf => {\n            cf._id = cfMap[cf._id];\n            return cf;\n          }),\n        },\n      });\n    });\n\n    // copy rules, actions, and triggers\n    const actionsMap = {};\n    ReactiveCache.getActions({ boardId: oldId }).forEach(action => {\n      const id = action._id;\n      delete action._id;\n      action.boardId = _id;\n      actionsMap[id] = Actions.insert(action);\n    });\n    const triggersMap = {};\n    ReactiveCache.getTriggers({ boardId: oldId }).forEach(trigger => {\n      const id = trigger._id;\n      delete trigger._id;\n      trigger.boardId = _id;\n      triggersMap[id] = Triggers.insert(trigger);\n    });\n    ReactiveCache.getRules({ boardId: oldId }).forEach(rule => {\n      delete rule._id;\n      rule.boardId = _id;\n      rule.actionId = actionsMap[rule.actionId];\n      rule.triggerId = triggersMap[rule.triggerId];\n      Rules.insert(rule);\n    });\n\n    // Re-set Watchers to reenable notification\n    Boards.update(_id, {\n      $set: { watchers: oldWatchers }\n    });\n\n    return _id;\n  },\n  /**\n   * Return a unique title based on the current title\n   *\n   * @returns {string|null}\n   */\n  copyTitle() {\n    return Boards.uniqueTitle(this.title);\n  },\n\n  /**\n   * Is supplied user authorized to view this board?\n   */\n  isVisibleBy(user) {\n    if (this.isPublic()) {\n      // public boards are visible to everyone\n      return true;\n    } else {\n      // otherwise you have to be logged-in and active member\n      return user && this.isActiveMember(user._id);\n    }\n  },\n\n  /**\n   * Is the user one of the active members of the board?\n   *\n   * @param userId\n   * @returns {boolean} the member that matches, or undefined/false\n   */\n  isActiveMember(userId) {\n    if (userId) {\n      return this.members.find(\n        member => member.userId === userId && member.isActive,\n      );\n    } else {\n      return false;\n    }\n  },\n\n  isPublic() {\n    return this.permission === 'public';\n  },\n\n  cards() {\n    const ret = ReactiveCache.getCards(\n      { boardId: this._id, archived: false },\n      { sort: { title: 1 } },\n    );\n    return ret;\n  },\n\n  lists() {\n    return this.draggableLists();\n  },\n\n  newestLists() {\n    // sorted lists from newest to the oldest, by its creation date or its cards' last modification date\n    const value = ReactiveCache.getCurrentUser()._getListSortBy();\n    const sortKey = { starred: -1, [value[0]]: value[1] }; // [[\"starred\",-1],value];\n    return ReactiveCache.getLists(\n      {\n        boardId: this._id,\n        archived: false,\n      },\n      { sort: sortKey },\n    );\n  },\n\n  draggableLists() {\n    return ReactiveCache.getLists({ boardId: this._id }, { sort: { sort: 1 } });\n  },\n\n  /** returns the last list\n   * @returns Document the last list\n   */\n  getLastList() {\n    const ret = ReactiveCache.getList({ boardId: this._id }, { sort: { sort: 'desc' } });\n    return ret;\n  },\n\n  nullSortLists() {\n    return ReactiveCache.getLists({\n      boardId: this._id,\n      archived: false,\n      sort: { $eq: null },\n    });\n  },\n\n  swimlanes() {\n    return ReactiveCache.getSwimlanes(\n      { boardId: this._id, archived: false },\n      { sort: { sort: 1 } },\n    );\n  },\n\n  nextSwimlane(swimlane) {\n    return ReactiveCache.getSwimlane(\n      {\n        boardId: this._id,\n        archived: false,\n        sort: { $gte: swimlane.sort },\n        _id: { $ne: swimlane._id },\n      },\n      {\n        sort: { sort: 1 },\n      },\n    );\n  },\n\n  nullSortSwimlanes() {\n    return ReactiveCache.getSwimlanes({\n      boardId: this._id,\n      archived: false,\n      sort: { $eq: null },\n    });\n  },\n\n  hasOvertimeCards() {\n    const card = ReactiveCache.getCard({\n      isOvertime: true,\n      boardId: this._id,\n      archived: false,\n    });\n    return card !== undefined;\n  },\n\n  hasSpentTimeCards() {\n    const card = ReactiveCache.getCard({\n      spentTime: { $gt: 0 },\n      boardId: this._id,\n      archived: false,\n    });\n    return card !== undefined;\n  },\n\n  activities() {\n    let linkedBoardId = [this._id];\n    ReactiveCache.getCards({\n      \"type\": \"cardType-linkedBoard\",\n      \"boardId\": this._id}\n      ).forEach(card => {\n        linkedBoardId.push(card.linkedId);\n    });\n    const ret = ReactiveCache.getActivities({ boardId: { $in: linkedBoardId } }, { sort: { createdAt: -1 } });\n    return ret;\n  },\n\n  activeMembers(){\n    const members = _.where(this.members, { isActive: true });\n    return _.sortBy(members, 'username');\n  },\n\n  activeOrgs() {\n    return _.where(this.orgs, { isActive: true });\n  },\n\n  // hasNotAnyOrg(){\n  //   return this.orgs === undefined || this.orgs.length <= 0;\n  // },\n\n  activeTeams() {\n    return _.where(this.teams, { isActive: true });\n  },\n\n  // hasNotAnyTeam(){\n  //   return this.teams === undefined || this.teams.length <= 0;\n  // },\n\n  activeAdmins() {\n    return _.where(this.members, { isActive: true, isAdmin: true });\n  },\n\n  memberUsers() {\n    return ReactiveCache.getUsers({ _id: { $in: _.pluck(this.members, 'userId') } });\n  },\n\n  getLabel(name, color) {\n    return _.findWhere(this.labels, { name, color });\n  },\n\n  getLabelById(labelId) {\n    return _.findWhere(this.labels, { _id: labelId });\n  },\n\n  labelIndex(labelId) {\n    return _.pluck(this.labels, '_id').indexOf(labelId);\n  },\n\n  memberIndex(memberId) {\n    return _.pluck(this.members, 'userId').indexOf(memberId);\n  },\n\n  hasMember(memberId) {\n    return !!_.findWhere(this.members, { userId: memberId, isActive: true });\n  },\n\n  hasAdmin(memberId) {\n    return !!_.findWhere(this.members, {\n      userId: memberId,\n      isActive: true,\n      isAdmin: true,\n    });\n  },\n\n  hasNoComments(memberId) {\n    return !!_.findWhere(this.members, {\n      userId: memberId,\n      isActive: true,\n      isAdmin: false,\n      isNoComments: true,\n      isWorker: false,\n    });\n  },\n\n  hasCommentOnly(memberId) {\n    return !!_.findWhere(this.members, {\n      userId: memberId,\n      isActive: true,\n      isAdmin: false,\n      isCommentOnly: true,\n      isWorker: false,\n    });\n  },\n\n  hasWorker(memberId) {\n    return !!_.findWhere(this.members, {\n      userId: memberId,\n      isActive: true,\n      isAdmin: false,\n      isCommentOnly: false,\n      isWorker: true,\n    });\n  },\n\n  hasAnyAllowsDate() {\n    const ret = this.allowsReceivedDate || this.allowsStartDate || this.allowsDueDate || this.allowsEndDate;\n    return ret;\n  },\n\n  hasAnyAllowsUser() {\n    const ret = this.allowsCreator || this.allowsMembers || this.allowsAssignee || this.allowsRequestedBy || this.allowsAssignedBy;\n    return ret;\n  },\n\n  absoluteUrl() {\n    return FlowRouter.url('board', { id: this._id, slug: this.slug });\n  },\n  originRelativeUrl() {\n    return FlowRouter.path('board', { id: this._id, slug: this.slug });\n  },\n\n  colorClass() {\n    return `board-color-${this.color}`;\n  },\n\n  customFields() {\n    const ret = ReactiveCache.getCustomFields(\n      { boardIds: { $in: [this._id] } },\n      { sort: { name: 1 } },\n    );\n    return ret;\n  },\n\n  // XXX currently mutations return no value so we have an issue when using addLabel in import\n  // XXX waiting on https://github.com/mquandalle/meteor-collection-mutations/issues/1 to remove...\n  pushLabel(name, color) {\n    const _id = Random.id(6);\n    Boards.direct.update(this._id, { $push: { labels: { _id, name, color } } });\n    return _id;\n  },\n\n  /** sets the new label order\n   * @param newLabelOrderOnlyIds new order array of _id, e.g. Array(4) [ \"FvtD34\", \"PAEgDP\", \"LjRBxH\", \"YJ8sZz\" ]\n   */\n  setNewLabelOrder(newLabelOrderOnlyIds) {\n    if (this.labels.length == newLabelOrderOnlyIds.length) {\n      if (this.labels.every(_label => newLabelOrderOnlyIds.indexOf(_label._id) >= 0)) {\n        const newLabels = _.sortBy(this.labels, _label => newLabelOrderOnlyIds.indexOf(_label._id));\n        if (this.labels.length == newLabels.length) {\n          Boards.direct.update(this._id, {$set: {labels: newLabels}});\n        }\n      }\n    }\n  },\n\n  searchBoards(term) {\n    check(term, Match.OneOf(String, null, undefined));\n\n    const query = { boardId: this._id };\n    query.type = 'cardType-linkedBoard';\n    query.archived = false;\n\n    const projection = { limit: 10, sort: { createdAt: -1 } };\n\n    if (term) {\n      const regex = new RegExp(term, 'i');\n\n      query.$or = [{ title: regex }, { description: regex }];\n    }\n\n    const ret = ReactiveCache.getCards(query, projection);\n    return ret;\n  },\n\n  searchSwimlanes(term) {\n    check(term, Match.OneOf(String, null, undefined));\n\n    const query = { boardId: this._id };\n    if (this.isTemplatesBoard()) {\n      query.type = 'template-swimlane';\n      query.archived = false;\n    } else {\n      query.type = { $nin: ['template-swimlane'] };\n    }\n    const projection = { limit: 10, sort: { createdAt: -1 } };\n\n    if (term) {\n      const regex = new RegExp(term, 'i');\n\n      query.$or = [{ title: regex }, { description: regex }];\n    }\n\n    return ReactiveCache.getSwimlanes(query, projection);\n  },\n\n  searchLists(term) {\n    let ret = null;\n    if (term) {\n      check(term, Match.OneOf(String));\n      term = term.trim();\n    }\n    if (term) {\n      const query = { boardId: this._id };\n      if (this.isTemplatesBoard()) {\n        query.type = 'template-list';\n        query.archived = false;\n      } else {\n        query.type = { $nin: ['template-list'] };\n      }\n      const projection = { sort: { createdAt: -1 } };\n\n      if (term) {\n        const regex = new RegExp(term, 'i');\n\n        query.$or = [{ title: regex }, { description: regex }];\n      }\n\n      ret = ReactiveCache.getLists(query, projection);\n    }\n    return ret;\n  },\n\n  searchCards(term, excludeLinked) {\n    let ret = null;\n    if (term) {\n      check(term, Match.OneOf(String));\n      term = term.trim();\n    }\n    if (term) {\n      const query = { boardId: this._id };\n      if (excludeLinked) {\n        query.linkedId = null;\n      }\n      if (this.isTemplatesBoard()) {\n        query.type = 'template-card';\n        query.archived = false;\n      } else {\n        query.type = { $nin: ['template-card'] };\n      }\n      const projection = { sort: { createdAt: -1 } };\n\n      const regex = new RegExp(term, 'i');\n\n      query.$or = [\n        { title: regex },\n        { description: regex },\n        { customFields: { $elemMatch: { value: regex } } },\n      ];\n      ret = ReactiveCache.getCards(query, projection);\n    }\n    return ret;\n  },\n  // A board alwasy has another board where it deposits subtasks of thasks\n  // that belong to itself.\n  getDefaultSubtasksBoardId() {\n    if (\n      this.subtasksDefaultBoardId === null ||\n      this.subtasksDefaultBoardId === undefined\n    ) {\n      this.subtasksDefaultBoardId = Boards.insert({\n        title: `^${this.title}^`,\n        permission: this.permission,\n        members: this.members,\n        color: this.color,\n        description: TAPi18n.__('default-subtasks-board', {\n          board: this.title,\n        }),\n      });\n\n      Swimlanes.insert({\n        title: TAPi18n.__('default'),\n        boardId: this.subtasksDefaultBoardId,\n      });\n      Boards.update(this._id, {\n        $set: {\n          subtasksDefaultBoardId: this.subtasksDefaultBoardId,\n        },\n      });\n    }\n    return this.subtasksDefaultBoardId;\n  },\n\n  getDefaultSubtasksBoard() {\n    return ReactiveCache.getBoard(this.getDefaultSubtasksBoardId());\n  },\n\n  //Date Settings option such as received date, start date and so on.\n  getDefaultDateSettingsBoardId() {\n    if (\n      this.dateSettingsDefaultBoardId === null ||\n      this.dateSettingsDefaultBoardId === undefined\n    ) {\n      this.dateSettingsDefaultBoardId = Boards.insert({\n        title: `^${this.title}^`,\n        permission: this.permission,\n        members: this.members,\n        color: this.color,\n        description: TAPi18n.__('default-dates-board', {\n          board: this.title,\n        }),\n      });\n\n      Swimlanes.insert({\n        title: TAPi18n.__('default'),\n        boardId: this.dateSettingsDefaultBoardId,\n      });\n      Boards.update(this._id, {\n        $set: {\n          dateSettingsDefaultBoardId: this.dateSettingsDefaultBoardId,\n        },\n      });\n    }\n    return this.dateSettingsDefaultBoardId;\n  },\n\n  getDefaultDateSettingsBoard() {\n    return ReactiveCache.getBoard(this.getDefaultDateSettingsBoardId());\n  },\n\n  getDefaultSubtasksListId() {\n    if (\n      this.subtasksDefaultListId === null ||\n      this.subtasksDefaultListId === undefined\n    ) {\n      this.subtasksDefaultListId = Lists.insert({\n        title: TAPi18n.__('queue'),\n        boardId: this._id,\n      });\n      this.setSubtasksDefaultListId(this.subtasksDefaultListId);\n    }\n    return this.subtasksDefaultListId;\n  },\n\n  getDefaultSubtasksList() {\n    return ReactiveCache.getList(this.getDefaultSubtasksListId());\n  },\n\n  getDefaultDateSettingsListId() {\n    if (\n      this.dateSettingsDefaultListId === null ||\n      this.dateSettingsDefaultListId === undefined\n    ) {\n      this.dateSettingsDefaultListId = Lists.insert({\n        title: TAPi18n.__('queue'),\n        boardId: this._id,\n      });\n      this.setDateSettingsDefaultListId(this.dateSettingsDefaultListId);\n    }\n    return this.dateSettingsDefaultListId;\n  },\n\n  getDefaultDateSettingsList() {\n    return ReactiveCache.getList(this.getDefaultDateSettingsListId());\n  },\n\n  getDefaultSwimline() {\n    let result = ReactiveCache.getSwimlane({ boardId: this._id });\n    if (result === undefined) {\n      Swimlanes.insert({\n        title: TAPi18n.__('default'),\n        boardId: this._id,\n      });\n      result = ReactiveCache.getSwimlane({ boardId: this._id });\n    }\n    return result;\n  },\n\n  getNextCardNumber() {\n    const boardCards = ReactiveCache.getCard(\n      {\n        boardId: this._id\n      },\n      {\n        sort: { cardNumber: -1 },\n        limit: 1\n      }\n    , true);\n\n    // If no card is assigned to the board, return 1\n    if (!boardCards) {\n      return 1;\n    }\n\n    const maxCardNr = !!boardCards.cardNumber ? boardCards.cardNumber : 0;\n    return maxCardNr + 1;\n  },\n\n  cardsDueInBetween(start, end) {\n    const ret = ReactiveCache.getCards({\n      boardId: this._id,\n      dueAt: { $gte: start, $lte: end },\n    });\n    return ret;\n  },\n\n  cardsInInterval(start, end) {\n    const ret = ReactiveCache.getCards({\n      boardId: this._id,\n      $or: [\n        {\n          startAt: {\n            $lte: start,\n          },\n          endAt: {\n            $gte: start,\n          },\n        },\n        {\n          startAt: {\n            $lte: end,\n          },\n          endAt: {\n            $gte: end,\n          },\n        },\n        {\n          startAt: {\n            $gte: start,\n          },\n          endAt: {\n            $lte: end,\n          },\n        },\n      ],\n    });\n    return ret;\n  },\n\n  isTemplateBoard() {\n    return this.type === 'template-board';\n  },\n\n  isTemplatesBoard() {\n    return this.type === 'template-container';\n  },\n});\n\nBoards.mutations({\n  archive() {\n    return { $set: { archived: true, archivedAt: new Date() } };\n  },\n\n  restore() {\n    return { $set: { archived: false } };\n  },\n\n  rename(title) {\n    return { $set: { title } };\n  },\n\n  setDescription(description) {\n    return { $set: { description } };\n  },\n\n  setColor(color) {\n    return { $set: { color } };\n  },\n\n  setBackgroundImageURL(backgroundImageURL) {\n    const currentUser = ReactiveCache.getCurrentUser();\n    if(currentUser.isBoardAdmin()) {\n      return { $set: { backgroundImageURL } };\n    } else if (currentUser.isAdmin()) {\n      return { $set: { backgroundImageURL } };\n    } else {\n      return false;\n    }\n  },\n\n  setVisibility(visibility) {\n    return { $set: { permission: visibility } };\n  },\n\n  addLabel(name, color) {\n    // If label with the same name and color already exists we don't want to\n    // create another one because they would be indistinguishable in the UI\n    // (they would still have different `_id` but that is not exposed to the\n    // user).\n    if (!this.getLabel(name, color)) {\n      const _id = Random.id(6);\n      return { $push: { labels: { _id, name, color } } };\n    }\n    return {};\n  },\n\n  editLabel(labelId, name, color) {\n    if (!this.getLabel(name, color)) {\n      const labelIndex = this.labelIndex(labelId);\n      return {\n        $set: {\n          [`labels.${labelIndex}.name`]: name,\n          [`labels.${labelIndex}.color`]: color,\n        },\n      };\n    }\n    return {};\n  },\n\n  removeLabel(labelId) {\n    return { $pull: { labels: { _id: labelId } } };\n  },\n\n  changeOwnership(fromId, toId) {\n    const memberIndex = this.memberIndex(fromId);\n    return {\n      $set: {\n        [`members.${memberIndex}.userId`]: toId,\n      },\n    };\n  },\n\n  addMember(memberId) {\n    const memberIndex = this.memberIndex(memberId);\n    if (memberIndex >= 0) {\n      return {\n        $set: {\n          [`members.${memberIndex}.isActive`]: true,\n        },\n      };\n    }\n\n    return {\n      $push: {\n        members: {\n          userId: memberId,\n          isAdmin: false,\n          isActive: true,\n          isNoComments: false,\n          isCommentOnly: false,\n          isWorker: false,\n        },\n      },\n    };\n  },\n\n  removeMember(memberId) {\n    const memberIndex = this.memberIndex(memberId);\n\n    // we do not allow the only one admin to be removed\n    const allowRemove =\n      !this.members[memberIndex].isAdmin || this.activeAdmins().length > 1;\n    if (!allowRemove) {\n      return {\n        $set: {\n          [`members.${memberIndex}.isActive`]: true,\n        },\n      };\n    }\n\n    return {\n      $set: {\n        [`members.${memberIndex}.isActive`]: false,\n        [`members.${memberIndex}.isAdmin`]: false,\n      },\n    };\n  },\n\n  setMemberPermission(\n    memberId,\n    isAdmin,\n    isNoComments,\n    isCommentOnly,\n    isWorker,\n    currentUserId = Meteor.userId(),\n  ) {\n    const memberIndex = this.memberIndex(memberId);\n    // do not allow change permission of self\n    if (memberId === currentUserId) {\n      isAdmin = this.members[memberIndex].isAdmin;\n    }\n\n    return {\n      $set: {\n        [`members.${memberIndex}.isAdmin`]: isAdmin,\n        [`members.${memberIndex}.isNoComments`]: isNoComments,\n        [`members.${memberIndex}.isCommentOnly`]: isCommentOnly,\n        [`members.${memberIndex}.isWorker`]: isWorker,\n      },\n    };\n  },\n\n  setAllowsSubtasks(allowsSubtasks) {\n    return { $set: { allowsSubtasks } };\n  },\n\n  setAllowsCreator(allowsCreator) {\n    return { $set: { allowsCreator } };\n  },\n\n  setAllowsCreatorOnMinicard(allowsCreatorOnMinicard) {\n    return { $set: { allowsCreatorOnMinicard } };\n  },\n\n  setAllowsMembers(allowsMembers) {\n    return { $set: { allowsMembers } };\n  },\n\n  setAllowsChecklists(allowsChecklists) {\n    return { $set: { allowsChecklists } };\n  },\n\n  setAllowsAssignee(allowsAssignee) {\n    return { $set: { allowsAssignee } };\n  },\n\n  setAllowsAssignedBy(allowsAssignedBy) {\n    return { $set: { allowsAssignedBy } };\n  },\n\n  setAllowsRequestedBy(allowsRequestedBy) {\n    return { $set: { allowsRequestedBy } };\n  },\n\n  setAllowsCardSortingByNumber(allowsCardSortingByNumber) {\n    return { $set: { allowsCardSortingByNumber } };\n  },\n\n  setAllowsShowLists(allowsShowLists) {\n    return { $set: { allowsShowLists } };\n  },\n\n  setAllowsAttachments(allowsAttachments) {\n    return { $set: { allowsAttachments } };\n  },\n\n  setAllowsLabels(allowsLabels) {\n    return { $set: { allowsLabels } };\n  },\n\n  setAllowsComments(allowsComments) {\n    return { $set: { allowsComments } };\n  },\n\n  setAllowsDescriptionTitle(allowsDescriptionTitle) {\n    return { $set: { allowsDescriptionTitle } };\n  },\n\n  setAllowsCardNumber(allowsCardNumber) {\n    return { $set: { allowsCardNumber } };\n  },\n\n  setAllowsDescriptionText(allowsDescriptionText) {\n    return { $set: { allowsDescriptionText } };\n  },\n\n  setallowsDescriptionTextOnMinicard(allowsDescriptionTextOnMinicard) {\n    return { $set: { allowsDescriptionTextOnMinicard } };\n  },\n\n  setallowsCoverAttachmentOnMinicard(allowsCoverAttachmentOnMinicard) {\n    return { $set: { allowsCoverAttachmentOnMinicard } };\n  },\n\n  setallowsBadgeAttachmentOnMinicard(allowsBadgeAttachmentOnMinicard) {\n    return { $set: { allowsBadgeAttachmentOnMinicard } };\n  },\n\n  setallowsCardSortingByNumberOnMinicard(allowsCardSortingByNumberOnMinicard) {\n    return { $set: { allowsCardSortingByNumberOnMinicard } };\n  },\n\n  setAllowsActivities(allowsActivities) {\n    return { $set: { allowsActivities } };\n  },\n\n  setAllowsReceivedDate(allowsReceivedDate) {\n    return { $set: { allowsReceivedDate } };\n  },\n\n  setAllowsCardCounterList(allowsCardCounterList) {\n    return { $set: { allowsCardCounterList } };\n  },\n\n  setAllowsBoardMemberList(allowsBoardMemberList) {\n    return { $set: { allowsBoardMemberList } };\n  },\n\n  setAllowsStartDate(allowsStartDate) {\n    return { $set: { allowsStartDate } };\n  },\n\n  setAllowsEndDate(allowsEndDate) {\n    return { $set: { allowsEndDate } };\n  },\n\n  setAllowsDueDate(allowsDueDate) {\n    return { $set: { allowsDueDate } };\n  },\n\n  setSubtasksDefaultBoardId(subtasksDefaultBoardId) {\n    return { $set: { subtasksDefaultBoardId } };\n  },\n\n  setSubtasksDefaultListId(subtasksDefaultListId) {\n    return { $set: { subtasksDefaultListId } };\n  },\n\n  setPresentParentTask(presentParentTask) {\n    return { $set: { presentParentTask } };\n  },\n\n  move(sortIndex) {\n    return { $set: { sort: sortIndex } };\n  },\n\n  toggleShowActivities() {\n    return { $set: { showActivities: !this.showActivities } };\n  },\n});\n\nfunction boardRemover(userId, doc) {\n  [Cards, Lists, Swimlanes, Integrations, Rules, Activities].forEach(\n    element => {\n      element.remove({ boardId: doc._id });\n    },\n  );\n}\n\nBoards.uniqueTitle = title => {\n  const m = title.match(\n    new RegExp('^(?<title>.*?)\\\\s*(\\\\[(?<num>\\\\d+)]\\\\s*$|\\\\s*$)'),\n  );\n  const base = escapeForRegex(m.groups.title);\n  const baseTitle = m.groups.title;\n  boards = ReactiveCache.getBoards({ title: new RegExp(`^${base}\\\\s*(\\\\[(?<num>\\\\d+)]\\\\s*$|\\\\s*$)`) });\n  if (boards.length > 0) {\n    let num = 0;\n    ReactiveCache.getBoards({ title: new RegExp(`^${base}\\\\s*\\\\[\\\\d+]\\\\s*$`) }).forEach(\n      board => {\n        const m = board.title.match(\n          new RegExp('^(?<title>.*?)\\\\s*\\\\[(?<num>\\\\d+)]\\\\s*$'),\n        );\n        if (m) {\n          const n = parseInt(m.groups.num, 10);\n          num = num < n ? n : num;\n        }\n      },\n    );\n    return `${baseTitle} [${num + 1}]`;\n  }\n  return title;\n};\n\nBoards.userSearch = (\n  userId,\n  selector = {},\n  projection = {},\n  // includeArchived = false,\n) => {\n  // if (!includeArchived) {\n  //   selector.archived = false;\n  // }\n  selector.$or = [{ permission: 'public' }];\n\n  if (userId) {\n    selector.$or.push({ members: { $elemMatch: { userId, isActive: true } } });\n  }\n  const ret = ReactiveCache.getBoards(selector, projection);\n  return ret;\n};\n\nBoards.userBoards = (\n  userId,\n  archived = false,\n  selector = {},\n  projection = {},\n) => {\n  const user = ReactiveCache.getUser(userId);\n  if (!user) {\n    return [];\n  }\n\n  if (typeof archived === 'boolean') {\n    selector.archived = archived;\n  }\n  if (!selector.type) {\n    selector.type = 'board';\n  }\n\n  selector.$or = [\n    { permission: 'public' },\n    { members: { $elemMatch: { userId, isActive: true } } },\n    { orgs: { $elemMatch: { orgId: { $in: user.orgIds() }, isActive: true } } },\n    { teams: { $elemMatch: { teamId: { $in: user.teamIds() }, isActive: true } } },\n  ];\n\n  return ReactiveCache.getBoards(selector, projection);\n};\n\nBoards.userBoardIds = (userId, archived = false, selector = {}) => {\n  return Boards.userBoards(userId, archived, selector, {\n    fields: { _id: 1 },\n  }).map(board => {\n    return board._id;\n  });\n};\n\nBoards.colorMap = () => {\n  const colors = {};\n  for (const color of Boards.labelColors()) {\n    colors[TAPi18n.__(`color-${color}`)] = color;\n  }\n  return colors;\n};\n\nBoards.labelColors = () => {\n  return ALLOWED_COLORS;\n};\n\nif (Meteor.isServer) {\n  Boards.allow({\n    insert: Meteor.userId,\n    update: allowIsBoardAdmin,\n    remove: allowIsBoardAdmin,\n    fetch: ['members'],\n  });\n\n  // All logged in users are allowed to reorder boards by dragging at All Boards page and Public Boards page.\n  Boards.allow({\n    update(userId, board, fieldNames) {\n      return _.contains(fieldNames, 'sort');\n    },\n    fetch: [],\n  });\n\n  // The number of users that have starred this board is managed by trusted code\n  // and the user is not allowed to update it\n  Boards.deny({\n    update(userId, board, fieldNames) {\n      return _.contains(fieldNames, 'stars');\n    },\n    fetch: [],\n  });\n\n  // We can't remove a member if it is the last administrator\n  Boards.deny({\n    update(userId, doc, fieldNames, modifier) {\n      if (!_.contains(fieldNames, 'members')) return false;\n\n      // We only care in case of a $pull operation, ie remove a member\n      if (!_.isObject(modifier.$pull && modifier.$pull.members)) return false;\n\n      // If there is more than one admin, it's ok to remove anyone\n      const nbAdmins = _.where(doc.members, { isActive: true, isAdmin: true })\n        .length;\n      if (nbAdmins > 1) return false;\n\n      // If all the previous conditions were verified, we can't remove\n      // a user if it's an admin\n      const removedMemberId = modifier.$pull.members.userId;\n      return Boolean(\n        _.findWhere(doc.members, {\n          userId: removedMemberId,\n          isAdmin: true,\n        }),\n      );\n    },\n    fetch: ['members'],\n  });\n\n  Meteor.methods({\n    getBackgroundImageURL(boardId) {\n      check(boardId, String);\n      return ReactiveCache.getBoard(boardId, {}, { backgroundImageUrl: 1 });\n    },\n    quitBoard(boardId) {\n      check(boardId, String);\n      const board = ReactiveCache.getBoard(boardId);\n      if (board) {\n        const userId = Meteor.userId();\n        const index = board.memberIndex(userId);\n        if (index >= 0) {\n          board.removeMember(userId);\n          return true;\n        } else throw new Meteor.Error('error-board-notAMember');\n      } else throw new Meteor.Error('error-board-doesNotExist');\n    },\n    acceptInvite(boardId) {\n      check(boardId, String);\n      const board = ReactiveCache.getBoard(boardId);\n      if (!board) {\n        throw new Meteor.Error('error-board-doesNotExist');\n      }\n\n      Meteor.users.update(Meteor.userId(), {\n        $pull: {\n          'profile.invitedBoards': boardId,\n        },\n      });\n    },\n    myLabelNames() {\n      let names = [];\n      Boards.userBoards(Meteor.userId()).forEach(board => {\n        // Only return labels when they exist.\n        if (board.labels !== undefined) {\n          names = names.concat(\n            board.labels\n              .filter(label => !!label.name)\n              .map(label => {\n                return label.name;\n              }),\n          );\n        } else {\n          return [];\n        }\n      });\n      return _.uniq(names).sort();\n    },\n    myBoardNames() {\n      return _.uniq(\n        Boards.userBoards(Meteor.userId()).map(board => {\n          return board.title;\n        }),\n      ).sort();\n    },\n    setAllBoardsHideActivities() {\n      if ((ReactiveCache.getCurrentUser() || {}).isAdmin) {\n        Boards.update(\n          {\n            showActivities: true\n          },\n          {\n            $set: {\n              showActivities: false,\n            },\n          },\n          {\n            multi: true,\n          },\n        );\n        return true;\n      } else {\n        return false;\n      }\n    },\n  });\n\n  Meteor.methods({\n    archiveBoard(boardId) {\n      check(boardId, String);\n      const board = ReactiveCache.getBoard(boardId);\n      if (board) {\n        const userId = Meteor.userId();\n        const index = board.memberIndex(userId);\n        if (index >= 0) {\n          board.archive();\n          return true;\n        } else throw new Meteor.Error('error-board-notAMember');\n      } else throw new Meteor.Error('error-board-doesNotExist');\n    },\n    setBoardOrgs(boardOrgsArray, currBoardId){\n      check(boardOrgsArray, Array);\n      check(currBoardId, String);\n      Boards.update(currBoardId, {\n        $set: {\n          orgs: boardOrgsArray,\n        },\n      });\n    },\n    setBoardTeams(boardTeamsArray, membersArray, currBoardId){\n      check(boardTeamsArray, Array);\n      check(membersArray, Array);\n      check(currBoardId, String);\n      Boards.update(currBoardId, {\n        $set: {\n          members: membersArray,\n          teams: boardTeamsArray,\n        },\n      });\n    },\n  });\n}\n\n// Insert new board at last position in sort order.\nBoards.before.insert((userId, doc) => {\n  const lastBoard = ReactiveCache.getBoard(\n    { sort: { $exists: true } },\n    { sort: { sort: -1 } },\n  );\n  if (lastBoard && typeof lastBoard.sort !== 'undefined') {\n    doc.sort = lastBoard.sort + 1;\n  }\n});\n\nif (Meteor.isServer) {\n  // Let MongoDB ensure that a member is not included twice in the same board\n  Meteor.startup(() => {\n    Boards._collection.createIndex({ modifiedAt: -1 });\n    Boards._collection.createIndex(\n      {\n        _id: 1,\n        'members.userId': 1,\n      },\n      { unique: true },\n    );\n    Boards._collection.createIndex({ 'members.userId': 1 });\n  });\n\n  // Genesis: the first activity of the newly created board\n  Boards.after.insert((userId, doc) => {\n    Activities.insert({\n      userId,\n      type: 'board',\n      activityTypeId: doc._id,\n      activityType: 'createBoard',\n      boardId: doc._id,\n    });\n  });\n\n  // If the user remove one label from a board, we cant to remove reference of\n  // this label in any card of this board.\n  Boards.after.update((userId, doc, fieldNames, modifier) => {\n    if (\n      !_.contains(fieldNames, 'labels') ||\n      !modifier.$pull ||\n      !modifier.$pull.labels ||\n      !modifier.$pull.labels._id\n    ) {\n      return;\n    }\n\n    const removedLabelId = modifier.$pull.labels._id;\n    Cards.update(\n      { boardId: doc._id },\n      {\n        $pull: {\n          labelIds: removedLabelId,\n        },\n      },\n      { multi: true },\n    );\n  });\n\n  const foreachRemovedMember = (doc, modifier, callback) => {\n    Object.keys(modifier).forEach(set => {\n      if (modifier[set] !== false) {\n        return;\n      }\n\n      const parts = set.split('.');\n      if (\n        parts.length === 3 &&\n        parts[0] === 'members' &&\n        parts[2] === 'isActive'\n      ) {\n        callback(doc.members[parts[1]].userId);\n      }\n    });\n  };\n\n  // Remove a member from all objects of the board before leaving the board\n  Boards.before.update((userId, doc, fieldNames, modifier) => {\n    if (!_.contains(fieldNames, 'members')) {\n      return;\n    }\n    if (modifier.$set) {\n      const boardId = doc._id;\n      foreachRemovedMember(doc, modifier.$set, memberId => {\n        Cards.update(\n          { boardId },\n          {\n            $pull: {\n              members: memberId,\n              watchers: memberId,\n            },\n          },\n          { multi: true },\n        );\n\n        Lists.update(\n          { boardId },\n          {\n            $pull: {\n              watchers: memberId,\n            },\n          },\n          { multi: true },\n        );\n\n        const board = Boards._transform(doc);\n        board.setWatcher(memberId, false);\n\n        // Remove board from users starred list\n        if (!board.isPublic()) {\n          Users.update(memberId, {\n            $pull: {\n              'profile.starredBoards': boardId,\n            },\n          });\n        }\n      });\n    }\n  });\n\n  Boards.before.remove((userId, doc) => {\n    boardRemover(userId, doc);\n    // Add removeBoard activity to keep it\n    Activities.insert({\n      userId,\n      type: 'board',\n      activityTypeId: doc._id,\n      activityType: 'removeBoard',\n      boardId: doc._id,\n    });\n  });\n\n  // Add a new activity if we add or remove a member to the board\n  Boards.after.update((userId, doc, fieldNames, modifier) => {\n    if (fieldNames.includes('title')) {\n      Activities.insert({\n        userId,\n        type: 'board',\n        activityType: 'changedBoardTitle',\n        boardId: doc._id,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    }\n    if (!_.contains(fieldNames, 'members')) {\n      return;\n    }\n    // Say hello to the new member\n    if (modifier.$push && modifier.$push.members) {\n      const memberId = modifier.$push.members.userId;\n      Activities.insert({\n        userId,\n        memberId,\n        type: 'member',\n        activityType: 'addBoardMember',\n        boardId: doc._id,\n      });\n    }\n\n    // Say goodbye to the former member\n    if (modifier.$set) {\n      foreachRemovedMember(doc, modifier.$set, memberId => {\n        Activities.insert({\n          userId,\n          memberId,\n          type: 'member',\n          activityType: 'removeBoardMember',\n          boardId: doc._id,\n        });\n      });\n    }\n  });\n}\n\n//BOARDS REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_boards_from_user\n   * @summary Get all boards attached to a user\n   *\n   * @param {string} userId the ID of the user to retrieve the data\n   * @return_type [{_id: string,\n   *                title: string}]\n   */\n  JsonRoutes.add('GET', '/api/users/:userId/boards', function(req, res) {\n    try {\n      Authentication.checkLoggedIn(req.userId);\n      const paramUserId = req.params.userId;\n      // A normal user should be able to see their own boards,\n      // admins can access boards of any user\n      Authentication.checkAdminOrCondition(\n        req.userId,\n        req.userId === paramUserId,\n      );\n\n      const data = ReactiveCache.getBoards(\n        {\n          archived: false,\n          'members.userId': paramUserId,\n        },\n        {\n          sort: { sort: 1 /* boards default sorting */ },\n        },\n      ).map(function(board) {\n        return {\n          _id: board._id,\n          title: board.title,\n        };\n      });\n\n      JsonRoutes.sendResult(res, { code: 200, data });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_public_boards\n   * @summary Get all public boards\n   *\n   * @return_type [{_id: string,\n                    title: string}]\n                    */\n  JsonRoutes.add('GET', '/api/boards', function(req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getBoards(\n          { permission: 'public' },\n          {\n            sort: { sort: 1 /* boards default sorting */ },\n          },\n        ).map(function(doc) {\n          return {\n            _id: doc._id,\n            title: doc.title,\n          };\n        }),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_boards_count\n   * @summary Get public and private boards count\n   *\n   * @return_type {private: integer, public: integer}\n   */\n  JsonRoutes.add('GET', '/api/boards_count', function(req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          private: ReactiveCache.getBoards({ permission: 'private' }).length,\n          public: ReactiveCache.getBoards({ permission: 'public' }).length,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_board\n   * @summary Get the board with that particular ID\n   *\n   * @param {string} boardId the ID of the board to retrieve the data\n   * @return_type Boards\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getBoard(paramBoardId),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation new_board\n   * @summary Create a board\n   *\n   * @description This allows to create a board.\n   *\n   * The color has to be chosen between `belize`, `nephritis`, `pomegranate`,\n   * `pumpkin`, `wisteria`, `moderatepink`, `strongcyan`,\n   * `limegreen`, `midnight`, `dark`, `relax`, `corteza`:\n   *\n   * <img src=\"https://wekan.github.io/board-colors.png\" width=\"40%\" alt=\"Wekan logo\" />\n   *\n   * @param {string} title the new title of the board\n   * @param {string} owner \"ABCDE12345\" <= User ID in Wekan.\n   *                 (Not username or email)\n   * @param {boolean} [isAdmin] is the owner an admin of the board (default true)\n   * @param {boolean} [isActive] is the board active (default true)\n   * @param {boolean} [isNoComments] disable comments (default false)\n   * @param {boolean} [isCommentOnly] only enable comments (default false)\n   * @param {boolean} [isWorker] only move cards, assign himself to card and comment (default false)\n   * @param {string} [permission] \"private\" board <== Set to \"public\" if you\n   *                 want public Wekan board\n   * @param {string} [color] the color of the board\n   *\n   * @return_type {_id: string,\n                   defaultSwimlaneId: string}\n                   */\n  JsonRoutes.add('POST', '/api/boards', function(req, res) {\n    try {\n      Authentication.checkLoggedIn(req.userId);\n      const id = Boards.insert({\n        title: req.body.title,\n        members: [\n          {\n            userId: req.body.owner,\n            isAdmin: req.body.isAdmin || true,\n            isActive: req.body.isActive || true,\n            isNoComments: req.body.isNoComments || false,\n            isCommentOnly: req.body.isCommentOnly || false,\n            isWorker: req.body.isWorker || false,\n          },\n        ],\n        permission: req.body.permission || 'private',\n        color: req.body.color || 'belize',\n      });\n      const swimlaneId = Swimlanes.insert({\n        title: TAPi18n.__('default'),\n        boardId: id,\n      });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n          defaultSwimlaneId: swimlaneId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_board\n   * @summary Delete a board\n   *\n   * @param {string} boardId the ID of the board\n   */\n  JsonRoutes.add('DELETE', '/api/boards/:boardId', function(req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const id = req.params.boardId;\n      Boards.remove({ _id: id });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n  * @operation update_board_title\n  * @summary Update the title of a board\n  *\n  * @param {string} boardId the ID of the board to update\n  * @param {string} title the new title for the board\n  */\n  JsonRoutes.add('PUT', '/api/boards/:boardId/title', function(req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const boardId = req.params.boardId;\n      const title = req.body.title;\n\n      Boards.direct.update({ _id: boardId }, { $set: { title } });\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: boardId,\n          title,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation add_board_label\n   * @summary Add a label to a board\n   *\n   * @description If the board doesn't have the name/color label, this function\n   * adds the label to the board.\n   *\n   * @param {string} boardId the board\n   * @param {string} color the color of the new label\n   * @param {string} name the name of the new label\n   *\n   * @return_type string\n   */\n  JsonRoutes.add('PUT', '/api/boards/:boardId/labels', function(req, res) {\n    const id = req.params.boardId;\n    Authentication.checkBoardAccess(req.userId, id);\n    try {\n      if (req.body.hasOwnProperty('label')) {\n        const board = ReactiveCache.getBoard(id);\n        const color = req.body.label.color;\n        const name = req.body.label.name;\n        const labelId = Random.id(6);\n        if (!board.getLabel(name, color)) {\n          Boards.direct.update(\n            { _id: id },\n            { $push: { labels: { _id: labelId, name, color } } },\n          );\n          JsonRoutes.sendResult(res, {\n            code: 200,\n            data: labelId,\n          });\n        } else {\n          JsonRoutes.sendResult(res, {\n            code: 200,\n          });\n        }\n      }\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation copy_board\n   * @summary Copy a board to a new one\n   *\n   * @description If your are board admin or wekan admin, this copies the\n   * given board to a new one.\n   *\n   * @param {string} boardId the board\n   * @param {string} title the title of the new board (default to old one)\n   *\n   * @return_type string\n   */\nJsonRoutes.add('POST', '/api/boards/:boardId/copy', function(req, res) {\n  const id = req.params.boardId;\n  const board = ReactiveCache.getBoard(id);\n  const adminAccess = board.members.some(e => e.userId === req.userId && e.isAdmin);\n  Authentication.checkAdminOrCondition(req.userId, adminAccess);\n  try {\n    board['title'] = req.body.title || Boards.uniqueTitle(board.title);\n    ret = board.copy();\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: ret,\n    });\n  } catch (error) {\n    JsonRoutes.sendResult(res, {\n      data: error,\n    });\n  }\n});\n\n  /**\n   * @operation set_board_member_permission\n   * @tag Users\n   * @summary Change the permission of a member of a board\n   *\n   * @param {string} boardId the ID of the board that we are changing\n   * @param {string} memberId the ID of the user to change permissions\n   * @param {boolean} isAdmin admin capability\n   * @param {boolean} isNoComments NoComments capability\n   * @param {boolean} isCommentOnly CommentsOnly capability\n   * @param {boolean} isWorker Worker capability\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/members/:memberId', function(\n    req,\n    res,\n  ) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const boardId = req.params.boardId;\n      const memberId = req.params.memberId;\n      const { isAdmin, isNoComments, isCommentOnly, isWorker } = req.body;\n      const board = ReactiveCache.getBoard(boardId);\n      function isTrue(data) {\n        try {\n          return data.toLowerCase() === 'true';\n        } catch (error) {\n          return data;\n        }\n      }\n      const query = board.setMemberPermission(\n        memberId,\n        isTrue(isAdmin),\n        isTrue(isNoComments),\n        isTrue(isCommentOnly),\n        isTrue(isWorker),\n        req.userId,\n      );\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: query,\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  //ATTACHMENTS REST API\n  /**\n   * @operation get_board_attachments\n   * @summary Get the list of attachments of a board\n   *\n   * @param {string} boardId the board ID\n   * @return_type [{attachmentId: string,\n   *                attachmentName: string,\n   *                attachmentType: string,\n   *                url: string,\n   *                urlDownload: string,\n   *                boardId: string,\n   *                swimlaneId: string,\n   *                listId: string,\n   *                cardId: string\n   * }]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/attachments', function(req, res) {\n    const paramBoardId = req.params.boardId;\n    Authentication.checkBoardAccess(req.userId, paramBoardId);\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: ReactiveCache\n        .getAttachments({'meta.boardId': paramBoardId }, {}, true)\n        .each()\n        .map(function(attachment) {\n          return {\n            attachmentId: attachment._id,\n            attachmentName: attachment.name,\n            attachmentType: attachment.type,\n            url: attachment.link(),\n            urlDownload: `${attachment.link()}?download=true&token=`,\n            boardId: attachment.meta.boardId,\n            swimlaneId: attachment.meta.swimlaneId,\n            listId: attachment.meta.listId,\n            cardId: attachment.meta.cardId\n          };\n        }),\n    });\n  });\n}\n\nexport default Boards;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nconst commentReactionSchema = new SimpleSchema({\n  reactionCodepoint: {\n    type: String,\n    optional: false,\n    max: 9, // max length of reaction code\n    custom() {\n      if (!this.value.match(/^&#\\d{4,6};$/)) { // regex for only valid reactions\n        return \"incorrectReactionCode\";\n      }\n    },\n  },\n  userIds: { type: [String], defaultValue: [] }\n});\n\nCardCommentReactions = new Mongo.Collection('card_comment_reactions');\n\n/**\n * All reactions of a card comment\n */\nCardCommentReactions.attachSchema(\n  new SimpleSchema({\n    boardId: {\n      /**\n       * the board ID\n       */\n      type: String,\n      optional: false\n    },\n    cardId: {\n      /**\n       * the card ID\n       */\n      type: String,\n      optional: false\n    },\n    cardCommentId: {\n      /**\n       * the card comment ID\n       */\n      type: String,\n      optional: false\n    },\n    reactions: {\n      type: [commentReactionSchema],\n      defaultValue: []\n    }\n  }),\n);\n\nCardCommentReactions.allow({\n  insert(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  fetch: ['boardId'],\n});\n\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    CardCommentReactions._collection.createIndex({ cardCommentId: 1 }, { unique: true });\n  });\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport escapeForRegex from 'escape-string-regexp';\nimport DOMPurify from 'dompurify';\n\nCardComments = new Mongo.Collection('card_comments');\n\n/**\n * A comment on a card\n */\nCardComments.attachSchema(\n  new SimpleSchema({\n    boardId: {\n      /**\n       * the board ID\n       */\n      type: String,\n    },\n    cardId: {\n      /**\n       * the card ID\n       */\n      type: String,\n    },\n    // XXX Rename in `content`? `text` is a bit vague...\n    text: {\n      /**\n       * the text of the comment\n       */\n      type: String,\n    },\n    createdAt: {\n      /**\n       * when was the comment created\n       */\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    // XXX Should probably be called `authorId`\n    userId: {\n      /**\n       * the author ID of the comment\n       */\n      type: String,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return this.userId;\n        }\n      },\n    },\n  }),\n);\n\nCardComments.allow({\n  insert(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return userId === doc.userId || allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return userId === doc.userId || allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  fetch: ['userId', 'boardId'],\n});\n\nCardComments.helpers({\n  copy(newCardId) {\n    this.cardId = newCardId;\n    delete this._id;\n    CardComments.insert(this);\n  },\n\n  user() {\n    return ReactiveCache.getUser(this.userId);\n  },\n\n  reactions() {\n    const cardCommentReactions = ReactiveCache.getCardCommentReaction({cardCommentId: this._id});\n    return !!cardCommentReactions ? cardCommentReactions.reactions : [];\n  },\n\n  toggleReaction(reactionCodepoint) {\n    if (reactionCodepoint !== DOMPurify.sanitize(reactionCodepoint)) {\n      return false;\n    } else {\n\n      const cardCommentReactions = ReactiveCache.getCardCommentReaction({cardCommentId: this._id});\n      const reactions = !!cardCommentReactions ? cardCommentReactions.reactions : [];\n      const userId = Meteor.userId();\n      const reaction = reactions.find(r => r.reactionCodepoint === reactionCodepoint);\n\n      // If no reaction is set for the codepoint, add this\n      if (!reaction) {\n        reactions.push({ reactionCodepoint, userIds: [userId] });\n      } else {\n\n        // toggle user reaction upon previous reaction state\n        const userHasReacted = reaction.userIds.includes(userId);\n        if (userHasReacted) {\n          reaction.userIds.splice(reaction.userIds.indexOf(userId), 1);\n          if (reaction.userIds.length === 0) {\n            reactions.splice(reactions.indexOf(reaction), 1);\n          }\n        } else {\n          reaction.userIds.push(userId);\n        }\n      }\n\n      // If no reaction doc exists yet create otherwise update reaction set\n      if (!!cardCommentReactions) {\n        return CardCommentReactions.update({ _id: cardCommentReactions._id }, { $set: { reactions } });\n      } else {\n        return CardCommentReactions.insert({\n          boardId: this.boardId,\n          cardCommentId: this._id,\n          cardId: this.cardId,\n          reactions\n        });\n      }\n    }\n  }\n});\n\nCardComments.hookOptions.after.update = { fetchPrevious: false };\n\nfunction commentCreation(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  Activities.insert({\n    userId,\n    activityType: 'addComment',\n    boardId: doc.boardId,\n    cardId: doc.cardId,\n    commentId: doc._id,\n    listId: card.listId,\n    swimlaneId: card.swimlaneId,\n  });\n}\n\nCardComments.textSearch = (userId, textArray) => {\n  const selector = {\n    boardId: { $in: Boards.userBoardIds(userId) },\n    $and: [],\n  };\n\n  for (const text of textArray) {\n    selector.$and.push({ text: new RegExp(escapeForRegex(text), 'i') });\n  }\n\n  // eslint-disable-next-line no-console\n  // console.log('cardComments selector:', selector);\n\n  const comments = ReactiveCache.getCardComments(selector);\n  // eslint-disable-next-line no-console\n  // console.log('count:', comments.count());\n  // eslint-disable-next-line no-console\n  // console.log('cards with comments:', comments.map(com => { return com.cardId }));\n\n  return comments;\n};\n\nif (Meteor.isServer) {\n  // Comments are often fetched within a card, so we create an index to make these\n  // queries more efficient.\n  Meteor.startup(() => {\n    CardComments._collection.createIndex({ modifiedAt: -1 });\n    CardComments._collection.createIndex({ cardId: 1, createdAt: -1 });\n  });\n\n  CardComments.after.insert((userId, doc) => {\n    commentCreation(userId, doc);\n  });\n\n  CardComments.after.update((userId, doc) => {\n    const card = ReactiveCache.getCard(doc.cardId);\n    Activities.insert({\n      userId,\n      activityType: 'editComment',\n      boardId: doc.boardId,\n      cardId: doc.cardId,\n      commentId: doc._id,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    });\n  });\n\n  CardComments.before.remove((userId, doc) => {\n    const card = ReactiveCache.getCard(doc.cardId);\n    Activities.insert({\n      userId,\n      activityType: 'deleteComment',\n      boardId: doc.boardId,\n      cardId: doc.cardId,\n      commentId: doc._id,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    });\n    const activity = ReactiveCache.getActivity({ commentId: doc._id });\n    if (activity) {\n      Activities.remove(activity._id);\n    }\n  });\n}\n\n//CARD COMMENT REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_comments\n   * @summary Get all comments attached to a card\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} cardId the ID of the card\n   * @return_type [{_id: string,\n   *                comment: string,\n   *                authorId: string}]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/cards/:cardId/comments', function (\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getCardComments({\n          boardId: paramBoardId,\n          cardId: paramCardId,\n        }).map(function (doc) {\n          return {\n            _id: doc._id,\n            comment: doc.text,\n            authorId: doc.userId,\n          };\n        }),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_comment\n   * @summary Get a comment on a card\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} cardId the ID of the card\n   * @param {string} commentId the ID of the comment to retrieve\n   * @return_type CardComments\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/cards/:cardId/comments/:commentId',\n    function (req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramCommentId = req.params.commentId;\n        const paramCardId = req.params.cardId;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: ReactiveCache.getCardComment({\n            _id: paramCommentId,\n            cardId: paramCardId,\n            boardId: paramBoardId,\n          }),\n        });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation new_comment\n   * @summary Add a comment on a card\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} cardId the ID of the card\n   * @param {string} authorId the user who 'posted' the comment\n   * @param {string} text the content of the comment\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/cards/:cardId/comments',\n    function (req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramCardId = req.params.cardId;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n        const id = CardComments.direct.insert({\n          userId: req.body.authorId,\n          text: req.body.comment,\n          cardId: paramCardId,\n          boardId: paramBoardId,\n        });\n\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: {\n            _id: id,\n          },\n        });\n\n        const cardComment = ReactiveCache.getCardComment({\n          _id: id,\n          cardId: paramCardId,\n          boardId: paramBoardId,\n        });\n        commentCreation(req.body.authorId, cardComment);\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation delete_comment\n   * @summary Delete a comment on a card\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} cardId the ID of the card\n   * @param {string} commentId the ID of the comment to delete\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/cards/:cardId/comments/:commentId',\n    function (req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramCommentId = req.params.commentId;\n        const paramCardId = req.params.cardId;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n        CardComments.remove({\n          _id: paramCommentId,\n          cardId: paramCardId,\n          boardId: paramBoardId,\n        });\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: {\n            _id: paramCardId,\n          },\n        });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n}\n\nexport default CardComments;\n","import { ReactiveCache, ReactiveMiniMongoIndex } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\nimport {\n  ALLOWED_COLORS,\n  TYPE_CARD,\n  TYPE_LINKED_BOARD,\n  TYPE_LINKED_CARD,\n} from '../config/const';\nimport Attachments, { fileStoreStrategyFactory } from \"./attachments\";\nimport { copyFile } from './lib/fileStoreStrategy.js';\n\nCards = new Mongo.Collection('cards');\n\n// XXX To improve pub/sub performances a card document should include a\n// de-normalized number of comments so we don't have to publish the whole list\n// of comments just to display the number of them in the board view.\nCards.attachSchema(\n  new SimpleSchema({\n    title: {\n      /**\n       * the title of the card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    archived: {\n      /**\n       * is the card archived\n       */\n      type: Boolean,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        // eslint-disable-line consistent-return\n        if (this.isInsert && !this.isSet) {\n          return false;\n        }\n      },\n    },\n    archivedAt: {\n      /**\n       * latest archiving date\n       */\n      type: Date,\n      optional: true,\n    },\n    parentId: {\n      /**\n       * ID of the parent card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    listId: {\n      /**\n       * List ID where the card is\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    swimlaneId: {\n      /**\n       * Swimlane ID where the card is\n       */\n      type: String,\n    },\n    // The system could work without this `boardId` information (we could deduce\n    // the board identifier from the card), but it would make the system more\n    // difficult to manage and less efficient.\n    boardId: {\n      /**\n       * Board ID of the card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    coverId: {\n      /**\n       * Cover ID of the card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    color: {\n      type: String,\n      optional: true,\n      allowedValues: ALLOWED_COLORS,\n    },\n    createdAt: {\n      /**\n       * creation date\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    customFields: {\n      /**\n       * list of custom fields\n       */\n      type: [Object],\n      optional: true,\n      defaultValue: [],\n    },\n    'customFields.$': {\n      type: new SimpleSchema({\n        _id: {\n          /**\n           * the ID of the related custom field\n           */\n          type: String,\n          optional: true,\n          defaultValue: '',\n        },\n        value: {\n          /**\n           * value attached to the custom field\n           */\n          type: Match.OneOf(String, Number, Boolean, Date, [String]),\n          optional: true,\n          defaultValue: '',\n        },\n        'value.$': {\n          type: String,\n          optional: true,\n        },\n      }),\n    },\n    dateLastActivity: {\n      /**\n       * Date of last activity\n       */\n      type: Date,\n      autoValue() {\n        return new Date();\n      },\n    },\n    description: {\n      /**\n       * description of the card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    requestedBy: {\n      /**\n       * who requested the card (ID of the user)\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    assignedBy: {\n      /**\n       * who assigned the card (ID of the user)\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    labelIds: {\n      /**\n       * list of labels ID the card has\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    members: {\n      /**\n       * list of members (user IDs)\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    assignees: {\n      /**\n       * who is assignee of the card (user ID),\n       * maximum one ID of assignee in array.\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    receivedAt: {\n      /**\n       * Date the card was received\n       */\n      type: Date,\n      optional: true,\n    },\n    startAt: {\n      /**\n       * Date the card was started to be worked on\n       */\n      type: Date,\n      optional: true,\n    },\n    dueAt: {\n      /**\n       * Date the card is due\n       */\n      type: Date,\n      optional: true,\n    },\n    endAt: {\n      /**\n       * Date the card ended\n       */\n      type: Date,\n      optional: true,\n    },\n    spentTime: {\n      /**\n       * How much time has been spent on this\n       */\n      type: Number,\n      decimal: true,\n      optional: true,\n      defaultValue: 0,\n    },\n    isOvertime: {\n      /**\n       * is the card over time?\n       */\n      type: Boolean,\n      defaultValue: false,\n      optional: true,\n    },\n    // XXX Should probably be called `authorId`. Is it even needed since we have\n    // the `members` field?\n    userId: {\n      /**\n       * user ID of the author of the card\n       */\n      type: String,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        // eslint-disable-line consistent-return\n        if (this.isInsert && !this.isSet) {\n          return this.userId;\n        }\n      },\n    },\n    sort: {\n      /**\n       * Sort value\n       */\n      type: Number,\n      decimal: true,\n      defaultValue: 0,\n      optional: true,\n    },\n    subtaskSort: {\n      /**\n       * subtask sort value\n       */\n      type: Number,\n      decimal: true,\n      defaultValue: -1,\n      optional: true,\n    },\n    type: {\n      /**\n       * type of the card\n       */\n      type: String,\n      defaultValue: TYPE_CARD,\n      // allowedValues: [TYPE_CARD, TYPE_LINKED_CARD, TYPE_LINKED_BOARD, TYPE_TEMPLATE_CARD],\n    },\n    linkedId: {\n      /**\n       * ID of the linked card\n       */\n      type: String,\n      optional: true,\n      defaultValue: '',\n    },\n    vote: {\n      /**\n       * vote object, see below\n       */\n      type: Object,\n      optional: true,\n    },\n    'vote.question': {\n      type: String,\n      defaultValue: '',\n    },\n    'vote.positive': {\n      /**\n       * list of members (user IDs)\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    'vote.negative': {\n      /**\n       * list of members (user IDs)\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    'vote.end': {\n      type: Date,\n      optional: true,\n      defaultValue: null,\n    },\n    'vote.public': {\n      type: Boolean,\n      defaultValue: false,\n    },\n    'vote.allowNonBoardMembers': {\n      type: Boolean,\n      defaultValue: false,\n    },\n    poker: {\n      /**\n       * poker object, see below\n       */\n      type: Object,\n      optional: true,\n    },\n    'poker.question': {\n      type: Boolean,\n      optional: true,\n    },\n    'poker.one': {\n      /**\n       * poker card one\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.two': {\n      /**\n       * poker card two\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.three': {\n      /**\n       * poker card three\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.five': {\n      /**\n       * poker card five\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.eight': {\n      /**\n       * poker card eight\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.thirteen': {\n      /**\n       * poker card thirteen\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.twenty': {\n      /**\n       * poker card twenty\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.forty': {\n      /**\n       * poker card forty\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.oneHundred': {\n      /**\n       * poker card oneHundred\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.unsure': {\n      /**\n       * poker card unsure\n       */\n      type: [String],\n      optional: true,\n    },\n    'poker.end': {\n      type: Date,\n      optional: true,\n    },\n    'poker.allowNonBoardMembers': {\n      type: Boolean,\n      optional: true,\n    },\n    'poker.estimation': {\n      /**\n       * poker estimation value\n       */\n      type: Number,\n      optional: true,\n    },\n    targetId_gantt: {\n      /**\n       * ID of card which is the child link in gantt view\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    linkType_gantt: {\n      /**\n       * ID of card which is the parent link in gantt view\n       */\n      type: [Number],\n      decimal: false,\n      optional: true,\n      defaultValue: [],\n    },\n    linkId_gantt: {\n      /**\n       * ID of card which is the parent link in gantt view\n       */\n      type: [String],\n      optional: true,\n      defaultValue: [],\n    },\n    cardNumber: {\n      /**\n       * A boardwise sequentially increasing number that is assigned\n       * to every newly created card\n       */\n      type: Number,\n      decimal: true,\n      optional: true,\n      defaultValue: 0,\n    },\n    showActivities: {\n      type: Boolean,\n      defaultValue: false,\n    },\n    hideFinishedChecklistIfItemsAreHidden: {\n      /**\n       * hide completed checklist?\n       */\n      type: Boolean,\n      optional: true,\n    },\n  }),\n);\n\nCards.allow({\n  insert(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n\n  update(userId, doc, fields) {\n    // Allow board members or logged in users if only vote get's changed\n    return (\n      allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId)) ||\n      (_.isEqual(fields, ['vote', 'modifiedAt', 'dateLastActivity']) &&\n        !!userId)\n    );\n  },\n  remove(userId, doc) {\n    return allowIsBoardMember(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  fetch: ['boardId'],\n});\n\nCards.helpers({\n  // Gantt https://github.com/wekan/wekan/issues/2870#issuecomment-857171127\n  setGanttTargetId(sourceId, targetId, linkType, linkId){\n    return Cards.update({ _id: sourceId}, {\n      $push: {\n        targetId_gantt: targetId,\n        linkType_gantt : linkType,\n        linkId_gantt: linkId\n      }\n    });\n  },\n\n  removeGanttTargetId(sourceId, targetId, linkType, linkId){\n    return Cards.update({ _id: sourceId}, {\n      $pull: {\n        targetId_gantt: targetId,\n        linkType_gantt : linkType,\n        linkId_gantt: linkId\n      }\n    });\n  },\n\n  mapCustomFieldsToBoard(boardId) {\n    // Map custom fields to new board\n    return this.customFields.map(cf => {\n        const oldCf = ReactiveCache.getCustomField(cf._id);\n\n        // Check if oldCf is undefined or null\n        if (!oldCf) {\n            //console.error(`Custom field with ID ${cf._id} not found.`);\n            return cf;  // Skip this field if oldCf is not found\n        }\n\n        const newCf = ReactiveCache.getCustomField({\n            boardIds: boardId,\n            name: oldCf.name,\n            type: oldCf.type,\n        });\n\n        if (newCf) {\n            cf._id = newCf._id;\n        } else if (!_.contains(oldCf.boardIds, boardId)) {\n            oldCf.addBoard(boardId);\n        }\n\n        return cf;\n    });\n},\n\n\n  copy(boardId, swimlaneId, listId) {\n    const oldId = this._id;\n    const oldCard = ReactiveCache.getCard(oldId);\n\n    // we must only copy the labels and custom fields if the target board\n    // differs from the source board\n    if (this.boardId !== boardId) {\n      const oldBoard = ReactiveCache.getBoard(this.boardId);\n      const oldBoardLabels = oldBoard.labels;\n\n      // Get old label names\n      const oldCardLabels = _.pluck(\n        _.filter(oldBoardLabels, label => {\n          return _.contains(this.labelIds, label._id);\n        }),\n        'name',\n      );\n\n      const newBoard = ReactiveCache.getBoard(boardId);\n      const newBoardLabels = newBoard.labels;\n      const newCardLabels = _.pluck(\n        _.filter(newBoardLabels, label => {\n          return _.contains(oldCardLabels, label.name);\n        }),\n        '_id',\n      );\n      // now set the new label ids\n      delete this.labelIds;\n      this.labelIds = newCardLabels;\n\n      this.customFields = this.mapCustomFieldsToBoard(newBoard._id);\n    }\n\n    delete this._id;\n    this.boardId = boardId;\n    this.cardNumber = ReactiveCache.getBoard(boardId).getNextCardNumber();\n    this.swimlaneId = swimlaneId;\n    this.listId = listId;\n    const _id = Cards.insert(this);\n\n    // Copy attachments\n    oldCard.attachments()\n      .forEach(att => {\n        copyFile(att, _id, fileStoreStrategyFactory);\n      });\n\n    // copy checklists\n    ReactiveCache.getChecklists({ cardId: oldId }).forEach(ch => {\n      ch.copy(_id);\n    });\n\n    // copy subtasks\n    ReactiveCache.getCards({ parentId: oldId }).forEach(subtask => {\n      subtask.parentId = _id;\n      subtask._id = null;\n      Cards.insert(subtask);\n    });\n\n    // copy card comments\n    ReactiveCache.getCardComments({ cardId: oldId }).forEach(cmt => {\n      cmt.copy(_id);\n    });\n    // restore the id, otherwise new copies will fail\n    this._id = oldId;\n\n    return _id;\n  },\n\n  link(boardId, swimlaneId, listId) {\n    // TODO is there a better method to create a deepcopy?\n    linkCard = JSON.parse(JSON.stringify(this));\n    // TODO is this how it is meant to be?\n    linkCard.linkedId = linkCard.linkedId || linkCard._id;\n    linkCard.boardId = boardId;\n    linkCard.swimlaneId = swimlaneId;\n    linkCard.listId = listId;\n    linkCard.type = 'cardType-linkedCard';\n    delete linkCard._id;\n    // TODO shall we copy the labels for a linked card?!\n    delete linkCard.labelIds;\n    return Cards.insert(linkCard);\n  },\n\n  list() {\n    return ReactiveCache.getList(this.listId);\n  },\n\n  swimlane() {\n    return ReactiveCache.getSwimlane(this.swimlaneId);\n  },\n\n  board() {\n    const ret = ReactiveCache.getBoard(this.boardId);\n    return ret;\n  },\n\n  getRealId() {\n    if (!this.__id) {\n      if (this.isLinkedCard()) {\n        this.__id = this.linkedId;\n      } else {\n        this.__id = this._id;\n      }\n    }\n    return this.__id;\n  },\n\n  getList() {\n    const list = this.list();\n    if (!list) {\n      return {\n        _id: this.listId,\n        title: 'Undefined List',\n        archived: false,\n        colorClass: '',\n      };\n    }\n    return list;\n  },\n\n  getSwimlane() {\n    const swimlane = this.swimlane();\n    if (!swimlane) {\n      return {\n        _id: this.swimlaneId,\n        title: 'Undefined Swimlane',\n        archived: false,\n        colorClass: '',\n      };\n    }\n    return swimlane;\n  },\n\n  getBoard() {\n    const board = this.board();\n    if (!board) {\n      return {\n        _id: this.boardId,\n        title: 'Undefined Board',\n        archived: false,\n        colorClass: '',\n      };\n    }\n    return board;\n  },\n\n  labels() {\n    const boardLabels = this.board().labels;\n    const cardLabels = _.filter(boardLabels, label => {\n      return _.contains(this.labelIds, label._id);\n    });\n    return cardLabels;\n  },\n\n  hasLabel(labelId) {\n    return _.contains(this.labelIds, labelId);\n  },\n\n  /** returns the sort number of a list\n   * @param listId a list id\n   * @param swimlaneId a swimlane id\n   * top sorting of the card at the top if true, or from the bottom if false\n   */\n  getSort(listId, swimlaneId, top) {\n    if (!_.isBoolean(top)) {\n      top = true;\n    }\n    if (!listId) {\n      listId = this.listId;\n    }\n    if (!swimlaneId) {\n      swimlaneId = this.swimlaneId;\n    }\n    const selector = {\n      listId: listId,\n      swimlaneId: swimlaneId,\n      archived: false,\n    };\n    const sorting = top ? 1 : -1;\n    const card = ReactiveCache.getCard(selector, { sort: { sort: sorting } }, true);\n    let ret = null\n    if (card) {\n      ret = card.sort;\n    }\n    return ret;\n  },\n\n  /** returns the sort number of a list from the card at the top\n   * @param listId a list id\n   * @param swimlaneId a swimlane id\n   */\n  getMinSort(listId, swimlaneId) {\n    const ret = this.getSort(listId, swimlaneId, true);\n    return ret;\n  },\n\n  /** returns the sort number of a list from the card at the bottom\n   * @param listId a list id\n   * @param swimlaneId a swimlane id\n   */\n  getMaxSort(listId, swimlaneId) {\n    const ret = this.getSort(listId, swimlaneId, false);\n    return ret;\n  },\n\n  user() {\n    return ReactiveCache.getUser(this.userId);\n  },\n\n  isAssigned(memberId) {\n    return _.contains(this.getMembers(), memberId);\n  },\n\n  isAssignee(assigneeId) {\n    return _.contains(this.getAssignees(), assigneeId);\n  },\n\n  activities() {\n    let ret;\n    if (this.isLinkedBoard()) {\n      ret = ReactiveCache.getActivities(\n        { boardId: this.linkedId },\n        { sort: { createdAt: -1 } },\n      );\n    } else {\n      ret = ReactiveCache.getActivities({ cardId: this.getRealId() }, { sort: { createdAt: -1 } });\n    }\n    return ret;\n  },\n\n  comments() {\n    let ret\n    if (this.isLinkedBoard()) {\n      ret = ReactiveCache.getCardComments(\n        { boardId: this.linkedId },\n        { sort: { createdAt: -1 } },\n      );\n    } else {\n      ret = ReactiveMiniMongoIndex.getCardCommentsWithCardId(\n        this.getRealId(),\n        {},\n        { sort: { createdAt: -1 } },\n      );\n    }\n    return ret;\n  },\n\n  attachments() {\n    const ret = ReactiveCache.getAttachments(\n      { 'meta.cardId': this.getRealId() },\n      { sort: { uploadedAt: -1 } },\n      true,\n    ).each();\n    return ret;\n  },\n\n  cover() {\n    if (!this.coverId) return false;\n    const cover = ReactiveCache.getAttachment(this.coverId);\n    // if we return a cover before it is fully stored, we will get errors when we try to display it\n    // todo XXX we could return a default \"upload pending\" image in the meantime?\n    return cover && cover.link() && cover;\n  },\n\n  checklists() {\n    const ret = ReactiveMiniMongoIndex.getChecklistsWithCardId(this.getRealId(), {}, { sort: { sort: 1 } });\n    return ret;\n  },\n\n  firstChecklist() {\n    const checklists = this.checklists();\n    const ret = _.first(checklists);\n    return ret;\n  },\n\n  lastChecklist() {\n    const checklists = this.checklists();\n    const ret = _.last(checklists);\n    return ret;\n  },\n\n  checklistItemCount() {\n    const checklists = this.checklists();\n    const ret = checklists\n      .map(checklist => {\n        return checklist.itemCount();\n      })\n      .reduce((prev, next) => {\n        return prev + next;\n      }, 0);\n    return ret;\n  },\n\n  checklistFinishedCount() {\n    const checklists = this.checklists();\n    const ret = checklists\n      .map(checklist => {\n        return checklist.finishedCount();\n      })\n      .reduce((prev, next) => {\n        return prev + next;\n      }, 0);\n    return ret;\n  },\n\n  checklistFinished() {\n    return (\n      this.hasChecklist() &&\n      this.checklistItemCount() === this.checklistFinishedCount()\n    );\n  },\n\n  hasChecklist() {\n    return this.checklistItemCount() !== 0;\n  },\n\n  subtasks() {\n    const ret = ReactiveMiniMongoIndex.getSubTasksWithParentId(this._id, {\n        archived: false,\n      }, {\n        sort: {\n          sort: 1,\n        },\n      },\n    );\n    return ret;\n  },\n\n  subtasksFinished() {\n    const ret = ReactiveMiniMongoIndex.getSubTasksWithParentId(this._id, {\n      archived: true,\n    });\n    return ret;\n  },\n\n  allSubtasks() {\n    const ret = ReactiveMiniMongoIndex.getSubTasksWithParentId(this._id);\n    return ret;\n  },\n\n  subtasksCount() {\n    const subtasks = this.subtasks();\n    return subtasks.length;\n  },\n\n  subtasksFinishedCount() {\n    const subtasksArchived = this.subtasksFinished();\n    return subtasksArchived.length;\n  },\n\n  allSubtasksCount() {\n    const allSubtasks = this.allSubtasks();\n    return allSubtasks.length;\n  },\n\n  allowsSubtasks() {\n    return this.subtasksCount() !== 0;\n  },\n\n  customFieldIndex(customFieldId) {\n    return _.pluck(this.customFields, '_id').indexOf(customFieldId);\n  },\n\n  // customFields with definitions\n  customFieldsWD() {\n    // get all definitions\n    const definitions = ReactiveCache.getCustomFields({\n      boardIds: { $in: [this.boardId] },\n    });\n    if (!definitions) {\n      return {};\n    }\n    // match right definition to each field\n    if (!this.customFields) return [];\n    const ret = this.customFields.map(customField => {\n      const definition = definitions.find(definition => {\n        return definition._id === customField._id;\n      });\n      if (!definition) {\n        return {};\n      }\n      //search for \"True Value\" which is for DropDowns other then the Value (which is the id)\n      let trueValue = customField.value;\n      if (\n        definition.settings.dropdownItems &&\n        definition.settings.dropdownItems.length > 0\n      ) {\n        for (let i = 0; i < definition.settings.dropdownItems.length; i++) {\n          if (definition.settings.dropdownItems[i]._id === customField.value) {\n            trueValue = definition.settings.dropdownItems[i].name;\n          }\n        }\n      }\n      return {\n        _id: customField._id,\n        value: customField.value,\n        trueValue,\n        definition,\n      };\n    });\n    // at linked cards custom fields definition is not found\n    ret.sort(\n      (a, b) =>\n        a.definition !== undefined &&\n        b.definition !== undefined &&\n        a.definition.name !== undefined &&\n        b.definition.name !== undefined &&\n        a.definition.name.localeCompare(b.definition.name),\n    );\n    return ret;\n  },\n\n  colorClass() {\n    if (this.color) return this.color;\n    return '';\n  },\n\n  absoluteUrl() {\n    const board = this.board();\n    return FlowRouter.url('card', {\n      boardId: board._id,\n      slug: board.slug,\n      cardId: this._id,\n    });\n  },\n  originRelativeUrl() {\n    const board = this.board();\n    return FlowRouter.path('card', {\n      boardId: board._id,\n      slug: board.slug,\n      cardId: this._id,\n    });\n  },\n\n  canBeRestored() {\n    const list = ReactiveCache.getList(this.listId);\n    if (\n      !list.getWipLimit('soft') &&\n      list.getWipLimit('enabled') &&\n      list.getWipLimit('value') === list.cards().length\n    ) {\n      return false;\n    }\n    return true;\n  },\n\n  parentCard() {\n    let ret = null;\n    if (this.parentId) {\n      ret = ReactiveCache.getCard(this.parentId);\n    }\n    return ret;\n  },\n\n  parentCardName() {\n    let result = '';\n    if (this.parentId) {\n      const card = ReactiveCache.getCard(this.parentId);\n      if (card) {\n        result = card.title;\n      }\n    }\n    return result;\n  },\n\n  parentListId() {\n    const result = [];\n    let crtParentId = this.parentId;\n    while (crtParentId) {\n      const crt = ReactiveCache.getCard(crtParentId);\n      if (crt === null || crt === undefined) {\n        // maybe it has been deleted\n        break;\n      }\n      if (crtParentId in result) {\n        // circular reference\n        break;\n      }\n      result.unshift(crtParentId);\n      crtParentId = crt.parentId;\n    }\n    return result;\n  },\n\n  parentList() {\n    const resultId = [];\n    const result = [];\n    let crtParentId = this.parentId;\n    while (crtParentId) {\n      const crt = ReactiveCache.getCard(crtParentId);\n      if (crt === null || crt === undefined) {\n        // maybe it has been deleted\n        break;\n      }\n      if (crtParentId in resultId) {\n        // circular reference\n        break;\n      }\n      resultId.unshift(crtParentId);\n      result.unshift(crt);\n      crtParentId = crt.parentId;\n    }\n    return result;\n  },\n\n  parentString(sep) {\n    return this.parentList()\n      .map(function(elem) {\n        return elem.title;\n      })\n      .join(sep);\n  },\n\n  isTopLevel() {\n    let ret = false;\n    if (this.parentId) {\n      ret = true;\n    }\n    return ret;\n  },\n\n  isLinkedCard() {\n    return this.type === 'cardType-linkedCard';\n  },\n\n  isLinkedBoard() {\n    return this.type === 'cardType-linkedBoard';\n  },\n\n  isLinked() {\n    return this.isLinkedCard() || this.isLinkedBoard();\n  },\n\n  setDescription(description) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { description } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { description } });\n    }\n  },\n\n  getDescription() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card && card.description) return card.description;\n      else return null;\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board && board.description) return board.description;\n      else return null;\n    } else if (this.description) {\n      return this.description;\n    } else {\n      return null;\n    }\n  },\n\n  getMembers() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.members;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.activeMembers().map(member => {\n          return member.userId;\n        });\n      }\n    } else {\n      return this.members;\n    }\n  },\n\n  getAssignees() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.assignees;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.activeMembers().map(assignee => {\n          return assignee.userId;\n        });\n      }\n    } else {\n      return this.assignees;\n    }\n  },\n\n  assignMember(memberId) {\n    let ret;\n    if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      ret = board.addMember(memberId);\n    } else {\n      ret = Cards.update(\n        { _id: this.getRealId() },\n        { $addToSet: { members: memberId } },\n      );\n    }\n    return ret;\n  },\n\n  assignAssignee(assigneeId) {\n    if (this.isLinkedCard()) {\n      return Cards.update(\n        { _id: this.linkedId },\n        { $addToSet: { assignees: assigneeId } },\n      );\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      return board.addAssignee(assigneeId);\n    } else {\n      return Cards.update(\n        { _id: this._id },\n        { $addToSet: { assignees: assigneeId } },\n      );\n    }\n  },\n\n  unassignMember(memberId) {\n    if (this.isLinkedCard()) {\n      return Cards.update(\n        { _id: this.linkedId },\n        { $pull: { members: memberId } },\n      );\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      return board.removeMember(memberId);\n    } else {\n      return Cards.update({ _id: this._id }, { $pull: { members: memberId } });\n    }\n  },\n\n  unassignAssignee(assigneeId) {\n    if (this.isLinkedCard()) {\n      return Cards.update(\n        { _id: this.linkedId },\n        { $pull: { assignees: assigneeId } },\n      );\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      return board.removeAssignee(assigneeId);\n    } else {\n      return Cards.update(\n        { _id: this._id },\n        { $pull: { assignees: assigneeId } },\n      );\n    }\n  },\n\n  toggleMember(memberId) {\n    if (this.getMembers() && this.getMembers().indexOf(memberId) > -1) {\n      return this.unassignMember(memberId);\n    } else {\n      return this.assignMember(memberId);\n    }\n  },\n\n  toggleAssignee(assigneeId) {\n    if (this.getAssignees() && this.getAssignees().indexOf(assigneeId) > -1) {\n      return this.unassignAssignee(assigneeId);\n    } else {\n      return this.assignAssignee(assigneeId);\n    }\n  },\n\n  getReceived() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.receivedAt;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.receivedAt;\n      }\n    } else {\n      return this.receivedAt;\n    }\n  },\n\n  setReceived(receivedAt) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { receivedAt } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { receivedAt } });\n    }\n  },\n\n  getStart() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.startAt;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.startAt;\n      }\n    } else {\n      return this.startAt;\n    }\n  },\n\n  setStart(startAt) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { startAt } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { startAt } });\n    }\n  },\n\n  getDue() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.dueAt;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.dueAt;\n      }\n    } else {\n      return this.dueAt;\n    }\n  },\n\n  setDue(dueAt) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { dueAt } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { dueAt } });\n    }\n  },\n\n  getEnd() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.endAt;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.endAt;\n      }\n    } else {\n      return this.endAt;\n    }\n  },\n\n  setEnd(endAt) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { endAt } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { endAt } });\n    }\n  },\n\n  getIsOvertime() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.isOvertime;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.isOvertime;\n      }\n    } else {\n      return this.isOvertime;\n    }\n  },\n\n  setIsOvertime(isOvertime) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { isOvertime } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { isOvertime } });\n    }\n  },\n\n  getSpentTime() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.spentTime;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.spentTime;\n      }\n    } else {\n      return this.spentTime;\n    }\n  },\n\n  setSpentTime(spentTime) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { spentTime } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { spentTime } });\n    }\n  },\n\n  getVoteQuestion() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else if (card && card.vote) {\n        return card.vote.question;\n      } else {\n        return null;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else if (board && board.vote) {\n        return board.vote.question;\n      } else {\n        return null;\n      }\n    } else if (this.vote) {\n      return this.vote.question;\n    } else {\n      return null;\n    }\n  },\n\n  getVotePublic() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else if (card && card.vote) {\n        return card.vote.public;\n      } else {\n        return null;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else if (board && board.vote) {\n        return board.vote.public;\n      } else {\n        return null;\n      }\n    } else if (this.vote) {\n      return this.vote.public;\n    } else {\n      return null;\n    }\n  },\n\n  getVoteEnd() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else if (card && card.vote) {\n        return card.vote.end;\n      } else {\n        return null;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else if (board && board.vote) {\n        return board.vote.end;\n      } else {\n        return null;\n      }\n    } else if (this.vote) {\n      return this.vote.end;\n    } else {\n      return null;\n    }\n  },\n  expiredVote() {\n    let end = this.getVoteEnd();\n    if (end) {\n      end = moment(end);\n      return end.isBefore(new Date());\n    }\n    return false;\n  },\n  voteMemberPositive() {\n    if (this.vote && this.vote.positive)\n      return ReactiveCache.getUsers({ _id: { $in: this.vote.positive } });\n    return [];\n  },\n\n  voteMemberNegative() {\n    if (this.vote && this.vote.negative)\n      return ReactiveCache.getUsers({ _id: { $in: this.vote.negative } });\n    return [];\n  },\n  voteState() {\n    const userId = Meteor.userId();\n    let state;\n    if (this.vote) {\n      if (this.vote.positive) {\n        state = _.contains(this.vote.positive, userId);\n        if (state === true) return true;\n      }\n      if (this.vote.negative) {\n        state = _.contains(this.vote.negative, userId);\n        if (state === true) return false;\n      }\n    }\n    return null;\n  },\n\n  getPokerQuestion() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else if (card && card.poker) {\n        return card.poker.question;\n      } else {\n        return null;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else if (board && board.poker) {\n        return board.poker.question;\n      } else {\n        return null;\n      }\n    } else if (this.poker) {\n      return this.poker.question;\n    } else {\n      return null;\n    }\n  },\n\n  getPokerEstimation() {\n    if (this.poker) {\n      return this.poker.estimation;\n    } else {\n      return null;\n    }\n  },\n\n  getPokerEnd() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else if (card && card.poker) {\n        return card.poker.end;\n      } else {\n        return null;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else if (board && board.poker) {\n        return board.poker.end;\n      } else {\n        return null;\n      }\n    } else if (this.poker) {\n      return this.poker.end;\n    } else {\n      return null;\n    }\n  },\n  expiredPoker() {\n    let end = this.getPokerEnd();\n    if (end) {\n      end = moment(end);\n      return end.isBefore(new Date());\n    }\n    return false;\n  },\n  pokerMemberOne() {\n    if (this.poker && this.poker.one)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.one } });\n    return [];\n  },\n  pokerMemberTwo() {\n    if (this.poker && this.poker.two)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.two } });\n    return [];\n  },\n  pokerMemberThree() {\n    if (this.poker && this.poker.three)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.three } });\n    return [];\n  },\n  pokerMemberFive() {\n    if (this.poker && this.poker.five)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.five } });\n    return [];\n  },\n  pokerMemberEight() {\n    if (this.poker && this.poker.eight)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.eight } });\n    return [];\n  },\n  pokerMemberThirteen() {\n    if (this.poker && this.poker.thirteen)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.thirteen } });\n    return [];\n  },\n  pokerMemberTwenty() {\n    if (this.poker && this.poker.twenty)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.twenty } });\n    return [];\n  },\n  pokerMemberForty() {\n    if (this.poker && this.poker.forty)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.forty } });\n    return [];\n  },\n  pokerMemberOneHundred() {\n    if (this.poker && this.poker.oneHundred)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.oneHundred } });\n    return [];\n  },\n  pokerMemberUnsure() {\n    if (this.poker && this.poker.unsure)\n      return ReactiveCache.getUsers({ _id: { $in: this.poker.unsure } });\n    return [];\n  },\n  pokerState() {\n    const userId = Meteor.userId();\n    let state;\n    if (this.poker) {\n      if (this.poker.one) {\n        state = _.contains(this.poker.one, userId);\n        if (state === true) {\n          return 'one';\n        }\n      }\n      if (this.poker.two) {\n        state = _.contains(this.poker.two, userId);\n        if (state === true) {\n          return 'two';\n        }\n      }\n      if (this.poker.three) {\n        state = _.contains(this.poker.three, userId);\n        if (state === true) {\n          return 'three';\n        }\n      }\n      if (this.poker.five) {\n        state = _.contains(this.poker.five, userId);\n        if (state === true) {\n          return 'five';\n        }\n      }\n      if (this.poker.eight) {\n        state = _.contains(this.poker.eight, userId);\n        if (state === true) {\n          return 'eight';\n        }\n      }\n      if (this.poker.thirteen) {\n        state = _.contains(this.poker.thirteen, userId);\n        if (state === true) {\n          return 'thirteen';\n        }\n      }\n      if (this.poker.twenty) {\n        state = _.contains(this.poker.twenty, userId);\n        if (state === true) {\n          return 'twenty';\n        }\n      }\n      if (this.poker.forty) {\n        state = _.contains(this.poker.forty, userId);\n        if (state === true) {\n          return 'forty';\n        }\n      }\n      if (this.poker.oneHundred) {\n        state = _.contains(this.poker.oneHundred, userId);\n        if (state === true) {\n          return 'oneHundred';\n        }\n      }\n      if (this.poker.unsure) {\n        state = _.contains(this.poker.unsure, userId);\n        if (state === true) {\n          return 'unsure';\n        }\n      }\n    }\n    return null;\n  },\n\n  getTitle() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.title;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.title;\n      }\n    } else if (this.title === undefined) {\n      return null;\n    } else {\n      return this.title;\n    }\n  },\n\n  getCardNumber() {\n    return this.cardNumber;\n  },\n\n  getBoardTitle() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      }\n      const board = ReactiveCache.getBoard(card.boardId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.title;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.title;\n      }\n    } else {\n      const board = ReactiveCache.getBoard(this.boardId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.title;\n      }\n    }\n  },\n\n  setTitle(title) {\n    if (this.isLinkedBoard()) {\n      return Boards.update({ _id: this.linkedId }, { $set: { title } });\n    } else {\n      return Cards.update({ _id: this.getRealId() }, { $set: { title } });\n    }\n  },\n\n  getArchived() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.archived;\n      }\n    } else if (this.isLinkedBoard()) {\n      const board = ReactiveCache.getBoard(this.linkedId);\n      if (board === undefined) {\n        return null;\n      } else {\n        return board.archived;\n      }\n    } else {\n      return this.archived;\n    }\n  },\n\n  setRequestedBy(requestedBy) {\n    return Cards.update({ _id: this.getRealId() }, { $set: { requestedBy } });\n  },\n\n  getRequestedBy() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.requestedBy;\n      }\n    } else {\n      return this.requestedBy;\n    }\n  },\n\n  setAssignedBy(assignedBy) {\n    return Cards.update({ _id: this.getRealId() }, { $set: { assignedBy } });\n  },\n\n  getAssignedBy() {\n    if (this.isLinkedCard()) {\n      const card = ReactiveCache.getCard(this.linkedId);\n      if (card === undefined) {\n        return null;\n      } else {\n        return card.assignedBy;\n      }\n    } else {\n      return this.assignedBy;\n    }\n  },\n\n  isTemplateCard() {\n    return this.type === 'template-card';\n  },\n\n  votePublic() {\n    if (this.vote) return this.vote.public;\n    return null;\n  },\n  voteAllowNonBoardMembers() {\n    if (this.vote) return this.vote.allowNonBoardMembers;\n    return null;\n  },\n  voteCountNegative() {\n    if (this.vote && this.vote.negative) return this.vote.negative.length;\n    return null;\n  },\n  voteCountPositive() {\n    if (this.vote && this.vote.positive) return this.vote.positive.length;\n    return null;\n  },\n  voteCount() {\n    return this.voteCountPositive() + this.voteCountNegative();\n  },\n\n  pokerAllowNonBoardMembers() {\n    if (this.poker) return this.poker.allowNonBoardMembers;\n    return null;\n  },\n  pokerCountOne() {\n    if (this.poker && this.poker.one) return this.poker.one.length;\n    return null;\n  },\n  pokerCountTwo() {\n    if (this.poker && this.poker.two) return this.poker.two.length;\n    return null;\n  },\n  pokerCountThree() {\n    if (this.poker && this.poker.three) return this.poker.three.length;\n    return null;\n  },\n  pokerCountFive() {\n    if (this.poker && this.poker.five) return this.poker.five.length;\n    return null;\n  },\n  pokerCountEight() {\n    if (this.poker && this.poker.eight) return this.poker.eight.length;\n    return null;\n  },\n  pokerCountThirteen() {\n    if (this.poker && this.poker.thirteen) return this.poker.thirteen.length;\n    return null;\n  },\n  pokerCountTwenty() {\n    if (this.poker && this.poker.twenty) return this.poker.twenty.length;\n    return null;\n  },\n  pokerCountForty() {\n    if (this.poker && this.poker.forty) return this.poker.forty.length;\n    return null;\n  },\n  pokerCountOneHundred() {\n    if (this.poker && this.poker.oneHundred) return this.poker.oneHundred.length;\n    return null;\n  },\n  pokerCountUnsure() {\n    if (this.poker && this.poker.unsure) return this.poker.unsure.length;\n    return null;\n  },\n  pokerCount() {\n    return (\n      this.pokerCountOne() +\n      this.pokerCountTwo() +\n      this.pokerCountThree() +\n      this.pokerCountFive() +\n      this.pokerCountEight() +\n      this.pokerCountThirteen() +\n      this.pokerCountTwenty() +\n      this.pokerCountForty() +\n      this.pokerCountOneHundred() +\n      this.pokerCountUnsure()\n    );\n  },\n  pokerWinner() {\n    const pokerListMaps = [];\n    let pokerWinnersListMap = [];\n    if (this.expiredPoker()) {\n      const one = { count: this.pokerCountOne(), pokerCard: 1 };\n      const two = { count: this.pokerCountTwo(), pokerCard: 2 };\n      const three = { count: this.pokerCountThree(), pokerCard: 3 };\n      const five = { count: this.pokerCountFive(), pokerCard: 5 };\n      const eight = { count: this.pokerCountEight(), pokerCard: 8 };\n      const thirteen = { count: this.pokerCountThirteen(), pokerCard: 13 };\n      const twenty = { count: this.pokerCountTwenty(), pokerCard: 20 };\n      const forty = { count: this.pokerCountForty(), pokerCard: 40 };\n      const oneHundred = { count: this.pokerCountOneHundred(), pokerCard: 100 };\n      const unsure = { count: this.pokerCountUnsure(), pokerCard: 'Unsure' };\n      pokerListMaps.push(one);\n      pokerListMaps.push(two);\n      pokerListMaps.push(three);\n      pokerListMaps.push(five);\n      pokerListMaps.push(eight);\n      pokerListMaps.push(thirteen);\n      pokerListMaps.push(twenty);\n      pokerListMaps.push(forty);\n      pokerListMaps.push(oneHundred);\n      pokerListMaps.push(unsure);\n\n      pokerListMaps.sort(function(a, b) {\n        return b.count - a.count;\n      });\n      const max = pokerListMaps[0].count;\n      pokerWinnersListMap = pokerListMaps.filter(task => task.count >= max);\n      pokerWinnersListMap.sort(function(a, b) {\n        return b.pokerCard - a.pokerCard;\n      });\n    }\n    return pokerWinnersListMap[0].pokerCard;\n  },\n});\n\nCards.mutations({\n  applyToChildren(funct) {\n    ReactiveCache.getCards({\n      parentId: this._id,\n    }).forEach(card => {\n      funct(card);\n    });\n  },\n\n  archive() {\n    this.applyToChildren(card => {\n      return card.archive();\n    });\n    return {\n      $set: {\n        archived: true,\n        archivedAt: new Date(),\n      },\n    };\n  },\n\n  restore() {\n    this.applyToChildren(card => {\n      return card.restore();\n    });\n    return {\n      $set: {\n        archived: false,\n      },\n    };\n  },\n\n  moveToEndOfList({ listId } = {}) {\n    let swimlaneId = this.swimlaneId;\n    const boardId = this.boardId;\n    let sortIndex = 0;\n\n    // This should never happen, but there was a bug that was fixed in commit\n    // ea0239538a68e225c867411a4f3e0d27c158383.\n    if (!swimlaneId) {\n      const board = ReactiveCache.getBoard(boardId);\n      swimlaneId = board.getDefaultSwimline()._id;\n    }\n    // Move the minicard to the end of the target list\n    let parentElementDom = $(`#swimlane-${this.swimlaneId}`).get(0);\n    if (!parentElementDom) parentElementDom = $(':root');\n\n    const lastCardDom = $(parentElementDom)\n      .find(`#js-list-${listId} .js-minicard:last`)\n      .get(0);\n    if (lastCardDom) sortIndex = Utils.calculateIndex(lastCardDom, null).base;\n\n    return this.moveOptionalArgs({\n      boardId,\n      swimlaneId,\n      listId,\n      sort: sortIndex,\n    });\n  },\n\n  moveOptionalArgs({ boardId, swimlaneId, listId, sort } = {}) {\n    boardId = boardId || this.boardId;\n    swimlaneId = swimlaneId || this.swimlaneId;\n    // This should never happen, but there was a bug that was fixed in commit\n    // ea0239538a68e225c867411a4f3e0d27c158383.\n    if (!swimlaneId) {\n      const board = ReactiveCache.getBoard(boardId);\n      swimlaneId = board.getDefaultSwimline()._id;\n    }\n    listId = listId || this.listId;\n    if (sort === undefined || sort === null) sort = this.sort;\n    return this.move(boardId, swimlaneId, listId, sort);\n  },\n\n  move(boardId, swimlaneId, listId, sort = null) {\n    const mutatedFields = {\n      boardId,\n      swimlaneId,\n      listId,\n    };\n\n    if (sort !== null) {\n      mutatedFields.sort = sort;\n    }\n\n    // we must only copy the labels and custom fields if the target board\n    // differs from the source board\n    if (this.boardId !== boardId) {\n      // Get label names\n      const oldBoard = ReactiveCache.getBoard(this.boardId);\n      const oldBoardLabels = oldBoard.labels;\n      const oldCardLabels = _.pluck(\n        _.filter(oldBoardLabels, label => {\n          return _.contains(this.labelIds, label._id);\n        }),\n        'name',\n      );\n\n      const newBoard = ReactiveCache.getBoard(boardId);\n      const newBoardLabels = newBoard.labels;\n      const newCardLabelIds = _.pluck(\n        _.filter(newBoardLabels, label => {\n          return label.name && _.contains(oldCardLabels, label.name);\n        }),\n        '_id',\n      );\n\n      // assign the new card number from the target board\n      const newCardNumber = newBoard.getNextCardNumber();\n\n      Object.assign(mutatedFields, {\n        labelIds: newCardLabelIds,\n        cardNumber: newCardNumber\n      });\n\n      mutatedFields.customFields = this.mapCustomFieldsToBoard(newBoard._id);\n    }\n\n    Cards.update(this._id, {\n      $set: mutatedFields,\n    });\n  },\n\n  addLabel(labelId) {\n    this.labelIds.push(labelId);\n    return {\n      $addToSet: {\n        labelIds: labelId,\n      },\n    };\n  },\n\n  removeLabel(labelId) {\n    this.labelIds = _.without(this.labelIds, labelId);\n    return {\n      $pull: {\n        labelIds: labelId,\n      },\n    };\n  },\n\n  toggleLabel(labelId) {\n    if (this.labelIds && this.labelIds.indexOf(labelId) > -1) {\n      return this.removeLabel(labelId);\n    } else {\n      return this.addLabel(labelId);\n    }\n  },\n\n  setColor(newColor) {\n    if (newColor === 'white') {\n      newColor = null;\n    }\n    return {\n      $set: {\n        color: newColor,\n      },\n    };\n  },\n\n  assignMember(memberId) {\n    return {\n      $addToSet: {\n        members: memberId,\n      },\n    };\n  },\n\n  assignAssignee(assigneeId) {\n    // If there is not any assignee, allow one assignee, not more.\n    /*\n    if (this.getAssignees().length === 0) {\n      return {\n        $addToSet: {\n          assignees: assigneeId,\n        },\n      };\n    */\n    // Allow more that one assignee:\n    // https://github.com/wekan/wekan/issues/3302\n    return {\n      $addToSet: {\n        assignees: assigneeId,\n      },\n    };\n    //} else {\n    //  return false,\n    //}\n  },\n\n  unassignMember(memberId) {\n    return {\n      $pull: {\n        members: memberId,\n      },\n    };\n  },\n\n  unassignAssignee(assigneeId) {\n    return {\n      $pull: {\n        assignees: assigneeId,\n      },\n    };\n  },\n\n  toggleMember(memberId) {\n    if (this.members && this.members.indexOf(memberId) > -1) {\n      return this.unassignMember(memberId);\n    } else {\n      return this.assignMember(memberId);\n    }\n  },\n\n  toggleAssignee(assigneeId) {\n    if (this.assignees && this.assignees.indexOf(assigneeId) > -1) {\n      return this.unassignAssignee(assigneeId);\n    } else {\n      return this.assignAssignee(assigneeId);\n    }\n  },\n\n  assignCustomField(customFieldId) {\n    return {\n      $addToSet: {\n        customFields: {\n          _id: customFieldId,\n          value: null,\n        },\n      },\n    };\n  },\n\n  unassignCustomField(customFieldId) {\n    return {\n      $pull: {\n        customFields: {\n          _id: customFieldId,\n        },\n      },\n    };\n  },\n\n  toggleCustomField(customFieldId) {\n    if (this.customFields && this.customFieldIndex(customFieldId) > -1) {\n      return this.unassignCustomField(customFieldId);\n    } else {\n      return this.assignCustomField(customFieldId);\n    }\n  },\n\n  toggleShowActivities() {\n    return {\n      $set: {\n        showActivities: !this.showActivities,\n      }\n    };\n  },\n\n  toggleHideFinishedChecklist() {\n    return {\n      $set: {\n        hideFinishedChecklistIfItemsAreHidden: !this.hideFinishedChecklistIfItemsAreHidden,\n      }\n    };\n  },\n\n  setCustomField(customFieldId, value) {\n    // todo\n    const index = this.customFieldIndex(customFieldId);\n    if (index > -1) {\n      const update = {\n        $set: {},\n      };\n      update.$set[`customFields.${index}.value`] = value;\n      return update;\n    }\n    // TODO\n    // Ignatz 18.05.2018: Return null to silence ESLint. No Idea if that is correct\n    return null;\n  },\n\n  setCover(coverId) {\n    return {\n      $set: {\n        coverId,\n      },\n    };\n  },\n\n  unsetCover() {\n    return {\n      $unset: {\n        coverId: '',\n      },\n    };\n  },\n\n  //setReceived(receivedAt) {\n  //  return {\n  //    $set: {\n  //      receivedAt,\n  //    },\n  //  };\n  //},\n\n  unsetReceived() {\n    return {\n      $unset: {\n        receivedAt: '',\n      },\n    };\n  },\n\n  //setStart(startAt) {\n  //  return {\n  //    $set: {\n  //      startAt,\n  //    },\n  //  };\n  //},\n\n  unsetStart() {\n    return {\n      $unset: {\n        startAt: '',\n      },\n    };\n  },\n\n  //setDue(dueAt) {\n  //  return {\n  //    $set: {\n  //      dueAt,\n  //    },\n  //  };\n  //},\n\n  unsetDue() {\n    return {\n      $unset: {\n        dueAt: '',\n      },\n    };\n  },\n\n  //setEnd(endAt) {\n  //  return {\n  //    $set: {\n  //      endAt,\n  //    },\n  //  };\n  //},\n\n  unsetEnd() {\n    return {\n      $unset: {\n        endAt: '',\n      },\n    };\n  },\n\n  setOvertime(isOvertime) {\n    return {\n      $set: {\n        isOvertime,\n      },\n    };\n  },\n\n  setSpentTime(spentTime) {\n    return {\n      $set: {\n        spentTime,\n      },\n    };\n  },\n\n  unsetSpentTime() {\n    return {\n      $unset: {\n        spentTime: '',\n        isOvertime: false,\n      },\n    };\n  },\n\n  setParentId(parentId) {\n    return {\n      $set: {\n        parentId,\n      },\n    };\n  },\n  setVoteQuestion(question, publicVote, allowNonBoardMembers) {\n    return {\n      $set: {\n        vote: {\n          question,\n          public: publicVote,\n          allowNonBoardMembers,\n          positive: [],\n          negative: [],\n        },\n      },\n    };\n  },\n  unsetVote() {\n    return {\n      $unset: {\n        vote: '',\n      },\n    };\n  },\n  setVoteEnd(end) {\n    return {\n      $set: { 'vote.end': end },\n    };\n  },\n  unsetVoteEnd() {\n    return {\n      $unset: { 'vote.end': '' },\n    };\n  },\n  setVote(userId, forIt) {\n    switch (forIt) {\n      case true:\n        // vote for it\n        return {\n          $pull: {\n            'vote.negative': userId,\n          },\n          $addToSet: {\n            'vote.positive': userId,\n          },\n        };\n      case false:\n        // vote against\n        return {\n          $pull: {\n            'vote.positive': userId,\n          },\n          $addToSet: {\n            'vote.negative': userId,\n          },\n        };\n\n      default:\n        // Remove votes\n        return {\n          $pull: {\n            'vote.positive': userId,\n            'vote.negative': userId,\n          },\n        };\n    }\n  },\n\n  setPokerQuestion(question, allowNonBoardMembers) {\n    return {\n      $set: {\n        poker: {\n          question,\n          allowNonBoardMembers,\n          one: [],\n          two: [],\n          three: [],\n          five: [],\n          eight: [],\n          thirteen: [],\n          twenty: [],\n          forty: [],\n          oneHundred: [],\n          unsure: [],\n        },\n      },\n    };\n  },\n  setPokerEstimation(estimation) {\n    return {\n      $set: { 'poker.estimation': estimation },\n    };\n  },\n  unsetPokerEstimation() {\n    return {\n      $unset: { 'poker.estimation': '' },\n    };\n  },\n  unsetPoker() {\n    return {\n      $unset: {\n        poker: '',\n      },\n    };\n  },\n  setPokerEnd(end) {\n    return {\n      $set: { 'poker.end': end },\n    };\n  },\n  unsetPokerEnd() {\n    return {\n      $unset: { 'poker.end': '' },\n    };\n  },\n  setPoker(userId, state) {\n    switch (state) {\n      case 'one':\n        // poker one\n        return {\n          $pull: {\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.one': userId,\n          },\n        };\n      case 'two':\n        // poker two\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.two': userId,\n          },\n        };\n\n      case 'three':\n        // poker three\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.three': userId,\n          },\n        };\n\n      case 'five':\n        // poker five\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.five': userId,\n          },\n        };\n\n      case 'eight':\n        // poker eight\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.eight': userId,\n          },\n        };\n\n      case 'thirteen':\n        // poker thirteen\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.thirteen': userId,\n          },\n        };\n\n      case 'twenty':\n        // poker twenty\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.twenty': userId,\n          },\n        };\n\n      case 'forty':\n        // poker forty\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.forty': userId,\n          },\n        };\n\n      case 'oneHundred':\n        // poker one hundred\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.unsure': userId,\n          },\n          $addToSet: {\n            'poker.oneHundred': userId,\n          },\n        };\n\n      case 'unsure':\n        // poker unsure\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n          },\n          $addToSet: {\n            'poker.unsure': userId,\n          },\n        };\n\n      default:\n        // Remove pokers\n        return {\n          $pull: {\n            'poker.one': userId,\n            'poker.two': userId,\n            'poker.three': userId,\n            'poker.five': userId,\n            'poker.eight': userId,\n            'poker.thirteen': userId,\n            'poker.twenty': userId,\n            'poker.forty': userId,\n            'poker.oneHundred': userId,\n            'poker.unsure': userId,\n          },\n        };\n    }\n  },\n  replayPoker() {\n    return {\n      $set: {\n        'poker.one': [],\n        'poker.two': [],\n        'poker.three': [],\n        'poker.five': [],\n        'poker.eight': [],\n        'poker.thirteen': [],\n        'poker.twelve': [],\n        'poker.forty': [],\n        'poker.oneHundred': [],\n        'poker.unsure': [],\n      },\n    };\n  },\n});\n\n//FUNCTIONS FOR creation of Activities\n\nfunction updateActivities(doc, fieldNames, modifier) {\n  if (_.contains(fieldNames, 'labelIds') && _.contains(fieldNames, 'boardId')) {\n    ReactiveCache.getActivities({\n      activityType: 'addedLabel',\n      cardId: doc._id,\n    }).forEach(a => {\n      const lidx = doc.labelIds.indexOf(a.labelId);\n      if (lidx !== -1 && modifier.$set.labelIds.length > lidx) {\n        Activities.update(a._id, {\n          $set: {\n            labelId: modifier.$set.labelIds[doc.labelIds.indexOf(a.labelId)],\n            boardId: modifier.$set.boardId,\n          },\n        });\n      } else {\n        Activities.remove(a._id);\n      }\n    });\n  } else if (_.contains(fieldNames, 'boardId')) {\n    Activities.remove({\n      activityType: 'addedLabel',\n      cardId: doc._id,\n    });\n  }\n}\n\nfunction cardMove(\n  userId,\n  doc,\n  fieldNames,\n  oldListId,\n  oldSwimlaneId,\n  oldBoardId,\n) {\n  if (_.contains(fieldNames, 'boardId') && doc.boardId !== oldBoardId) {\n    Activities.insert({\n      userId,\n      activityType: 'moveCardBoard',\n      boardName: ReactiveCache.getBoard(doc.boardId).title,\n      boardId: doc.boardId,\n      oldBoardId,\n      oldBoardName: ReactiveCache.getBoard(oldBoardId).title,\n      cardId: doc._id,\n      swimlaneName: ReactiveCache.getSwimlane(doc.swimlaneId).title,\n      swimlaneId: doc.swimlaneId,\n      oldSwimlaneId,\n    });\n  } else if (\n    (_.contains(fieldNames, 'listId') && doc.listId !== oldListId) ||\n    (_.contains(fieldNames, 'swimlaneId') && doc.swimlaneId !== oldSwimlaneId)\n  ) {\n    Activities.insert({\n      userId,\n      oldListId,\n      activityType: 'moveCard',\n      listName: ReactiveCache.getList(doc.listId).title,\n      listId: doc.listId,\n      boardId: doc.boardId,\n      cardId: doc._id,\n      cardTitle: doc.title,\n      swimlaneName: ReactiveCache.getSwimlane(doc.swimlaneId).title,\n      swimlaneId: doc.swimlaneId,\n      oldSwimlaneId,\n    });\n  }\n}\n\nfunction cardState(userId, doc, fieldNames) {\n  if (_.contains(fieldNames, 'archived')) {\n    if (doc.archived) {\n      Activities.insert({\n        userId,\n        activityType: 'archivedCard',\n        listName: ReactiveCache.getList(doc.listId).title,\n        boardId: doc.boardId,\n        listId: doc.listId,\n        cardId: doc._id,\n        swimlaneId: doc.swimlaneId,\n      });\n    } else {\n      Activities.insert({\n        userId,\n        activityType: 'restoredCard',\n        boardId: doc.boardId,\n        listName: ReactiveCache.getList(doc.listId).title,\n        listId: doc.listId,\n        cardId: doc._id,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n}\n\nfunction cardMembers(userId, doc, fieldNames, modifier) {\n  if (!_.contains(fieldNames, 'members')) return;\n  let memberId;\n  // Say hello to the new member\n  if (modifier.$addToSet && modifier.$addToSet.members) {\n    memberId = modifier.$addToSet.members;\n    const username = ReactiveCache.getUser(memberId).username;\n    if (!_.contains(doc.members, memberId)) {\n      Activities.insert({\n        userId,\n        username,\n        activityType: 'joinMember',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        memberId,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n\n  // Say goodbye to the former member\n  if (modifier.$pull && modifier.$pull.members) {\n    memberId = modifier.$pull.members;\n    const username = ReactiveCache.getUser(memberId).username;\n    // Check that the former member is member of the card\n    if (_.contains(doc.members, memberId)) {\n      Activities.insert({\n        userId,\n        username,\n        activityType: 'unjoinMember',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        memberId,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n}\n\nfunction cardAssignees(userId, doc, fieldNames, modifier) {\n  if (!_.contains(fieldNames, 'assignees')) return;\n  let assigneeId;\n  // Say hello to the new assignee\n  if (modifier.$addToSet && modifier.$addToSet.assignees) {\n    assigneeId = modifier.$addToSet.assignees;\n    const username = ReactiveCache.getUser(assigneeId).username;\n    if (!_.contains(doc.assignees, assigneeId)) {\n      Activities.insert({\n        userId,\n        username,\n        activityType: 'joinAssignee',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        assigneeId,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n  // Say goodbye to the former assignee\n  if (modifier.$pull && modifier.$pull.assignees) {\n    assigneeId = modifier.$pull.assignees;\n    const username = ReactiveCache.getUser(assigneeId).username;\n    // Check that the former assignee is assignee of the card\n    if (_.contains(doc.assignees, assigneeId)) {\n      Activities.insert({\n        userId,\n        username,\n        activityType: 'unjoinAssignee',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        assigneeId,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n}\n\nfunction cardLabels(userId, doc, fieldNames, modifier) {\n  if (!_.contains(fieldNames, 'labelIds')) return;\n  let labelId;\n  // Say hello to the new label\n  if (modifier.$addToSet && modifier.$addToSet.labelIds) {\n    labelId = modifier.$addToSet.labelIds;\n    //const label = labels(labelId).name;\n    if (!_.contains(doc.labelIds, labelId)) {\n      const act = {\n        userId,\n        labelId,\n        activityType: 'addedLabel',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      };\n      Activities.insert(act);\n    }\n  }\n\n  // Say goodbye to the label\n  if (modifier.$pull && modifier.$pull.labelIds) {\n    labelId = modifier.$pull.labelIds;\n    // Check that the former member is member of the card\n    if (_.contains(doc.labelIds, labelId)) {\n      Activities.insert({\n        userId,\n        labelId,\n        activityType: 'removedLabel',\n        boardId: doc.boardId,\n        cardId: doc._id,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    }\n  }\n}\n\nfunction cardCustomFields(userId, doc, fieldNames, modifier) {\n  if (!_.contains(fieldNames, 'customFields')) return;\n\n  // Say hello to the new customField value\n  if (modifier.$set) {\n    _.each(modifier.$set, (value, key) => {\n      if (key.startsWith('customFields')) {\n        const dotNotation = key.split('.');\n\n        // only individual changes are registered\n        if (dotNotation.length > 1) {\n          const customFieldId = doc.customFields[dotNotation[1]]._id;\n          const act = {\n            userId,\n            customFieldId,\n            value,\n            activityType: 'setCustomField',\n            boardId: doc.boardId,\n            cardId: doc._id,\n            listId: doc.listId,\n            swimlaneId: doc.swimlaneId,\n          };\n          Activities.insert(act);\n        }\n      }\n    });\n  }\n\n  // Say goodbye to the former customField value\n  if (modifier.$unset) {\n    _.each(modifier.$unset, (value, key) => {\n      if (key.startsWith('customFields')) {\n        const dotNotation = key.split('.');\n\n        // only individual changes are registered\n        if (dotNotation.length > 1) {\n          const customFieldId = doc.customFields[dotNotation[1]]._id;\n          const act = {\n            userId,\n            customFieldId,\n            activityType: 'unsetCustomField',\n            boardId: doc.boardId,\n            cardId: doc._id,\n          };\n          Activities.insert(act);\n        }\n      }\n    });\n  }\n}\n\nfunction cardCreation(userId, doc) {\n  Activities.insert({\n    userId,\n    activityType: 'createCard',\n    boardId: doc.boardId,\n    listName: ReactiveCache.getList(doc.listId).title,\n    listId: doc.listId,\n    cardId: doc._id,\n    cardTitle: doc.title,\n    swimlaneName: ReactiveCache.getSwimlane(doc.swimlaneId).title,\n    swimlaneId: doc.swimlaneId,\n  });\n}\n\nMeteor.methods({\n  createCardWithDueDate: function(boardId, listId, title, dueDate, swimlaneId) {\n    check(boardId, String);\n    check(listId, String);\n    check(title, String);\n    check(dueDate, Date);\n    check(swimlaneId, String);\n    const card = {\n      title,\n      listId,\n      boardId,\n      swimlaneId,\n      createdAt: new Date(),\n      dueAt: dueDate,\n      sort: 0,\n      usedId: Meteor.userId(),\n    };\n    const cardId = Cards.insert(card);\n    return cardId;\n  },\n});\n\nfunction cardRemover(userId, doc) {\n  ChecklistItems.remove({\n    cardId: doc._id,\n  });\n  Checklists.remove({\n    cardId: doc._id,\n  });\n  Cards.remove({\n    parentId: doc._id,\n  });\n  CardComments.remove({\n    cardId: doc._id,\n  });\n  Attachments.remove({\n    cardId: doc._id,\n  });\n}\n\nconst findDueCards = days => {\n  const seekDue = ($from, $to, activityType) => {\n    ReactiveCache.getCards({\n      archived: false,\n      dueAt: { $gte: $from, $lt: $to },\n    }).forEach(card => {\n      const username = ReactiveCache.getUser(card.userId).username;\n      const activity = {\n        userId: card.userId,\n        username,\n        activityType,\n        boardId: card.boardId,\n        cardId: card._id,\n        cardTitle: card.title,\n        listId: card.listId,\n        timeValue: card.dueAt,\n        swimlaneId: card.swimlaneId,\n      };\n      Activities.insert(activity);\n    });\n  };\n  const now = new Date(),\n    aday = 3600 * 24 * 1e3,\n    then = day => new Date(now.setHours(0, 0, 0, 0) + day * aday);\n  if (!days) return;\n  if (!days.map) days = [days];\n  days.map(day => {\n    let args = [];\n    if (day === 0) {\n      args = [then(0), then(1), 'duenow'];\n    } else if (day > 0) {\n      args = [then(1), then(day), 'almostdue'];\n    } else {\n      args = [then(day), now, 'pastdue'];\n    }\n    seekDue(...args);\n  });\n};\nconst addCronJob = _.debounce(\n  Meteor.bindEnvironment(function findDueCardsDebounced() {\n    const envValue = process.env.NOTIFY_DUE_DAYS_BEFORE_AND_AFTER;\n    if (!envValue) {\n      return;\n    }\n    const notifydays = envValue\n      .split(',')\n      .map(value => {\n        const iValue = parseInt(value, 10);\n        if (!(iValue > 0 && iValue < 15)) {\n          // notifying due is disabled\n          return false;\n        } else {\n          return iValue;\n        }\n      })\n      .filter(Boolean);\n    const notifyitvl = process.env.NOTIFY_DUE_AT_HOUR_OF_DAY; //passed in the itvl has to be a number standing for the hour of current time\n    const defaultitvl = 8; // default every morning at 8am, if the passed env variable has parsing error use default\n    const itvl = parseInt(notifyitvl, 10) || defaultitvl;\n    const scheduler = (job => () => {\n      const now = new Date();\n      const hour = 3600 * 1e3;\n      if (now.getHours() === itvl) {\n        if (typeof job === 'function') {\n          job();\n        }\n      }\n      Meteor.setTimeout(scheduler, hour);\n    })(() => {\n      findDueCards(notifydays);\n    });\n    scheduler();\n  }),\n  500,\n);\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    /** copies a card\n     * <li> this method is needed on the server because attachments can only be copied on the server (access to file system)\n     * @param card id to copy\n     * @param boardId copy to this board\n     * @param swimlandeId copy to this swimlane id\n     * @param listId copy to this list id\n     * @param insertAtTop insert the card at the top?\n     * @param mergeCardValues this values into the copied card\n     * @return the new card id\n     */\n    copyCard(cardId, boardId, swimlaneId, listId, insertAtTop, mergeCardValues) {\n      check(cardId, String);\n      check(boardId, String);\n      check(swimlaneId, String);\n      check(listId, String);\n      check(insertAtTop, Boolean);\n      check(mergeCardValues, Object);\n\n      const card = ReactiveCache.getCard(cardId);\n      Object.assign(card, mergeCardValues);\n\n      const sort = card.getSort(listId, swimlaneId, insertAtTop);\n      if (insertAtTop) {\n        card.sort = sort - 1;\n      } else\n      {\n        card.sort = sort + 1;\n      }\n\n      const ret = card.copy(boardId, swimlaneId, listId);\n      return ret;\n    },\n  });\n  // Cards are often fetched within a board, so we create an index to make these\n  // queries more efficient.\n  Meteor.startup(() => {\n    Cards._collection.createIndex({ modifiedAt: -1 });\n    Cards._collection.createIndex({ boardId: 1, createdAt: -1 });\n    // https://github.com/wekan/wekan/issues/1863\n    // Swimlane added a new field in the cards collection of mongodb named parentId.\n    // When loading a board, mongodb is searching for every cards, the id of the parent (in the swinglanes collection).\n    // With a huge database, this result in a very slow app and high CPU on the mongodb side.\n    // To correct it, add Index to parentId:\n    Cards._collection.createIndex({ parentId: 1 });\n    // let notifydays = parseInt(process.env.NOTIFY_DUE_DAYS_BEFORE_AND_AFTER) || 2; // default as 2 days b4 and after\n    // let notifyitvl = parseInt(process.env.NOTIFY_DUE_AT_HOUR_OF_DAY) || 3600 * 24 * 1e3; // default interval as one day\n    // Meteor.call(\"findDueCards\",notifydays,notifyitvl);\n    Meteor.defer(() => {\n      addCronJob();\n    });\n  });\n\n  Cards.after.insert((userId, doc) => {\n    cardCreation(userId, doc);\n  });\n  // New activity for card (un)archivage\n  Cards.after.update((userId, doc, fieldNames) => {\n    cardState(userId, doc, fieldNames);\n  });\n\n  //New activity for card moves\n  Cards.after.update(function(userId, doc, fieldNames) {\n    const oldListId = this.previous.listId;\n    const oldSwimlaneId = this.previous.swimlaneId;\n    const oldBoardId = this.previous.boardId;\n    cardMove(userId, doc, fieldNames, oldListId, oldSwimlaneId, oldBoardId);\n  });\n\n  // Add a new activity if we add or remove a member to the card\n  Cards.before.update((userId, doc, fieldNames, modifier) => {\n    cardMembers(userId, doc, fieldNames, modifier);\n    updateActivities(doc, fieldNames, modifier);\n  });\n\n  // Add a new activity if we add or remove a assignee to the card\n  Cards.before.update((userId, doc, fieldNames, modifier) => {\n    cardAssignees(userId, doc, fieldNames, modifier);\n    updateActivities(doc, fieldNames, modifier);\n  });\n\n  // Add a new activity if we add or remove a label to the card\n  Cards.before.update((userId, doc, fieldNames, modifier) => {\n    cardLabels(userId, doc, fieldNames, modifier);\n  });\n\n  // Add a new activity if we edit a custom field\n  Cards.before.update((userId, doc, fieldNames, modifier) => {\n    cardCustomFields(userId, doc, fieldNames, modifier);\n  });\n\n  // Add a new activity if modify time related field like dueAt startAt etc\n  Cards.before.update((userId, doc, fieldNames, modifier) => {\n    const dla = 'dateLastActivity';\n    const fields = fieldNames.filter(name => name !== dla);\n    const timingaction = ['receivedAt', 'dueAt', 'startAt', 'endAt'];\n    const action = fields[0];\n    if (fields.length > 0 && _.contains(timingaction, action)) {\n      // add activities for user change these attributes\n      const value = modifier.$set[action];\n      const oldvalue = doc[action] || '';\n      const activityType = `a-${action}`;\n      const card = ReactiveCache.getCard(doc._id);\n      const list = card.list();\n      if (list) {\n        // change list modifiedAt, when user modified the key values in\n        // timingaction array, if it's endAt, put the modifiedAt of list\n        // back to one year ago for sorting purpose\n        const modifiedAt = moment()\n          .subtract(1, 'year')\n          .toISOString();\n        const boardId = list.boardId;\n        Lists.direct.update(\n          {\n            _id: list._id,\n          },\n          {\n            $set: {\n              modifiedAt,\n              boardId,\n            },\n          },\n        );\n      }\n      const username = ReactiveCache.getUser(userId).username;\n      const activity = {\n        userId,\n        username,\n        activityType,\n        boardId: doc.boardId,\n        cardId: doc._id,\n        cardTitle: doc.title,\n        timeKey: action,\n        timeValue: value,\n        timeOldValue: oldvalue,\n        listId: card.listId,\n        swimlaneId: card.swimlaneId,\n      };\n      Activities.insert(activity);\n    }\n  });\n  // Remove all activities associated with a card if we remove the card\n  // Remove also card_comments / checklists / attachments\n  Cards.before.remove((userId, doc) => {\n    cardRemover(userId, doc);\n  });\n}\n//SWIMLANES REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_swimlane_cards\n   * @summary get all cards attached to a swimlane\n   *\n   * @param {string} boardId the board ID\n   * @param {string} swimlaneId the swimlane ID\n   * @return_type [{_id: string,\n   *                title: string,\n   *                description: string,\n   *                listId: string}]\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/swimlanes/:swimlaneId/cards',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramSwimlaneId = req.params.swimlaneId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getCards({\n          boardId: paramBoardId,\n          swimlaneId: paramSwimlaneId,\n          archived: false,\n        },\n        { sort: ['sort'] }).map(function(doc) {\n          return {\n            _id: doc._id,\n            title: doc.title,\n            description: doc.description,\n            listId: doc.listId,\n            receivedAt: doc.receivedAt,\n            startAt: doc.startAt,\n            dueAt: doc.dueAt,\n            endAt: doc.endAt,\n            assignees: doc.assignees,\n            sort: doc.sort,\n          };\n        }),\n      });\n    },\n  );\n}\n//LISTS REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_cards\n   * @summary Get all Cards attached to a List\n   *\n   * @param {string} boardId the board ID\n   * @param {string} listId the list ID\n   * @return_type [{_id: string,\n   *                title: string,\n   *                description: string}]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/lists/:listId/cards', function(\n    req,\n    res,\n  ) {\n    const paramBoardId = req.params.boardId;\n    const paramListId = req.params.listId;\n    Authentication.checkBoardAccess(req.userId, paramBoardId);\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: ReactiveCache.getCards({\n        boardId: paramBoardId,\n        listId: paramListId,\n        archived: false,\n      },\n      { sort: ['sort'] }).map(function(doc) {\n        return {\n          _id: doc._id,\n          title: doc.title,\n          description: doc.description,\n          swimlaneId: doc.swimlaneId,\n          receivedAt: doc.receivedAt,\n          startAt: doc.startAt,\n          dueAt: doc.dueAt,\n          endAt: doc.endAt,\n          assignees: doc.assignees,\n          sort: doc.sort,\n        };\n      }),\n    });\n  });\n\n  /**\n   * @operation get_card_by_id\n   * @summary Get a Card by Card ID\n   *\n   * @param {string} cardId the card ID\n   * @return_type Cards\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/cards/:cardId',\n    function(req, res) {\n      const paramCardId = req.params.cardId;\n      card = ReactiveCache.getCard(paramCardId)\n      Authentication.checkBoardAccess(req.userId, card.boardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: card,\n      });\n    },\n  );\n\n  /**\n   * @operation get_card\n   * @summary Get a Card\n   *\n   * @param {string} boardId the board ID\n   * @param {string} listId the list ID of the card\n   * @param {string} cardId the card ID\n   * @return_type Cards\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/lists/:listId/cards/:cardId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getCard({\n          _id: paramCardId,\n          listId: paramListId,\n          boardId: paramBoardId,\n          archived: false,\n        }),\n      });\n    },\n  );\n\n  /**\n   * @operation new_card\n   * @summary Create a new Card\n   *\n   * @param {string} boardId the board ID of the new card\n   * @param {string} listId the list ID of the new card\n   * @param {string} authorID the user ID of the person owning the card\n   * @param {string} parentId the parent ID of the new card\n   * @param {string} title the title of the new card\n   * @param {string} description the description of the new card\n   * @param {string} swimlaneId the swimlane ID of the new card\n   * @param {string} [members] the member IDs list of the new card\n   * @param {string} [assignees] the assignee IDs list of the new card\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/lists/:listId/cards', function(\n    req,\n    res,\n  ) {\n    // Check user is logged in\n    Authentication.checkLoggedIn(req.userId);\n    const paramBoardId = req.params.boardId;\n    // Check user has permission to add card to the board\n    const board = ReactiveCache.getBoard(paramBoardId);\n    const addPermission = allowIsBoardMemberCommentOnly(req.userId, board);\n    Authentication.checkAdminOrCondition(req.userId, addPermission);\n    const paramListId = req.params.listId;\n    const paramParentId = req.params.parentId;\n    const nextCardNumber = board.getNextCardNumber();\n\n    let customFieldsArr = [];\n    _.forEach(\n      ReactiveCache.getCustomFields({'boardIds': paramBoardId}),\n      function (field) {\n        if (field.automaticallyOnCard || field.alwaysOnCard)\n          customFieldsArr.push({ _id: field._id, value: null });\n      },\n    );\n\n    const currentCards = ReactiveCache.getCards(\n      {\n        listId: paramListId,\n        archived: false,\n      },\n      { sort: ['sort'] },\n    );\n    const check = ReactiveCache.getUser(req.body.authorId);\n    const members = req.body.members;\n    const assignees = req.body.assignees;\n    if (typeof check !== 'undefined') {\n      const id = Cards.direct.insert({\n        title: req.body.title,\n        boardId: paramBoardId,\n        listId: paramListId,\n        parentId: paramParentId,\n        description: req.body.description,\n        userId: req.body.authorId,\n        swimlaneId: req.body.swimlaneId,\n        sort: currentCards.length,\n        cardNumber: nextCardNumber,\n        customFields: customFieldsArr,\n        members,\n        assignees,\n      });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n\n      const card = ReactiveCache.getCard(id);\n      cardCreation(req.body.authorId, card);\n    } else {\n      JsonRoutes.sendResult(res, {\n        code: 401,\n      });\n    }\n  });\n\n/**\n * @operation get_board_cards_count\n * @summary Get a cards count to a board\n *\n * @param {string} boardId the board ID\n * @return_type {board_cards_count: integer}\n */\nJsonRoutes.add('GET', '/api/boards/:boardId/cards_count', function(\n  req,\n  res,\n) {\n  try {\n    const paramBoardId = req.params.boardId;\n    Authentication.checkBoardAccess(req.userId, paramBoardId);\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: {\n        board_cards_count: ReactiveCache.getCards({\n          boardId: paramBoardId,\n          archived: false,\n        }).length,\n      }\n    });\n  } catch (error) {\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: error,\n    });\n  }\n});\n\n/**\n * @operation get_list_cards_count\n * @summary Get a cards count to a list\n *\n * @param {string} boardId the board ID\n * @param {string} listId the List ID\n * @return_type {list_cards_count: integer}\n */\n  JsonRoutes.add('GET', '/api/boards/:boardId/lists/:listId/cards_count', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          list_cards_count: ReactiveCache.getCards({\n            boardId: paramBoardId,\n            listId: paramListId,\n            archived: false,\n          }).length,\n        }\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n\n  /*\n   * Note for the JSDoc:\n   * 'list' will be interpreted as the path parameter\n   * 'listID' will be interpreted as the body parameter\n   */\n  /**\n   * @operation edit_card\n   * @summary Edit Fields in a Card\n   *\n   * @description Edit a card\n   *\n   * The color has to be chosen between `white`, `green`, `yellow`, `orange`,\n   * `red`, `purple`, `blue`, `sky`, `lime`, `pink`, `black`, `silver`,\n   * `peachpuff`, `crimson`, `plum`, `darkgreen`, `slateblue`, `magenta`,\n   * `gold`, `navy`, `gray`, `saddlebrown`, `paleturquoise`, `mistyrose`,\n   * `indigo`:\n   *\n   * <img src=\"/card-colors.png\" width=\"40%\" alt=\"Wekan card colors\" />\n   *\n   * Note: setting the color to white has the same effect than removing it.\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} list the list ID of the card\n   * @param {string} cardId the ID of the card\n   * @param {string} [title] the new title of the card\n   * @param {string} [sort] the new sort value of the card\n   * @param {string} [listId] the new list ID of the card (move operation)\n   * @param {string} [description] the new description of the card\n   * @param {string} [authorId] change the owner of the card\n   * @param {string} [parentId] change the parent of the card\n   * @param {string} [labelIds] the new list of label IDs attached to the card\n   * @param {string} [swimlaneId] the new swimlane ID of the card\n   * @param {string} [members] the new list of member IDs attached to the card\n   * @param {string} [assignees] the array of maximum one ID of assignee attached to the card\n   * @param {string} [requestedBy] the new requestedBy field of the card\n   * @param {string} [assignedBy] the new assignedBy field of the card\n   * @param {string} [receivedAt] the new receivedAt field of the card\n   * @param {string} [assignBy] the new assignBy field of the card\n   * @param {string} [startAt] the new startAt field of the card\n   * @param {string} [dueAt] the new dueAt field of the card\n   * @param {string} [endAt] the new endAt field of the card\n   * @param {string} [spentTime] the new spentTime field of the card\n   * @param {boolean} [isOverTime] the new isOverTime field of the card\n   * @param {string} [customFields] the new customFields value of the card\n   * @param {string} [color] the new color of the card\n   * @param {Object} [vote] the vote object\n   * @param {string} vote.question the vote question\n   * @param {boolean} vote.public show who voted what\n   * @param {boolean} vote.allowNonBoardMembers allow all logged in users to vote?\n   * @param {Object} [poker] the poker object\n   * @param {string} poker.question the vote question\n   * @param {boolean} poker.allowNonBoardMembers allow all logged in users to vote?\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'PUT',\n    '/api/boards/:boardId/lists/:listId/cards/:cardId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramCardId = req.params.cardId;\n      const paramListId = req.params.listId;\n      const newBoardId = req.body.newBoardId;\n      const newSwimlaneId = req.body.newSwimlaneId;\n      const newListId = req.body.newListId;\n      let updated = false;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      if (req.body.title) {\n        const newTitle = req.body.title;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              title: newTitle,\n            },\n          },\n        );\n        updated = true;\n      }\n      if (req.body.sort) {\n        const newSort = req.body.sort;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              sort: newSort,\n            },\n          },\n        );\n        updated = true;\n      }\n      if (req.body.parentId) {\n        const newParentId = req.body.parentId;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              parentId: newParentId,\n            },\n          },\n        );\n        updated = true;\n      }\n      if (req.body.description) {\n        const newDescription = req.body.description;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              description: newDescription,\n            },\n          },\n        );\n        updated = true;\n      }\n      if (req.body.color) {\n        const newColor = req.body.color;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { color: newColor } },\n        );\n        updated = true;\n      }\n      if (req.body.vote) {\n        const newVote = req.body.vote;\n        newVote.positive = [];\n        newVote.negative = [];\n        if (!newVote.hasOwnProperty('public')) newVote.public = false;\n        if (!newVote.hasOwnProperty('allowNonBoardMembers'))\n          newVote.allowNonBoardMembers = false;\n\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { vote: newVote } },\n        );\n        updated = true;\n      }\n      if (req.body.poker) {\n        const newPoker = req.body.poker;\n        newPoker.one = [];\n        newPoker.two = [];\n        newPoker.three = [];\n        newPoker.five = [];\n        newPoker.eight = [];\n        newPoker.thirteen = [];\n        newPoker.twenty = [];\n        newPoker.forty = [];\n        newPoker.oneHundred = [];\n        newPoker.unsure = [];\n        if (!newPoker.hasOwnProperty('allowNonBoardMembers'))\n          newPoker.allowNonBoardMembers = false;\n\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { poker: newPoker } },\n        );\n        updated = true;\n      }\n      if (req.body.labelIds) {\n        let newlabelIds = req.body.labelIds;\n        if (_.isString(newlabelIds)) {\n          if (newlabelIds === '') {\n            newlabelIds = null;\n          } else {\n            newlabelIds = [newlabelIds];\n          }\n        }\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              labelIds: newlabelIds,\n            },\n          },\n        );\n        updated = true;\n      }\n      if (req.body.requestedBy) {\n        const newrequestedBy = req.body.requestedBy;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { requestedBy: newrequestedBy } },\n        );\n        updated = true;\n      }\n      if (req.body.assignedBy) {\n        const newassignedBy = req.body.assignedBy;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { assignedBy: newassignedBy } },\n        );\n        updated = true;\n      }\n      if (req.body.receivedAt) {\n        const newreceivedAt = req.body.receivedAt;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { receivedAt: newreceivedAt } },\n        );\n        updated = true;\n      }\n      if (req.body.startAt) {\n        const newstartAt = req.body.startAt;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { startAt: newstartAt } },\n        );\n        updated = true;\n      }\n      if (req.body.dueAt) {\n        const newdueAt = req.body.dueAt;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { dueAt: newdueAt } },\n        );\n        updated = true;\n      }\n      if (req.body.endAt) {\n        const newendAt = req.body.endAt;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { endAt: newendAt } },\n        );\n        updated = true;\n      }\n      if (req.body.spentTime) {\n        const newspentTime = req.body.spentTime;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { spentTime: newspentTime } },\n        );\n        updated = true;\n      }\n      if (req.body.isOverTime) {\n        const newisOverTime = req.body.isOverTime;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { isOverTime: newisOverTime } },\n        );\n        updated = true;\n      }\n      if (req.body.customFields) {\n        const newcustomFields = req.body.customFields;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { customFields: newcustomFields } },\n        );\n        updated = true;\n      }\n      if (req.body.members) {\n        let newmembers = req.body.members;\n        if (_.isString(newmembers)) {\n          if (newmembers === '') {\n            newmembers = null;\n          } else {\n            newmembers = [newmembers];\n          }\n        }\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { members: newmembers } },\n        );\n        updated = true;\n      }\n      if (req.body.assignees) {\n        let newassignees = req.body.assignees;\n        if (_.isString(newassignees)) {\n          if (newassignees === '') {\n            newassignees = null;\n          } else {\n            newassignees = [newassignees];\n          }\n        }\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { assignees: newassignees } },\n        );\n        updated = true;\n      }\n      if (req.body.swimlaneId) {\n        const newParamSwimlaneId = req.body.swimlaneId;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          { $set: { swimlaneId: newParamSwimlaneId } },\n        );\n        updated = true;\n      }\n      if (req.body.listId) {\n        const newParamListId = req.body.listId;\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              listId: newParamListId,\n            },\n          },\n        );\n        updated = true;\n\n        const card = ReactiveCache.getCard(paramCardId);\n        cardMove(\n          req.body.authorId,\n          card,\n          {\n            fieldName: 'listId',\n          },\n          paramListId,\n        );\n      }\n      if (newBoardId && newSwimlaneId && newListId) {\n        // Move the card to the new board, swimlane, and list\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              boardId: newBoardId,\n              swimlaneId: newSwimlaneId,\n              listId: newListId,\n            },\n          },\n        );\n        updated = true;\n\n        const card = ReactiveCache.getCard(paramCardId);\n        cardMove(\n          req.userId,\n          card,\n          ['boardId', 'swimlaneId', 'listId'],\n          newListId,\n          newSwimlaneId,\n          newBoardId,\n        );\n      }\n      if (req.body.archive) {\n        function isTrue(data) {\n          return String(data).toLowerCase() === 'true';\n        }\n        var archive = isTrue(req.body.archive);\n        Cards.direct.update(\n          {\n            _id: paramCardId,\n            listId: paramListId,\n            boardId: paramBoardId,\n            archived: !archive,\n          },\n          {\n            $set: {\n              archived: archive,\n            },\n          },\n        );\n        updated = true;\n      }\n    // Check if update is true or false\n    if (!updated) {\n      JsonRoutes.sendResult(res, {\n        code: 404,\n        data: {\n          message: 'Error',\n        },\n      });\n      return;\n    }\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramCardId,\n        },\n      });\n    },\n  );\n\n  /**\n   * @operation delete_card\n   * @summary Delete a card from a board\n   *\n   * @description This operation **deletes** a card, and therefore the card\n   * is not put in the recycle bin.\n   *\n   * @param {string} boardId the board ID of the card\n   * @param {string} list the list ID of the card\n   * @param {string} cardId the ID of the card\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/lists/:listId/cards/:cardId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      const card = ReactiveCache.getCard(paramCardId);\n      Cards.direct.remove({\n        _id: paramCardId,\n        listId: paramListId,\n        boardId: paramBoardId,\n      });\n      cardRemover(req.body.authorId, card);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramCardId,\n        },\n      });\n    },\n  );\n\n  /**\n   * @operation get_cards_by_custom_field\n   * @summary Get all Cards that matchs a value of a specific custom field\n   *\n   * @param {string} boardId the board ID\n   * @param {string} customFieldId the list ID\n   * @param {string} customFieldValue the value to look for\n   * @return_type [{_id: string,\n   *                title: string,\n   *                description: string,\n   *                listId: string,\n   *                swinlaneId: string}]\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/cardsByCustomField/:customFieldId/:customFieldValue',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramCustomFieldId = req.params.customFieldId;\n      const paramCustomFieldValue = req.params.customFieldValue;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getCards({\n          boardId: paramBoardId,\n          customFields: {\n            $elemMatch: {\n              _id: paramCustomFieldId,\n              value: paramCustomFieldValue,\n            },\n          },\n          archived: false,\n        }),\n      });\n    },\n  );\n\n  /**\n  * @operation edit_card_custom_field\n  * @summary Edit Custom Field in a Card\n  *\n  * @description Edit a custom field value in a card\n  * @param {string} boardId the board ID of the card\n  * @param {string} listId the list ID of the card\n  * @param {string} cardId the ID of the card\n  * @param {string} customFieldId the ID of the custom field\n  * @param {string} value the new custom field value\n  * @return_type {_id: string, customFields: [{_id: string, value: object}]}\n  */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/lists/:listId/cards/:cardId/customFields/:customFieldId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramCardId = req.params.cardId;\n      const paramListId = req.params.listId;\n      const paramCustomFieldId = req.params.customFieldId;\n      const paramCustomFieldValue = req.body.value;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const card = ReactiveCache.getCard({\n        _id: paramCardId,\n        listId: paramListId,\n        boardId: paramBoardId,\n        archived: false,\n      });\n      if (!card) {\n        throw new Meteor.Error(404, 'Card not found');\n      }\n      const customFields = card.customFields || [];\n      const updatedCustomFields = customFields.map(cf => {\n        if (cf._id === paramCustomFieldId) {\n          return {\n            _id: cf._id,\n            value: paramCustomFieldValue,\n          };\n        }\n        return cf;\n      });\n      Cards.direct.update(\n        {\n          _id: paramCardId,\n          listId: paramListId,\n          boardId: paramBoardId,\n          archived: false,\n        },\n        { $set: { customFields: updatedCustomFields } },\n      );\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramCardId,\n          customFields: updatedCustomFields,\n        },\n      });\n    },\n  );\n}\n\nexport default Cards;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nChecklistItems = new Mongo.Collection('checklistItems');\n\n/**\n * An item in a checklist\n */\nChecklistItems.attachSchema(\n  new SimpleSchema({\n    title: {\n      /**\n       * the text of the item\n       */\n      type: String,\n    },\n    sort: {\n      /**\n       * the sorting field of the item\n       */\n      type: Number,\n      decimal: true,\n    },\n    isFinished: {\n      /**\n       * Is the item checked?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    checklistId: {\n      /**\n       * the checklist ID the item is attached to\n       */\n      type: String,\n    },\n    cardId: {\n      /**\n       * the card ID the item is attached to\n       */\n      type: String,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nChecklistItems.allow({\n  insert(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  fetch: ['userId', 'cardId'],\n});\n\nChecklistItems.before.insert((userId, doc) => {\n  if (!doc.userId) {\n    doc.userId = userId;\n  }\n});\n\n// Mutations\nChecklistItems.mutations({\n  setTitle(title) {\n    return { $set: { title } };\n  },\n  check() {\n    return { $set: { isFinished: true } };\n  },\n  uncheck() {\n    return { $set: { isFinished: false } };\n  },\n  toggleItem() {\n    return { $set: { isFinished: !this.isFinished } };\n  },\n  move(checklistId, sortIndex) {\n    const cardId = ReactiveCache.getChecklist(checklistId).cardId;\n    const mutatedFields = {\n      cardId,\n      checklistId,\n      sort: sortIndex,\n    };\n\n    return { $set: mutatedFields };\n  },\n});\n\n// Activities helper\nfunction itemCreation(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  const boardId = card.boardId;\n  Activities.insert({\n    userId,\n    activityType: 'addChecklistItem',\n    cardId: doc.cardId,\n    boardId,\n    checklistId: doc.checklistId,\n    checklistItemId: doc._id,\n    checklistItemName: doc.title,\n    listId: card.listId,\n    swimlaneId: card.swimlaneId,\n  });\n}\n\nfunction itemRemover(userId, doc) {\n  Activities.remove({\n    checklistItemId: doc._id,\n  });\n}\n\nfunction publishCheckActivity(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  const boardId = card.boardId;\n  let activityType;\n  if (doc.isFinished) {\n    activityType = 'checkedItem';\n  } else {\n    activityType = 'uncheckedItem';\n  }\n  const act = {\n    userId,\n    activityType,\n    cardId: doc.cardId,\n    boardId,\n    checklistId: doc.checklistId,\n    checklistItemId: doc._id,\n    checklistItemName: doc.title,\n    listId: card.listId,\n    swimlaneId: card.swimlaneId,\n  };\n  Activities.insert(act);\n}\n\nfunction publishChekListCompleted(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  const boardId = card.boardId;\n  const checklistId = doc.checklistId;\n  const checkList = ReactiveCache.getChecklist(checklistId);\n  if (checkList.isFinished()) {\n    const act = {\n      userId,\n      activityType: 'completeChecklist',\n      cardId: doc.cardId,\n      boardId,\n      checklistId: doc.checklistId,\n      checklistName: checkList.title,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    };\n    Activities.insert(act);\n  }\n}\n\nfunction publishChekListUncompleted(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  const boardId = card.boardId;\n  const checklistId = doc.checklistId;\n  const checkList = ReactiveCache.getChecklist(checklistId);\n  // BUGS in IFTTT Rules: https://github.com/wekan/wekan/issues/1972\n  //       Currently in checklist all are set as uncompleted/not checked,\n  //       IFTTT Rule does not move card to other list.\n  //       If following line is negated/changed to:\n  //         if(!checkList.isFinished()){\n  //       then unchecking of any checkbox will move card to other list,\n  //       even when all checkboxes are not yet unchecked.\n  //       What is correct code for only moving when all in list is unchecked?\n  // TIPS: Finding  files, ignoring some directories with grep -v:\n  //         cd wekan\n  //         find . | xargs grep 'count' -sl | grep -v .meteor | grep -v node_modules | grep -v .build\n  //       Maybe something related here?\n  //         wekan/client/components/rules/triggers/checklistTriggers.js\n  if (checkList.isFinished()) {\n    const act = {\n      userId,\n      activityType: 'uncompleteChecklist',\n      cardId: doc.cardId,\n      boardId,\n      checklistId: doc.checklistId,\n      checklistName: checkList.title,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    };\n    Activities.insert(act);\n  }\n}\n\n// Activities\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    ChecklistItems._collection.createIndex({ modifiedAt: -1 });\n    ChecklistItems._collection.createIndex({ checklistId: 1 });\n    ChecklistItems._collection.createIndex({ cardId: 1 });\n  });\n\n  ChecklistItems.after.update((userId, doc, fieldNames) => {\n    publishCheckActivity(userId, doc);\n    publishChekListCompleted(userId, doc, fieldNames);\n  });\n\n  ChecklistItems.before.update((userId, doc, fieldNames) => {\n    publishChekListUncompleted(userId, doc, fieldNames);\n  });\n\n  ChecklistItems.after.insert((userId, doc) => {\n    itemCreation(userId, doc);\n  });\n\n  ChecklistItems.before.remove((userId, doc) => {\n    itemRemover(userId, doc);\n    const card = ReactiveCache.getCard(doc.cardId);\n    const boardId = card.boardId;\n    Activities.insert({\n      userId,\n      activityType: 'removedChecklistItem',\n      cardId: doc.cardId,\n      boardId,\n      checklistId: doc.checklistId,\n      checklistItemId: doc._id,\n      checklistItemName: doc.title,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    });\n  });\n}\n\nif (Meteor.isServer) {\n  /**\n   * @operation get_checklist_item\n   * @tag Checklists\n   * @summary Get a checklist item\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} checklistId the checklist ID\n   * @param {string} itemId the ID of the item\n   * @return_type ChecklistItems\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId/items/:itemId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramItemId = req.params.itemId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const checklistItem = ReactiveCache.getChecklistItem(paramItemId);\n      if (checklistItem) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: checklistItem,\n        });\n      } else {\n        JsonRoutes.sendResult(res, {\n          code: 500,\n        });\n      }\n    },\n  );\n\n  /**\n  * @operation new_checklist_item\n  * @summary add a new item to a checklist\n  *\n  * @param {string} boardId the board ID\n  * @param {string} cardId the card ID\n  * @param {string} checklistId the ID of the checklist\n  * @param {string} title the title of the new item\n  * @return_type {_id: string}\n  */\n\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId/items',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramChecklistId = req.params.checklistId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const checklist = ReactiveCache.getChecklist({\n        _id: paramChecklistId,\n        cardId: paramCardId,\n      });\n      if (checklist) {\n        const id = ChecklistItems.insert({\n          cardId: paramCardId,\n          checklistId: paramChecklistId,\n          title: req.body.title,\n          isFinished: false,\n          sort: 0,\n        });\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: {\n            _id: id,\n          },\n        });\n      } else {\n        JsonRoutes.sendResult(res, {\n          code: 404,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation edit_checklist_item\n   * @tag Checklists\n   * @summary Edit a checklist item\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} checklistId the checklist ID\n   * @param {string} itemId the ID of the item\n   * @param {string} [isFinished] is the item checked?\n   * @param {string} [title] the new text of the item\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'PUT',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId/items/:itemId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramItemId = req.params.itemId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      function isTrue(data) {\n        try {\n          return data.toLowerCase() === 'true';\n        } catch (error) {\n          return data;\n        }\n      }\n\n      if (req.body.hasOwnProperty('isFinished')) {\n        ChecklistItems.direct.update(\n          { _id: paramItemId },\n          { $set: { isFinished: isTrue(req.body.isFinished) } },\n        );\n      }\n      if (req.body.hasOwnProperty('title')) {\n        ChecklistItems.direct.update(\n          { _id: paramItemId },\n          { $set: { title: req.body.title } },\n        );\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramItemId,\n        },\n      });\n    },\n  );\n\n  /**\n   * @operation delete_checklist_item\n   * @tag Checklists\n   * @summary Delete a checklist item\n   *\n   * @description Note: this operation can't be reverted.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} checklistId the checklist ID\n   * @param {string} itemId the ID of the item to be removed\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId/items/:itemId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramItemId = req.params.itemId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      ChecklistItems.direct.remove({ _id: paramItemId });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramItemId,\n        },\n      });\n    },\n  );\n}\n\nexport default ChecklistItems;\n","import { ReactiveCache, ReactiveMiniMongoIndex } from '/imports/reactiveCache';\n\nChecklists = new Mongo.Collection('checklists');\n\n/**\n * A Checklist\n */\nChecklists.attachSchema(\n  new SimpleSchema({\n    cardId: {\n      /**\n       * The ID of the card the checklist is in\n       */\n      type: String,\n    },\n    title: {\n      /**\n       * the title of the checklist\n       */\n      type: String,\n      defaultValue: 'Checklist',\n    },\n    finishedAt: {\n      /**\n       * When was the checklist finished\n       */\n      type: Date,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * Creation date of the checklist\n       */\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    sort: {\n      /**\n       * sorting value of the checklist\n       */\n      type: Number,\n      decimal: true,\n    },\n    hideCheckedChecklistItems: {\n      /**\n       * hide the checked checklist-items?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    hideAllChecklistItems: {\n      /**\n       * hide all checklist items ?\n       */\n      type: Boolean,\n      optional: true,\n    },\n  }),\n);\n\nChecklists.helpers({\n  copy(newCardId) {\n    let copyObj = Object.assign({}, this);\n    delete copyObj._id;\n    copyObj.cardId = newCardId;\n    const newChecklistId = Checklists.insert(copyObj);\n    ReactiveCache.getChecklistItems({ checklistId: this._id }).forEach(function(\n      item,\n    ) {\n      item._id = null;\n      item.checklistId = newChecklistId;\n      item.cardId = newCardId;\n      ChecklistItems.insert(item);\n    });\n  },\n\n  itemCount() {\n    const ret = this.items().length;\n    return ret;\n  },\n  items() {\n    const ret = ReactiveMiniMongoIndex.getChecklistItemsWithChecklistId(this._id, {}, { sort: ['sort'] });\n    return ret;\n\n  },\n  firstItem() {\n    const ret = _.first(this.items());\n    return ret;\n  },\n  lastItem() {\n    const ret = _.last(this.items());\n    return ret;\n  },\n  finishedCount() {\n    const ret = this.items().filter(_item => _item.isFinished).length;\n    return ret;\n  },\n  /** returns the finished percent of the checklist */\n  finishedPercent() {\n    const count = this.itemCount();\n    const checklistItemsFinished = this.finishedCount();\n\n    let ret = 0;\n\n    if (count > 0) {\n      ret = Math.round(checklistItemsFinished / count * 100);\n    }\n    return ret;\n  },\n  isFinished() {\n    let ret = this.hideAllChecklistItems;\n    if (!ret) {\n      ret = 0 !== this.itemCount() && this.itemCount() === this.finishedCount();\n    }\n    return ret;\n  },\n  showChecklist(hideFinishedChecklistIfItemsAreHidden) {\n    let ret = true;\n    if (this.isFinished() && hideFinishedChecklistIfItemsAreHidden === true && (this.hideCheckedChecklistItems === true || this.hideAllChecklistItems)) {\n      ret = false;\n    }\n    return ret;\n  },\n  checkAllItems() {\n    const checkItems = ReactiveCache.getChecklistItems({ checklistId: this._id });\n    checkItems.forEach(function(item) {\n      item.check();\n    });\n  },\n  uncheckAllItems() {\n    const checkItems = ReactiveCache.getChecklistItems({ checklistId: this._id });\n    checkItems.forEach(function(item) {\n      item.uncheck();\n    });\n  },\n  itemIndex(itemId) {\n    const items = ReactiveCache.getChecklist({ _id: this._id }).items;\n    return _.pluck(items, '_id').indexOf(itemId);\n  },\n});\n\nChecklists.allow({\n  insert(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardMemberByCard(userId, ReactiveCache.getCard(doc.cardId));\n  },\n  fetch: ['userId', 'cardId'],\n});\n\nChecklists.before.insert((userId, doc) => {\n  doc.createdAt = new Date();\n  if (!doc.userId) {\n    doc.userId = userId;\n  }\n});\n\nChecklists.mutations({\n  setTitle(title) {\n    return { $set: { title } };\n  },\n  /** move the checklist to another card\n   * @param newCardId move the checklist to this cardId\n   */\n  move(newCardId) {\n    // update every activity\n    ReactiveCache.getActivities(\n      {checklistId: this._id}\n    ).forEach(activity => {\n      Activities.update(activity._id, {\n        $set: {\n          cardId: newCardId,\n        },\n      });\n    });\n    // update every checklist-item\n    ReactiveCache.getChecklistItems(\n      {checklistId: this._id}\n    ).forEach(checklistItem => {\n      ChecklistItems.update(checklistItem._id, {\n        $set: {\n          cardId: newCardId,\n        },\n      });\n    });\n    // update the checklist itself\n    return {\n      $set: {\n        cardId: newCardId,\n      },\n    };\n  },\n  toggleHideCheckedChecklistItems() {\n    return {\n      $set: {\n        hideCheckedChecklistItems: !this.hideCheckedChecklistItems,\n      }\n    };\n  },\n  toggleHideAllChecklistItems() {\n    return {\n      $set: {\n        hideAllChecklistItems: !this.hideAllChecklistItems,\n      }\n    };\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Checklists._collection.createIndex({ modifiedAt: -1 });\n    Checklists._collection.createIndex({ cardId: 1, createdAt: 1 });\n  });\n\n  Checklists.after.insert((userId, doc) => {\n    const card = ReactiveCache.getCard(doc.cardId);\n    Activities.insert({\n      userId,\n      activityType: 'addChecklist',\n      cardId: doc.cardId,\n      boardId: card.boardId,\n      checklistId: doc._id,\n      checklistName: doc.title,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    });\n  });\n\n  Checklists.before.remove((userId, doc) => {\n    const activities = ReactiveCache.getActivities({ checklistId: doc._id });\n    const card = ReactiveCache.getCard(doc.cardId);\n    if (activities) {\n      activities.forEach(activity => {\n        Activities.remove(activity._id);\n      });\n    }\n    Activities.insert({\n      userId,\n      activityType: 'removeChecklist',\n      cardId: doc.cardId,\n      boardId: ReactiveCache.getCard(doc.cardId).boardId,\n      checklistId: doc._id,\n      checklistName: doc.title,\n      listId: card.listId,\n      swimlaneId: card.swimlaneId,\n    });\n  });\n}\n\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_checklists\n   * @summary Get the list of checklists attached to a card\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @return_type [{_id: string,\n   *                title: string}]\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/cards/:cardId/checklists',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const checklists = ReactiveCache.getChecklists({ cardId: paramCardId }).map(function(\n        doc,\n      ) {\n        return {\n          _id: doc._id,\n          title: doc.title,\n        };\n      });\n      if (checklists) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: checklists,\n        });\n      } else {\n        JsonRoutes.sendResult(res, {\n          code: 500,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation get_checklist\n   * @summary Get a checklist\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} checklistId the ID of the checklist\n   * @return_type {cardId: string,\n   *               title: string,\n   *               finishedAt: string,\n   *               createdAt: string,\n   *               sort: number,\n   *               items: [{_id: string,\n   *                        title: string,\n   *                        isFinished: boolean}]}\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramChecklistId = req.params.checklistId;\n      const paramCardId = req.params.cardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const checklist = ReactiveCache.getChecklist({\n        _id: paramChecklistId,\n        cardId: paramCardId,\n      });\n      if (checklist) {\n        checklist.items = ReactiveCache.getChecklistItems({\n          checklistId: checklist._id,\n        }).map(function(doc) {\n          return {\n            _id: doc._id,\n            title: doc.title,\n            isFinished: doc.isFinished,\n          };\n        });\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: checklist,\n        });\n      } else {\n        JsonRoutes.sendResult(res, {\n          code: 500,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation new_checklist\n   * @summary create a new checklist\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} title the title of the new checklist\n   * @param {string} [items] the list of items on the new checklist\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/cards/:cardId/checklists',\n    function(req, res) {\n      // Check user is logged in\n      //Authentication.checkLoggedIn(req.userId);\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      // Check user has permission to add checklist to the card\n      const board = ReactiveCache.getBoard(paramBoardId);\n      const addPermission = allowIsBoardMemberCommentOnly(req.userId, board);\n      Authentication.checkAdminOrCondition(req.userId, addPermission);\n      const paramCardId = req.params.cardId;\n      const id = Checklists.insert({\n        title: req.body.title,\n        cardId: paramCardId,\n        sort: 0,\n      });\n      if (id) {\n        let items = req.body.items || [];\n        if (_.isString(items)) {\n          if (items === '') {\n            items = [];\n          } else {\n            items = [items];\n          }\n        }\n        items.forEach(function(item, idx) {\n          ChecklistItems.insert({\n            cardId: paramCardId,\n            checklistId: id,\n            title: item,\n            sort: idx,\n          });\n        });\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: {\n            _id: id,\n          },\n        });\n      } else {\n        JsonRoutes.sendResult(res, {\n          code: 400,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation delete_checklist\n   * @summary Delete a checklist\n   *\n   * @description The checklist will be removed, not put in the recycle bin.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} cardId the card ID\n   * @param {string} checklistId the ID of the checklist to remove\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/cards/:cardId/checklists/:checklistId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramChecklistId = req.params.checklistId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      Checklists.remove({ _id: paramChecklistId });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramChecklistId,\n        },\n      });\n    },\n  );\n}\n\nexport default Checklists;\n","Counters = new Mongo.Collection('counters');\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { isEmptyObject } from 'jquery';\nimport Boards from './boards';\n\nexport class CsvCreator {\n  constructor(data) {\n    // date to be used for timestamps during import\n    this._nowDate = new Date();\n    // index to help keep track of what information a column stores\n    // each row represents a card\n    this.fieldIndex = {};\n    this.lists = {};\n    // Map of members using username => wekanid\n    this.members = data.membersMapping ? data.membersMapping : {};\n    this.swimlane = null;\n  }\n\n  /**\n   * If dateString is provided,\n   * return the Date it represents.\n   * If not, will return the date when it was first called.\n   * This is useful for us, as we want all import operations to\n   * have the exact same date for easier later retrieval.\n   *\n   * @param {String} dateString a properly formatted Date\n   */\n  _now(dateString) {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    if (!this._nowDate) {\n      this._nowDate = new Date();\n    }\n    return this._nowDate;\n  }\n\n  _user(wekanUserId) {\n    if (wekanUserId && this.members[wekanUserId]) {\n      return this.members[wekanUserId];\n    }\n    return Meteor.userId();\n  }\n\n  /**\n   * Map the header row titles to an index to help assign proper values to the cards' fields\n   * Valid headers (name of card fields):\n   * title, description, status, owner, member, label, due date, start date, finish date, created at, updated at\n   * Some header aliases can also be accepted.\n   * Headers are NOT case-sensitive.\n   *\n   * @param {Array} headerRow array from row of headers of imported CSV/TSV for cards\n   */\n  mapHeadertoCardFieldIndex(headerRow) {\n    const index = {};\n    index.customFields = [];\n    for (let i = 0; i < headerRow.length; i++) {\n      switch (headerRow[i].trim().toLowerCase()) {\n        case 'title':\n          index.title = i;\n          break;\n        case 'description':\n          index.description = i;\n          break;\n        case 'stage':\n        case 'status':\n        case 'state':\n          index.stage = i;\n          break;\n        case 'owner':\n          index.owner = i;\n          break;\n        case 'members':\n        case 'member':\n          index.members = i;\n          break;\n        case 'labels':\n        case 'label':\n          index.labels = i;\n          break;\n        case 'due date':\n        case 'deadline':\n        case 'due at':\n          index.dueAt = i;\n          break;\n        case 'start date':\n        case 'start at':\n          index.startAt = i;\n          break;\n        case 'finish date':\n        case 'end at':\n          index.endAt = i;\n          break;\n        case 'creation date':\n        case 'created at':\n          index.createdAt = i;\n          break;\n        case 'update date':\n        case 'updated at':\n        case 'modified at':\n        case 'modified on':\n          index.modifiedAt = i;\n          break;\n      }\n      if (headerRow[i].toLowerCase().startsWith('customfield')) {\n        if (headerRow[i].split('-')[2] === 'dropdown') {\n          index.customFields.push({\n            name: headerRow[i].split('-')[1],\n            type: headerRow[i].split('-')[2],\n            options: headerRow[i].split('-')[3].split('/'),\n            position: i,\n          });\n        } else if (headerRow[i].split('-')[2] === 'currency') {\n          index.customFields.push({\n            name: headerRow[i].split('-')[1],\n            type: headerRow[i].split('-')[2],\n            currencyCode: headerRow[i].split('-')[3],\n            position: i,\n          });\n        } else {\n          index.customFields.push({\n            name: headerRow[i].split('-')[1],\n            type: headerRow[i].split('-')[2],\n            position: i,\n          });\n        }\n      }\n    }\n    this.fieldIndex = index;\n  }\n  createCustomFields(boardId) {\n    this.fieldIndex.customFields.forEach(customField => {\n      let settings = {};\n      if (customField.type === 'dropdown') {\n        settings = {\n          dropdownItems: customField.options.map(option => {\n            return { _id: Random.id(6), name: option };\n          }),\n        };\n      } else if (customField.type === 'currency') {\n        settings = {\n          currencyCode: customField.currencyCode,\n        };\n      } else {\n        settings = {};\n      }\n      const id = CustomFields.direct.insert({\n        name: customField.name,\n        type: customField.type,\n        settings,\n        showOnCard: false,\n        automaticallyOnCard: false,\n        alwaysOnCard: false,\n        showLabelOnMiniCard: false,\n        boardIds: [boardId],\n      });\n      customField.id = id;\n      customField.settings = settings;\n    });\n  }\n\n  createBoard(csvData) {\n    const boardToCreate = {\n      archived: false,\n      color: 'belize',\n      createdAt: this._now(),\n      labels: [],\n      members: [\n        {\n          userId: Meteor.userId(),\n          wekanId: Meteor.userId(),\n          isActive: true,\n          isAdmin: true,\n          isNoComments: false,\n          isCommentOnly: false,\n          swimlaneId: false,\n        },\n      ],\n      modifiedAt: this._now(),\n      //default is private, should inform user.\n      permission: 'private',\n      slug: 'board',\n      stars: 0,\n      title: `Imported Board ${this._now()}`,\n    };\n\n    // create labels\n    const labelsToCreate = new Set();\n    for (let i = 1; i < csvData.length; i++) {\n      if (csvData[i][this.fieldIndex.labels]) {\n        for (const importedLabel of csvData[i][this.fieldIndex.labels].split(\n          ' ',\n        )) {\n          if (importedLabel && importedLabel.length > 0) {\n            labelsToCreate.add(importedLabel);\n          }\n        }\n      }\n    }\n    for (const label of labelsToCreate) {\n      let labelName, labelColor;\n      if (label.indexOf('-') > -1) {\n        labelName = label.split('-')[0];\n        labelColor = label.split('-')[1];\n      } else {\n        labelName = label;\n      }\n      const labelToCreate = {\n        _id: Random.id(6),\n        color: labelColor ? labelColor : 'black',\n        name: labelName,\n      };\n      boardToCreate.labels.push(labelToCreate);\n    }\n\n    const boardId = Boards.direct.insert(boardToCreate);\n    Boards.direct.update(boardId, {\n      $set: {\n        modifiedAt: this._now(),\n      },\n    });\n    // log activity\n    Activities.direct.insert({\n      activityType: 'importBoard',\n      boardId,\n      createdAt: this._now(),\n      source: {\n        id: boardId,\n        system: 'CSV/TSV',\n      },\n      // We attribute the import to current user,\n      // not the author from the original object.\n      userId: this._user(),\n    });\n    return boardId;\n  }\n\n  createSwimlanes(boardId) {\n    const swimlaneToCreate = {\n      archived: false,\n      boardId,\n      createdAt: this._now(),\n      title: 'Default',\n      sort: 1,\n    };\n    const swimlaneId = Swimlanes.direct.insert(swimlaneToCreate);\n    Swimlanes.direct.update(swimlaneId, { $set: { updatedAt: this._now() } });\n    this.swimlane = swimlaneId;\n  }\n\n  createLists(csvData, boardId) {\n    let numOfCreatedLists = 0;\n    for (let i = 1; i < csvData.length; i++) {\n      const listToCreate = {\n        archived: false,\n        boardId,\n        createdAt: this._now(),\n      };\n      if (csvData[i][this.fieldIndex.stage]) {\n        const existingList = ReactiveCache.getLists({\n          title: csvData[i][this.fieldIndex.stage],\n          boardId,\n        });\n        if (existingList.length > 0) {\n          continue;\n        } else {\n          listToCreate.title = csvData[i][this.fieldIndex.stage];\n        }\n      } else listToCreate.title = `Imported List ${this._now()}`;\n\n      const listId = Lists.direct.insert(listToCreate);\n      this.lists[csvData[i][this.fieldIndex.stage]] = listId;\n      numOfCreatedLists++;\n      Lists.direct.update(listId, {\n        $set: {\n          updatedAt: this._now(),\n          sort: numOfCreatedLists,\n        },\n      });\n    }\n  }\n\n  createCards(csvData, boardId) {\n    for (let i = 1; i < csvData.length; i++) {\n      const cardToCreate = {\n        archived: false,\n        boardId,\n        dateLastActivity: this._now(),\n        description: csvData[i][this.fieldIndex.description],\n        listId: this.lists[csvData[i][this.fieldIndex.stage]],\n        swimlaneId: this.swimlane,\n        sort: -1,\n        title: csvData[i][this.fieldIndex.title],\n        userId: this._user(),\n        spentTime: null,\n        labelIds: [],\n      };\n      if (csvData[i][this.fieldIndex.createdAt] !== ' ' || '') {\n        if (csvData[i][this.fieldIndex.createdAt].length !== 0) {\n        cardToCreate.createdAt = this._now(new Date(csvData[i][this.fieldIndex.createdAt]))\n        }\n      }\n      if (csvData[i][this.fieldIndex.startAt] !== ' ' || '') {\n        if (csvData[i][this.fieldIndex.startAt].length !== 0) {\n        cardToCreate.startAt = this._now(new Date(csvData[i][this.fieldIndex.startAt]))\n        }\n      }\n      if (csvData[i][this.fieldIndex.dueAt] !== ' ' || '') {\n        if (csvData[i][this.fieldIndex.dueAt].length !== 0) {\n        cardToCreate.dueAt = this._now(new Date(csvData[i][this.fieldIndex.dueAt]))\n        }\n      }\n      if (csvData[i][this.fieldIndex.endAt] !== ' ' || '') {\n        if (csvData[i][this.fieldIndex.endAt].length !== 0) {\n        cardToCreate.endAt = this._now(new Date(csvData[i][this.fieldIndex.endAt]))\n        }\n      }\n      if (csvData[i][this.fieldIndex.modifiedAt] !== ' ' || '') {\n        if (csvData[i][this.fieldIndex.modifiedAt].length !== 0) {\n        cardToCreate.modifiedAt = this._now(new Date(csvData[i][this.fieldIndex.modifiedAt]))\n        }\n      }\n      // add the labels\n      if (csvData[i][this.fieldIndex.labels]) {\n        const board = ReactiveCache.getBoard(boardId);\n        for (const importedLabel of csvData[i][this.fieldIndex.labels].split(\n          ' ',\n        )) {\n          if (importedLabel && importedLabel.length > 0) {\n            let labelToApply;\n            if (importedLabel.indexOf('-') === -1) {\n              labelToApply = board.getLabel(importedLabel, 'black');\n            } else {\n              labelToApply = board.getLabel(\n                importedLabel.split('-')[0],\n                importedLabel.split('-')[1],\n              );\n            }\n            cardToCreate.labelIds.push(labelToApply._id);\n          }\n        }\n      }\n      // add the members\n      if (csvData[i][this.fieldIndex.members]) {\n        const wekanMembers = [];\n        for (const importedMember of csvData[i][this.fieldIndex.members].split(\n          ' ',\n        )) {\n          if (this.members[importedMember]) {\n            const wekanId = this.members[importedMember];\n            if (!wekanMembers.find(wId => wId === wekanId)) {\n              wekanMembers.push(wekanId);\n            }\n          }\n        }\n        if (wekanMembers.length > 0) {\n          cardToCreate.members = wekanMembers;\n        }\n      }\n      // add the custom fields\n      if (this.fieldIndex.customFields.length > 0) {\n        const customFields = [];\n        this.fieldIndex.customFields.forEach(customField => {\n          if (csvData[i][customField.position] !== ' ') {\n            if (customField.type === 'dropdown') {\n              customFields.push({\n                _id: customField.id,\n                value: customField.settings.dropdownItems.find(\n                  ({ name }) => name === csvData[i][customField.position],\n                )._id,\n              });\n            } else {\n              customFields.push({\n                _id: customField.id,\n                value: csvData[i][customField.position],\n              });\n            }\n          }\n          cardToCreate.customFields = customFields;\n        });\n      }\n      Cards.direct.insert(cardToCreate);\n    }\n  }\n\n  create(board, currentBoardId) {\n    const isSandstorm =\n      Meteor.settings &&\n      Meteor.settings.public &&\n      Meteor.settings.public.sandstorm;\n    if (isSandstorm && currentBoardId) {\n      const currentBoard = ReactiveCache.getBoard(currentBoardId);\n      currentBoard.archive();\n    }\n    this.mapHeadertoCardFieldIndex(board[0]);\n    const boardId = this.createBoard(board);\n    this.createLists(board, boardId);\n    this.createSwimlanes(boardId);\n    this.createCustomFields(boardId);\n    this.createCards(board, boardId);\n    return boardId;\n  }\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nCustomFields = new Mongo.Collection('customFields');\n\n/**\n * A custom field on a card in the board\n */\nCustomFields.attachSchema(\n  new SimpleSchema({\n    boardIds: {\n      /**\n       * the ID of the board\n       */\n      type: [String],\n    },\n    name: {\n      /**\n       * name of the custom field\n       */\n      type: String,\n    },\n    type: {\n      /**\n       * type of the custom field\n       */\n      type: String,\n      allowedValues: [\n        'text',\n        'number',\n        'date',\n        'dropdown',\n        'checkbox',\n        'currency',\n        'stringtemplate',\n      ],\n    },\n    settings: {\n      /**\n       * settings of the custom field\n       */\n      type: Object,\n    },\n    'settings.currencyCode': {\n      type: String,\n      optional: true,\n    },\n    'settings.dropdownItems': {\n      /**\n       * list of drop down items objects\n       */\n      type: [Object],\n      optional: true,\n    },\n    'settings.dropdownItems.$': {\n      type: new SimpleSchema({\n        _id: {\n          /**\n           * ID of the drop down item\n           */\n          type: String,\n        },\n        name: {\n          /**\n           * name of the drop down item\n           */\n          type: String,\n        },\n      }),\n    },\n    'settings.stringtemplateFormat': {\n      type: String,\n      optional: true,\n    },\n    'settings.stringtemplateSeparator': {\n      type: String,\n      optional: true,\n    },\n    showOnCard: {\n      /**\n       * should we show on the cards this custom field\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    automaticallyOnCard: {\n      /**\n       * should the custom fields automatically be added on cards?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    alwaysOnCard: {\n      /**\n       * should the custom field be automatically added to all cards?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    showLabelOnMiniCard: {\n      /**\n       * should the label of the custom field be shown on minicards?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    showSumAtTopOfList: {\n      /**\n       * should the sum of the custom fields be shown at top of list?\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nCustomFields.addToAllCards = cf => {\n  Cards.update(\n    {\n      boardId: { $in: cf.boardIds },\n      customFields: { $not: { $elemMatch: { _id: cf._id } } },\n    },\n    {\n      $push: { customFields: { _id: cf._id, value: null } },\n    },\n    { multi: true },\n  );\n};\n\nCustomFields.mutations({\n  addBoard(boardId) {\n    if (boardId) {\n      return {\n        $push: {\n          boardIds: boardId,\n        },\n      };\n    } else {\n      return null;\n    }\n  },\n});\n\nCustomFields.allow({\n  insert(userId, doc) {\n    return allowIsAnyBoardMember(\n      userId,\n      ReactiveCache.getBoards({\n        _id: { $in: doc.boardIds },\n      }),\n    );\n  },\n  update(userId, doc) {\n    return allowIsAnyBoardMember(\n      userId,\n      ReactiveCache.getBoards({\n        _id: { $in: doc.boardIds },\n      }),\n    );\n  },\n  remove(userId, doc) {\n    return allowIsAnyBoardMember(\n      userId,\n      ReactiveCache.getBoards({\n        _id: { $in: doc.boardIds },\n      }),\n    );\n  },\n  fetch: ['userId', 'boardIds'],\n});\n\n// not sure if we need this?\n//CustomFields.hookOptions.after.update = { fetchPrevious: false };\n\nfunction customFieldCreation(userId, doc) {\n  Activities.insert({\n    userId,\n    activityType: 'createCustomField',\n    boardId: doc.boardIds[0], // We are creating a customField, it has only one boardId\n    customFieldId: doc._id,\n  });\n}\n\nfunction customFieldDeletion(userId, doc) {\n  Activities.insert({\n    userId,\n    activityType: 'deleteCustomField',\n    boardId: doc.boardIds[0], // We are creating a customField, it has only one boardId\n    customFieldId: doc._id,\n  });\n}\n\n// This has some bug, it does not show edited customField value at Outgoing Webhook,\n// instead it shows undefined, and no listId and swimlaneId.\nfunction customFieldEdit(userId, doc) {\n  const card = ReactiveCache.getCard(doc.cardId);\n  const customFieldValue = ReactiveCache.getActivity({ customFieldId: doc._id }).value;\n  Activities.insert({\n    userId,\n    activityType: 'setCustomField',\n    boardId: doc.boardIds[0], // We are creating a customField, it has only one boardId\n    customFieldId: doc._id,\n    customFieldValue,\n    listId: doc.listId,\n    swimlaneId: doc.swimlaneId,\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    CustomFields._collection.createIndex({ modifiedAt: -1 });\n    CustomFields._collection.createIndex({ boardIds: 1 });\n  });\n\n  CustomFields.after.insert((userId, doc) => {\n    customFieldCreation(userId, doc);\n\n    if (doc.alwaysOnCard) {\n      CustomFields.addToAllCards(doc);\n    }\n  });\n\n  CustomFields.before.update((userId, doc, fieldNames, modifier) => {\n    if (_.contains(fieldNames, 'boardIds') && modifier.$pull) {\n      Cards.update(\n        { boardId: modifier.$pull.boardIds, 'customFields._id': doc._id },\n        { $pull: { customFields: { _id: doc._id } } },\n        { multi: true },\n      );\n      customFieldEdit(userId, doc);\n      Activities.remove({\n        customFieldId: doc._id,\n        boardId: modifier.$pull.boardIds,\n        listId: doc.listId,\n        swimlaneId: doc.swimlaneId,\n      });\n    } else if (_.contains(fieldNames, 'boardIds') && modifier.$push) {\n      Activities.insert({\n        userId,\n        activityType: 'createCustomField',\n        boardId: modifier.$push.boardIds,\n        customFieldId: doc._id,\n      });\n    }\n  });\n\n  CustomFields.after.update((userId, doc) => {\n    if (doc.alwaysOnCard) {\n      CustomFields.addToAllCards(doc);\n    }\n  });\n  CustomFields.before.remove((userId, doc) => {\n    customFieldDeletion(userId, doc);\n    Activities.remove({\n      customFieldId: doc._id,\n    });\n\n    Cards.update(\n      { boardId: { $in: doc.boardIds }, 'customFields._id': doc._id },\n      { $pull: { customFields: { _id: doc._id } } },\n      { multi: true },\n    );\n  });\n}\n\n//CUSTOM FIELD REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_custom_fields\n   * @summary Get the list of Custom Fields attached to a board\n   *\n   * @param {string} boardID the ID of the board\n   * @return_type [{_id: string,\n   *                name: string,\n   *                type: string}]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/custom-fields', function(\n    req,\n    res,\n  ) {\n    const paramBoardId = req.params.boardId;\n    Authentication.checkBoardAccess(req.userId, paramBoardId);\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: ReactiveCache.getCustomFields({ boardIds: { $in: [paramBoardId] } }).map(\n        function(cf) {\n          return {\n            _id: cf._id,\n            name: cf.name,\n            type: cf.type,\n          };\n        },\n      ),\n    });\n  });\n\n  /**\n   * @operation get_custom_field\n   * @summary Get a Custom Fields attached to a board\n   *\n   * @param {string} boardID the ID of the board\n   * @param {string} customFieldId the ID of the custom field\n   * @return_type [{_id: string,\n   *                boardIds: string}]\n   */\n  JsonRoutes.add(\n    'GET',\n    '/api/boards/:boardId/custom-fields/:customFieldId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      const paramCustomFieldId = req.params.customFieldId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getCustomField({\n          _id: paramCustomFieldId,\n          boardIds: { $in: [paramBoardId] },\n        }),\n      });\n    },\n  );\n\n  /**\n   * @operation new_custom_field\n   * @summary Create a Custom Field\n   *\n   * @param {string} boardID the ID of the board\n   * @param {string} name the name of the custom field\n   * @param {string} type the type of the custom field\n   * @param {string} settings the settings object of the custom field\n   * @param {boolean} showOnCard should we show the custom field on cards?\n   * @param {boolean} automaticallyOnCard should the custom fields automatically be added on cards?\n   * @param {boolean} showLabelOnMiniCard should the label of the custom field be shown on minicards?\n   * @param {boolean} showSumAtTopOfList should the sum of the custom fields be shown at top of list?\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/custom-fields', function(\n    req,\n    res,\n  ) {\n    const paramBoardId = req.params.boardId;\n    Authentication.checkBoardAccess(req.userId, paramBoardId);\n    const board = ReactiveCache.getBoard(paramBoardId);\n    const id = CustomFields.direct.insert({\n      name: req.body.name,\n      type: req.body.type,\n      settings: req.body.settings,\n      showOnCard: req.body.showOnCard,\n      automaticallyOnCard: req.body.automaticallyOnCard,\n      showLabelOnMiniCard: req.body.showLabelOnMiniCard,\n      showSumAtTopOfList: req.body.showSumAtTopOfList,\n      boardIds: [board._id],\n    });\n\n    const customField = ReactiveCache.getCustomField({\n      _id: id,\n      boardIds: { $in: [paramBoardId] },\n    });\n    customFieldCreation(req.body.authorId, customField);\n\n    JsonRoutes.sendResult(res, {\n      code: 200,\n      data: {\n        _id: id,\n      },\n    });\n  });\n\n  /**\n   * @operation edit_custom_field\n   * @summary Update a Custom Field\n   *\n   * @param {string} name the name of the custom field\n   * @param {string} type the type of the custom field\n   * @param {string} settings the settings object of the custom field\n   * @param {boolean} showOnCard should we show the custom field on cards\n   * @param {boolean} automaticallyOnCard should the custom fields automatically be added on cards\n   * @param {boolean} showLabelOnMiniCard should the label of the custom field be shown on minicards\n   * @param {boolean} showSumAtTopOfList should the sum of the custom fields be shown at top of list\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'PUT',\n    '/api/boards/:boardId/custom-fields/:customFieldId',\n    (req, res) => {\n      const paramBoardId = req.params.boardId;\n      const paramFieldId = req.params.customFieldId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      if (req.body.hasOwnProperty('name')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { name: req.body.name } },\n        );\n      }\n      if (req.body.hasOwnProperty('type')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { type: req.body.type } },\n        );\n      }\n      if (req.body.hasOwnProperty('settings')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { settings: req.body.settings } },\n        );\n      }\n      if (req.body.hasOwnProperty('showOnCard')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { showOnCard: req.body.showOnCard } },\n        );\n      }\n      if (req.body.hasOwnProperty('automaticallyOnCard')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { automaticallyOnCard: req.body.automaticallyOnCard } },\n        );\n      }\n      if (req.body.hasOwnProperty('alwaysOnCard')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { alwaysOnCard: req.body.alwaysOnCard } },\n        );\n      }\n      if (req.body.hasOwnProperty('showLabelOnMiniCard')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { showLabelOnMiniCard: req.body.showLabelOnMiniCard } },\n        );\n      }\n\n      if (req.body.hasOwnProperty('showSumAtTopOfList')) {\n        CustomFields.direct.update(\n          { _id: paramFieldId },\n          { $set: { showSumAtTopOfList: req.body.showSumAtTopOfList } },\n        );\n      }\n\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: { _id: paramFieldId },\n      });\n    },\n  );\n\n  /**\n   * @operation add_custom_field_dropdown_items\n   * @summary Update a Custom Field's dropdown items\n   *\n   * @param {string} [items] names of the custom field\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/custom-fields/:customFieldId/dropdown-items',\n    (req, res) => {\n      const paramBoardId = req.params.boardId;\n      const paramCustomFieldId = req.params.customFieldId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const paramItems = req.body.items;\n\n      if (req.body.hasOwnProperty('items')) {\n        if (Array.isArray(paramItems)) {\n          CustomFields.direct.update(\n            { _id: paramCustomFieldId },\n            {\n              $push: {\n                'settings.dropdownItems': {\n                  $each: paramItems\n                    .filter(name => typeof name === 'string')\n                    .map(name => ({\n                      _id: Random.id(6),\n                      name,\n                    })),\n                },\n              },\n            },\n          );\n        }\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: { _id: paramCustomFieldId },\n      });\n    },\n  );\n\n  /**\n   * @operation edit_custom_field_dropdown_item\n   * @summary Update a Custom Field's dropdown item\n   *\n   * @param {string} name names of the custom field\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'PUT',\n    '/api/boards/:boardId/custom-fields/:customFieldId/dropdown-items/:dropdownItemId',\n    (req, res) => {\n      const paramBoardId = req.params.boardId;\n      const paramDropdownItemId = req.params.dropdownItemId;\n      const paramCustomFieldId = req.params.customFieldId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const paramName = req.body.name;\n\n      if (req.body.hasOwnProperty('name')) {\n        CustomFields.direct.update(\n          {\n            _id: paramCustomFieldId,\n            'settings.dropdownItems._id': paramDropdownItemId,\n          },\n          {\n            $set: {\n              'settings.dropdownItems.$': {\n                _id: paramDropdownItemId,\n                name: paramName,\n              },\n            },\n          },\n        );\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: { _id: paramDropdownItemId },\n      });\n    },\n  );\n\n  /**\n   * @operation delete_custom_field_dropdown_item\n   * @summary Update a Custom Field's dropdown items\n   *\n   * @param {string} itemId ID of the dropdown item\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/custom-fields/:customFieldId/dropdown-items/:dropdownItemId',\n    (req, res) => {\n      const paramBoardId = req.params.boardId;\n      paramCustomFieldId = req.params.customFieldId;\n      paramDropdownItemId = req.params.dropdownItemId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      CustomFields.direct.update(\n        { _id: paramCustomFieldId },\n        {\n          $pull: {\n            'settings.dropdownItems': { _id: paramDropdownItemId },\n          },\n        },\n      );\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: { _id: paramCustomFieldId },\n      });\n    },\n  );\n\n  /**\n   * @operation delete_custom_field\n   * @summary Delete a Custom Fields attached to a board\n   *\n   * @description The Custom Field can't be retrieved after this operation\n   *\n   * @param {string} boardID the ID of the board\n   * @param {string} customFieldId the ID of the custom field\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/custom-fields/:customFieldId',\n    function(req, res) {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const id = req.params.customFieldId;\n      CustomFields.remove({ _id: id, boardIds: { $in: [paramBoardId] } });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    },\n  );\n}\n\nexport default CustomFields;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Exporter } from './exporter';\nimport { Meteor } from 'meteor/meteor';\n\n/* global JsonRoutes */\nif (Meteor.isServer) {\n  import { Picker } from 'meteor/communitypackages:picker';\n\n  // todo XXX once we have a real API in place, move that route there\n  // todo XXX also  share the route definition between the client and the server\n  // so that we could use something like\n  // `ApiRoutes.path('boards/export', boardId)``\n  // on the client instead of copy/pasting the route path manually between the\n  // client and the server.\n  /**\n   * @operation exportJson\n   * @tag Boards\n   *\n   * @summary This route is used to export the board to a json file format.\n   *\n   * @description If user is already logged-in, pass loginToken as param\n   * \"authToken\": '/api/boards/:boardId/export?authToken=:token'\n   *\n   * See https://blog.kayla.com.au/server-side-route-authentication-in-meteor/\n   * for detailed explanations\n   *\n   * @param {string} boardId the ID of the board we are exporting\n   * @param {string} authToken the loginToken\n   */\n  JsonRoutes.add('get', '/api/boards/:boardId/export', function (req, res) {\n    const boardId = req.params.boardId;\n    let user = null;\n    let impersonateDone = false;\n    let adminId = null;\n    const loginToken = req.query.authToken;\n    if (loginToken) {\n      const hashToken = Accounts._hashLoginToken(loginToken);\n      user = ReactiveCache.getUser({\n        'services.resume.loginTokens.hashedToken': hashToken,\n      });\n      adminId = user._id.toString();\n      impersonateDone = ReactiveCache.getImpersonatedUser({ adminId: adminId });\n    } else if (!Meteor.settings.public.sandstorm) {\n      Authentication.checkUserId(req.userId);\n      user = ReactiveCache.getUser({ _id: req.userId, isAdmin: true });\n    }\n    const exporter = new Exporter(boardId);\n    if (exporter.canExport(user) || impersonateDone) {\n      if (impersonateDone) {\n        ImpersonatedUsers.insert({\n          adminId: adminId,\n          boardId: boardId,\n          reason: 'exportJSON',\n        });\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: exporter.build(),\n      });\n    } else {\n      // we could send an explicit error message, but on the other hand the only\n      // way to get there is by hacking the UI so let's keep it raw.\n      JsonRoutes.sendResult(res, 403);\n    }\n  });\n\n  // todo XXX once we have a real API in place, move that route there\n  // todo XXX also  share the route definition between the client and the server\n  // so that we could use something like\n  // `ApiRoutes.path('boards/export', boardId)``\n  // on the client instead of copy/pasting the route path manually between the\n  // client and the server.\n  /**\n   * @operation exportJson\n   * @tag Boards\n   *\n   * @summary This route is used to export a attachement to a json file format.\n   *\n   * @description If user is already logged-in, pass loginToken as param\n   * \"authToken\": '/api/boards/:boardId/attachments/:attachmentId/export?authToken=:token'\n   *\n   *\n   * @param {string} boardId the ID of the board we are exporting\n   * @param {string} attachmentId the ID of the attachment we are exporting\n   * @param {string} authToken the loginToken\n   */\n  JsonRoutes.add(\n    'get',\n    '/api/boards/:boardId/attachments/:attachmentId/export',\n    function (req, res) {\n      const boardId = req.params.boardId;\n      const attachmentId = req.params.attachmentId;\n      let user = null;\n      let impersonateDone = false;\n      let adminId = null;\n      const loginToken = req.query.authToken;\n      if (loginToken) {\n        const hashToken = Accounts._hashLoginToken(loginToken);\n        user = ReactiveCache.getUser({\n          'services.resume.loginTokens.hashedToken': hashToken,\n        });\n        adminId = user._id.toString();\n        impersonateDone = ReactiveCache.getImpersonatedUser({ adminId: adminId });\n      } else if (!Meteor.settings.public.sandstorm) {\n        Authentication.checkUserId(req.userId);\n        user = ReactiveCache.getUser({ _id: req.userId, isAdmin: true });\n      }\n      const exporter = new Exporter(boardId, attachmentId);\n      if (exporter.canExport(user) || impersonateDone) {\n        if (impersonateDone) {\n          ImpersonatedUsers.insert({\n            adminId: adminId,\n            boardId: boardId,\n            attachmentId: attachmentId,\n            reason: 'exportJSONattachment',\n          });\n        }\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: exporter.build(),\n        });\n      } else {\n        // we could send an explicit error message, but on the other hand the only\n        // way to get there is by hacking the UI so let's keep it raw.\n        JsonRoutes.sendResult(res, 403);\n      }\n    },\n  );\n\n  /**\n   * @operation exportCSV/TSV\n   * @tag Boards\n   *\n   * @summary This route is used to export the board to a CSV or TSV file format.\n   *\n   * @description If user is already logged-in, pass loginToken as param\n   *\n   * See https://blog.kayla.com.au/server-side-route-authentication-in-meteor/\n   * for detailed explanations\n   *\n   * @param {string} boardId the ID of the board we are exporting\n   * @param {string} authToken the loginToken\n   * @param {string} delimiter delimiter to use while building export. Default is comma ','\n   */\n  Picker.route('/api/boards/:boardId/export/csv', function (params, req, res) {\n    const boardId = params.boardId;\n    let user = null;\n    let impersonateDone = false;\n    let adminId = null;\n    const loginToken = params.query.authToken;\n    if (loginToken) {\n      const hashToken = Accounts._hashLoginToken(loginToken);\n      user = ReactiveCache.getUser({\n        'services.resume.loginTokens.hashedToken': hashToken,\n      });\n      adminId = user._id.toString();\n      impersonateDone = ReactiveCache.getImpersonatedUser({ adminId: adminId });\n    } else if (!Meteor.settings.public.sandstorm) {\n      Authentication.checkUserId(req.userId);\n      user = ReactiveCache.getUser({\n        _id: req.userId,\n        isAdmin: true,\n      });\n    }\n    const exporter = new Exporter(boardId);\n    if (exporter.canExport(user) || impersonateDone) {\n      if (impersonateDone) {\n        let exportType = 'exportCSV';\n        if( params.query.delimiter == \"\\t\" ) {\n          exportType = 'exportTSV';\n        }\n        ImpersonatedUsers.insert({\n          adminId: adminId,\n          boardId: boardId,\n          reason: exportType,\n        });\n      }\n      \n      let userLanguage = 'en';\n      if (user && user.profile) {\n        userLanguage = user.profile.language\n      }\n      \n      if( params.query.delimiter == \"\\t\" ) {\n        // TSV file\n        res.writeHead(200, {\n          'Content-Type': 'text/tsv',\n        });\n      }\n      else {\n        // CSV file (comma or semicolon)\n        res.writeHead(200, {\n          'Content-Type': 'text/csv; charset=utf-8',\n        });\n        // Adding UTF8 BOM to quick fix MS Excel issue\n        // use Uint8Array to prevent from converting bytes to string\n        res.write(new Uint8Array([0xEF, 0xBB, 0xBF]));\n      }\n      res.write(exporter.buildCsv(params.query.delimiter, userLanguage));\n      res.end();\n    } else {\n      res.writeHead(403);\n      res.end('Permission Error');\n    }\n  });\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { TAPi18n } from '/imports/i18n';\nimport { runOnServer } from './runOnServer';\n\nrunOnServer(function() {\n  // the ExporterExcel class is only available on server and in order to import\n  // it here we use runOnServer to have it inside a function instead of an\n  // if (Meteor.isServer) block\n  import { ExporterExcel } from './server/ExporterExcel';\n  import { Picker } from 'meteor/communitypackages:picker';\n\n  // todo XXX once we have a real API in place, move that route there\n  // todo XXX also  share the route definition between the client and the server\n  // so that we could use something like\n  // `ApiRoutes.path('boards/exportExcel', boardId)``\n  // on the client instead of copy/pasting the route path manually between the\n  // client and the server.\n  /**\n   * @operation exportExcel\n   * @tag Boards\n   *\n   * @summary This route is used to export the board Excel.\n   *\n   * @description If user is already logged-in, pass loginToken as param\n   * \"authToken\": '/api/boards/:boardId/exportExcel?authToken=:token'\n   *\n   * See https://blog.kayla.com.au/server-side-route-authentication-in-meteor/\n   * for detailed explanations\n   *\n   * @param {string} boardId the ID of the board we are exporting\n   * @param {string} authToken the loginToken\n   */\n  Picker.route('/api/boards/:boardId/exportExcel', function (params, req, res) {\n    const boardId = params.boardId;\n    let user = null;\n    let impersonateDone = false;\n    let adminId = null;\n    const loginToken = params.query.authToken;\n    if (loginToken) {\n      const hashToken = Accounts._hashLoginToken(loginToken);\n      user = ReactiveCache.getUser({\n        'services.resume.loginTokens.hashedToken': hashToken,\n      });\n      adminId = user._id.toString();\n      impersonateDone = ReactiveCache.getImpersonatedUser({ adminId: adminId });\n    } else if (!Meteor.settings.public.sandstorm) {\n      Authentication.checkUserId(req.userId);\n      user = ReactiveCache.getUser({\n        _id: req.userId,\n        isAdmin: true,\n      });\n    }\n\n    let userLanguage = 'en';\n    if(user && user.profile){\n      userLanguage = user.profile.language\n    }\n\n    const exporterExcel = new ExporterExcel(boardId, userLanguage);\n    if (exporterExcel.canExport(user) || impersonateDone) {\n      if (impersonateDone) {\n        ImpersonatedUsers.insert({\n          adminId: adminId,\n          boardId: boardId,\n          reason: 'exportExcel',\n        });\n      }\n      exporterExcel.build(res);\n    } else {\n      res.end(TAPi18n.__('user-can-not-export-excel'));\n    }\n  });\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { TAPi18n } from '/imports/i18n';\nimport { runOnServer } from './runOnServer';\n\nrunOnServer(function() {\n  // the ExporterCardPDF class is only available on server and in order to import\n  // it here we use runOnServer to have it inside a function instead of an\n  // if (Meteor.isServer) block\n  import { ExporterCardPDF } from './server/ExporterCardPDF';\n  import { Picker } from 'meteor/communitypackages:picker';\n\n  // todo XXX once we have a real API in place, move that route there\n  // todo XXX also  share the route definition between the client and the server\n  // so that we could use something like\n  // `ApiRoutes.path('boards/exportExcel', boardId)``\n  // on the client instead of copy/pasting the route path manually between the\n  // client and the server.\n  /**\n   * @operation exportExcel\n   * @tag Boards\n   *\n   * @summary This route is used to export the board Excel.\n   *\n   * @description If user is already logged-in, pass loginToken as param\n   * \"authToken\": '/api/boards/:boardId/exportExcel?authToken=:token'\n   *\n   * See https://blog.kayla.com.au/server-side-route-authentication-in-meteor/\n   * for detailed explanations\n   *\n   * @param {string} boardId the ID of the board we are exporting\n   * @param {string} authToken the loginToken\n   */\n  Picker.route('/api/boards/:boardId/lists/:listId/cards/:cardId/exportPDF', function (params, req, res) {\n    const boardId = params.boardId;\n    const paramListId = req.params.listId;\n    const paramCardId = req.params.cardId;\n    let user = null;\n    let impersonateDone = false;\n    let adminId = null;\n    const loginToken = params.query.authToken;\n    if (loginToken) {\n      const hashToken = Accounts._hashLoginToken(loginToken);\n      user = ReactiveCache.getUser({\n        'services.resume.loginTokens.hashedToken': hashToken,\n      });\n      adminId = user._id.toString();\n      impersonateDone = ReactiveCache.getImpersonatedUser({ adminId: adminId });\n    } else if (!Meteor.settings.public.sandstorm) {\n      Authentication.checkUserId(req.userId);\n      user = ReactiveCache.getUser({\n        _id: req.userId,\n        isAdmin: true,\n      });\n    }\n\n    const exporterCardPDF = new ExporterCardPDF(boardId);\n    if (exporterCardPDF.canExport(user) || impersonateDone) {\n      if (impersonateDone) {\n        ImpersonatedUsers.insert({\n          adminId: adminId,\n          boardId: boardId,\n          reason: 'exportCardPDF',\n        });\n      }\n\n      exporterCardPDF.build(res);\n    } else {\n      res.end(TAPi18n.__('user-can-not-export-card-to-pdf'));\n    }\n  });\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\nconst Papa = require('papaparse');\nimport { TAPi18n } from '/imports/i18n';\n\n//const stringify = require('csv-stringify');\n\n//const stringify = require('csv-stringify');\n\n// exporter maybe is broken since Gridfs introduced, add fs and path\nexport class Exporter {\n  constructor(boardId, attachmentId) {\n    this._boardId = boardId;\n    this._attachmentId = attachmentId;\n  }\n\n  build() {\n    const fs = Npm.require('fs');\n    const os = Npm.require('os');\n    const path = Npm.require('path');\n\n    const byBoard = { boardId: this._boardId };\n    const byBoardNoLinked = {\n      boardId: this._boardId,\n      linkedId: { $in: ['', null] },\n    };\n    // we do not want to retrieve boardId in related elements\n    const noBoardId = {\n      fields: {\n        boardId: 0,\n      },\n    };\n    const result = {\n      _format: 'wekan-board-1.0.0',\n    };\n    _.extend(\n      result,\n      ReactiveCache.getBoard(this._boardId, {\n        fields: {\n          stars: 0,\n        },\n      }),\n    );\n\n    // [Old] for attachments we only export IDs and absolute url to original doc\n    // [New] Encode attachment to base64\n\n    const getBase64Data = function (doc, callback) {\n      let buffer = Buffer.allocUnsafe(0);\n      buffer.fill(0);\n\n      // callback has the form function (err, res) {}\n      const tmpFile = path.join(\n        os.tmpdir(),\n        `tmpexport${process.pid}${Math.random()}`,\n      );\n      const tmpWriteable = fs.createWriteStream(tmpFile);\n      const readStream = doc.createReadStream();\n      readStream.on('data', function (chunk) {\n        buffer = Buffer.concat([buffer, chunk]);\n      });\n\n      readStream.on('error', function () {\n        callback(null, null);\n      });\n      readStream.on('end', function () {\n        // done\n        fs.unlink(tmpFile, () => {\n          //ignored\n        });\n\n        callback(null, buffer.toString('base64'));\n      });\n      readStream.pipe(tmpWriteable);\n    };\n    const getBase64DataSync = Meteor.wrapAsync(getBase64Data);\n    const byBoardAndAttachment = this._attachmentId\n      ? { boardId: this._boardId, _id: this._attachmentId }\n      : byBoard;\n    result.attachments = ReactiveCache.getAttachments(byBoardAndAttachment)\n      .map((attachment) => {\n        let filebase64 = null;\n        filebase64 = getBase64DataSync(attachment);\n\n        return {\n          _id: attachment._id,\n          cardId: attachment.meta.cardId,\n          //url: FlowRouter.url(attachment.url()),\n          file: filebase64,\n          name: attachment.name,\n          type: attachment.type,\n        };\n      });\n    //When has a especific valid attachment return the single element\n    if (this._attachmentId) {\n      return result.attachments.length > 0 ? result.attachments[0] : {};\n    }\n\n    result.lists = ReactiveCache.getLists(byBoard, noBoardId);\n    result.cards = ReactiveCache.getCards(byBoardNoLinked, noBoardId);\n    result.swimlanes = ReactiveCache.getSwimlanes(byBoard, noBoardId);\n    result.customFields = ReactiveCache.getCustomFields(\n      { boardIds: this._boardId },\n      { fields: { boardIds: 0 } },\n    );\n    result.comments = ReactiveCache.getCardComments(byBoard, noBoardId);\n    result.activities = ReactiveCache.getActivities(byBoard, noBoardId);\n    result.rules = ReactiveCache.getRules(byBoard, noBoardId);\n    result.checklists = [];\n    result.checklistItems = [];\n    result.subtaskItems = [];\n    result.triggers = [];\n    result.actions = [];\n    result.cards.forEach((card) => {\n      result.checklists.push(\n        ...ReactiveCache.getChecklists({\n          cardId: card._id,\n        }),\n      );\n      result.checklistItems.push(\n        ...ReactiveCache.getChecklistItems({\n          cardId: card._id,\n        }),\n      );\n      result.subtaskItems.push(\n        ...ReactiveCache.getCards({\n          parentId: card._id,\n        }),\n      );\n    });\n    result.rules.forEach((rule) => {\n      result.triggers.push(\n        ...ReactiveCache.getTriggers(\n          {\n            _id: rule.triggerId,\n          },\n          noBoardId,\n        ),\n      );\n      result.actions.push(\n        ...ReactiveCache.getActions(\n          {\n            _id: rule.actionId,\n          },\n          noBoardId,\n        ),\n      );\n    });\n\n    // we also have to export some user data - as the other elements only\n    // include id but we have to be careful:\n    // 1- only exports users that are linked somehow to that board\n    // 2- do not export any sensitive information\n    const users = {};\n    result.members.forEach((member) => {\n      users[member.userId] = true;\n    });\n    result.lists.forEach((list) => {\n      users[list.userId] = true;\n    });\n    result.cards.forEach((card) => {\n      users[card.userId] = true;\n      if (card.members) {\n        card.members.forEach((memberId) => {\n          users[memberId] = true;\n        });\n      }\n    });\n    result.comments.forEach((comment) => {\n      users[comment.userId] = true;\n    });\n    result.activities.forEach((activity) => {\n      users[activity.userId] = true;\n    });\n    result.checklists.forEach((checklist) => {\n      users[checklist.userId] = true;\n    });\n    const byUserIds = {\n      _id: {\n        $in: Object.getOwnPropertyNames(users),\n      },\n    };\n    // we use whitelist to be sure we do not expose inadvertently\n    // some secret fields that gets added to User later.\n    const userFields = {\n      fields: {\n        _id: 1,\n        username: 1,\n        'profile.fullname': 1,\n        'profile.initials': 1,\n        'profile.avatarUrl': 1,\n      },\n    };\n    result.users = ReactiveCache.getUsers(byUserIds, userFields)\n      .map((user) => {\n        // user avatar is stored as a relative url, we export absolute\n        if ((user.profile || {}).avatarUrl) {\n          user.profile.avatarUrl = FlowRouter.url(user.profile.avatarUrl);\n        }\n        return user;\n      });\n    return result;\n  }\n\n  buildCsv(userDelimiter = ',', userLanguage='en') {\n    const result = this.build();\n    const columnHeaders = [];\n    const cardRows = [];\n\n    const papaconfig = {\n      quotes: true,\n      quoteChar: '\"',\n      escapeChar: '\"',\n      delimiter: userDelimiter,\n      header: true,\n      newline: \"\\r\\n\",\n      skipEmptyLines: false,\n      escapeFormulae: true,\n    };\n\n    columnHeaders.push(\n      TAPi18n.__('title','',userLanguage),\n      TAPi18n.__('description','',userLanguage),\n      TAPi18n.__('list','',userLanguage),\n      TAPi18n.__('swimlane','',userLanguage),\n      TAPi18n.__('owner','',userLanguage),\n      TAPi18n.__('requested-by','',userLanguage),\n      TAPi18n.__('assigned-by','',userLanguage),\n      TAPi18n.__('members','',userLanguage),\n      TAPi18n.__('assignee','',userLanguage),\n      TAPi18n.__('labels','',userLanguage),\n      TAPi18n.__('card-start','',userLanguage),\n      TAPi18n.__('card-due','',userLanguage),\n      TAPi18n.__('card-end','',userLanguage),\n      TAPi18n.__('overtime-hours','',userLanguage),\n      TAPi18n.__('spent-time-hours','',userLanguage),\n      TAPi18n.__('createdAt','',userLanguage),\n      TAPi18n.__('last-modified-at','',userLanguage),\n      TAPi18n.__('last-activity','',userLanguage),\n      TAPi18n.__('voting','',userLanguage),\n      TAPi18n.__('archived','',userLanguage),\n    );\n    const customFieldMap = {};\n    let i = 0;\n    result.customFields.forEach((customField) => {\n      customFieldMap[customField._id] = {\n        position: i,\n        type: customField.type,\n      };\n      if (customField.type === 'dropdown') {\n        let options = '';\n        customField.settings.dropdownItems.forEach((item) => {\n          options = options === '' ? item.name : `${`${options}/${item.name}`}`;\n        });\n        columnHeaders.push(\n          `CustomField-${customField.name}-${customField.type}-${options}`,\n        );\n      } else if (customField.type === 'currency') {\n        columnHeaders.push(\n          `CustomField-${customField.name}-${customField.type}-${customField.settings.currencyCode}`,\n        );\n      } else {\n        columnHeaders.push(\n          `CustomField-${customField.name}-${customField.type}`,\n        );\n      }\n      i++;\n    });\n    //cardRows.push([[columnHeaders]]);\n    cardRows.push(columnHeaders);\n\n    result.cards.forEach((card) => {\n      const currentRow = [];\n      currentRow.push(card.title);\n      currentRow.push(card.description);\n      currentRow.push(\n        result.lists.find(({ _id }) => _id === card.listId).title,\n      );\n      currentRow.push(\n        result.swimlanes.find(({ _id }) => _id === card.swimlaneId).title,\n      );\n      currentRow.push(\n        result.users.find(({ _id }) => _id === card.userId).username,\n      );\n      currentRow.push(card.requestedBy ? card.requestedBy : ' ');\n      currentRow.push(card.assignedBy ? card.assignedBy : ' ');\n      let usernames = '';\n      card.members.forEach((memberId) => {\n        const user = result.users.find(({ _id }) => _id === memberId);\n        usernames = `${usernames + user.username} `;\n      });\n      currentRow.push(usernames.trim());\n      let assignees = '';\n      card.assignees.forEach((assigneeId) => {\n        const user = result.users.find(({ _id }) => _id === assigneeId);\n        assignees = `${assignees + user.username} `;\n      });\n      currentRow.push(assignees.trim());\n      let labels = '';\n      card.labelIds.forEach((labelId) => {\n        const label = result.labels.find(({ _id }) => _id === labelId);\n        labels = `${labels + label.name}-${label.color} `;\n      });\n      currentRow.push(labels.trim());\n      currentRow.push(card.startAt ? moment(card.startAt).format() : ' ');\n      currentRow.push(card.dueAt ? moment(card.dueAt).format() : ' ');\n      currentRow.push(card.endAt ? moment(card.endAt).format() : ' ');\n      currentRow.push(card.isOvertime ? 'true' : 'false');\n      currentRow.push(card.spentTime);\n      currentRow.push(card.createdAt ? moment(card.createdAt).format() : ' ');\n      currentRow.push(card.modifiedAt ? moment(card.modifiedAt).format() : ' ');\n      currentRow.push(\n        card.dateLastActivity ? moment(card.dateLastActivity).format() : ' ',\n      );\n      if (card.vote && card.vote.question !== '') {\n        let positiveVoters = '';\n        let negativeVoters = '';\n        card.vote.positive.forEach((userId) => {\n          const user = result.users.find(({ _id }) => _id === userId);\n          positiveVoters = `${positiveVoters + user.username} `;\n        });\n        card.vote.negative.forEach((userId) => {\n          const user = result.users.find(({ _id }) => _id === userId);\n          negativeVoters = `${negativeVoters + user.username} `;\n        });\n        const votingResult = `${\n          card.vote.public\n            ? `yes-${\n                card.vote.positive.length\n              }-${positiveVoters.trimRight()}-no-${\n                card.vote.negative.length\n              }-${negativeVoters.trimRight()}`\n            : `yes-${card.vote.positive.length}-no-${card.vote.negative.length}`\n        }`;\n        currentRow.push(`${card.vote.question}-${votingResult}`);\n      } else {\n        currentRow.push(' ');\n      }\n      currentRow.push(card.archived ? 'true' : 'false');\n      //Custom fields\n      const customFieldValuesToPush = new Array(result.customFields.length);\n      card.customFields.forEach((field) => {\n        if (field.value !== null) {\n          if (customFieldMap[field._id].type === 'date') {\n            customFieldValuesToPush[customFieldMap[field._id].position] =\n              moment(field.value).format();\n          } else if (customFieldMap[field._id].type === 'dropdown') {\n            const dropdownOptions = result.customFields.find(\n              ({ _id }) => _id === field._id,\n            ).settings.dropdownItems;\n            const fieldObj = dropdownOptions.find(\n              ({ _id }) => _id === field.value,\n            );\n            const fieldValue = (fieldObj && fieldObj.name) || null;\n            customFieldValuesToPush[customFieldMap[field._id].position] =\n              fieldValue;\n          } else {\n            customFieldValuesToPush[customFieldMap[field._id].position] =\n              field.value;\n          }\n        }\n      });\n      for (\n        let valueIndex = 0;\n        valueIndex < customFieldValuesToPush.length;\n        valueIndex++\n      ) {\n        if (!(valueIndex in customFieldValuesToPush)) {\n          currentRow.push(' ');\n        } else {\n          currentRow.push(customFieldValuesToPush[valueIndex]);\n        }\n      }\n      //cardRows.push([[currentRow]]);\n      cardRows.push(currentRow);\n    });\n\n    return Papa.unparse(cardRows, papaconfig);\n  }\n\n  canExport(user) {\n    const board = ReactiveCache.getBoard(this._boardId);\n    return board && board.isVisibleBy(user);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { exec } from 'node:child_process';\nimport { promisify } from 'node:util';\nimport fs from 'fs';\nimport FileType from 'file-type';\n\nlet asyncExec;\n\nif (Meteor.isServer) {\n  asyncExec = promisify(exec);\n}\n\nexport async function isFileValid(fileObj, mimeTypesAllowed, sizeAllowed, externalCommandLine) {\n  let isValid = true;\n\n/*\n  if (Meteor.settings.public.ostrioFilesMigrationInProgress !== \"true\") {\n    if (mimeTypesAllowed.length) {\n      const mimeTypeResult = await FileType.fromFile(fileObj.path);\n\n      const mimeType = (mimeTypeResult ? mimeTypeResult.mime : fileObj.type);\n      const baseMimeType = mimeType.split('/', 1)[0];\n\n      isValid = mimeTypesAllowed.includes(mimeType) || mimeTypesAllowed.includes(baseMimeType + '/*') || mimeTypesAllowed.includes('*');\n\n      if (!isValid) {\n        console.log(\"Validation of uploaded file failed: file \" + fileObj.path + \" - mimetype \" + mimeType);\n      }\n    }\n\n    if (isValid && sizeAllowed && fileObj.size > sizeAllowed) {\n      console.log(\"Validation of uploaded file failed: file \" + fileObj.path + \" - size \" + fileObj.size);\n      isValid = false;\n    }\n\n    if (isValid && externalCommandLine) {\n      await asyncExec(externalCommandLine.replace(\"{file}\", '\"' + fileObj.path + '\"'));\n      isValid = fs.existsSync(fileObj.path);\n\n      if (!isValid) {\n        console.log(\"Validation of uploaded file failed: file \" + fileObj.path + \" has been deleted externally\");\n      }\n    }\n\n    if (isValid) {\n      console.debug(\"Validation of uploaded file successful: file \" + fileObj.path);\n    }\n  }\n*/\n\n  return isValid;\n}\n","ImpersonatedUsers = new Mongo.Collection('impersonatedUsers');\n\n/**\n * A Impersonated User in wekan\n */\nImpersonatedUsers.attachSchema(\n  new SimpleSchema({\n    adminId: {\n      /**\n       * the admin userid that impersonates\n       */\n      type: String,\n      optional: true,\n    },\n    userId: {\n      /**\n       * the userId that is impersonated\n       */\n      type: String,\n      optional: true,\n    },\n    boardId: {\n      /**\n       * the boardId that was exported by anyone that has sometime impersonated\n       */\n      type: String,\n      optional: true,\n    },\n    attachmentId: {\n      /**\n       * the attachmentId that was exported by anyone that has sometime impersonated\n       */\n      type: String,\n      optional: true,\n    },\n    reason: {\n      /**\n       * the reason why impersonated, like exportJSON\n       */\n      type: String,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * creation date of the impersonation\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return {\n            $setOnInsert: new Date(),\n          };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      /**\n       * modified date of the impersonation\n       */\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nexport default ImpersonatedUsers;\n","import { TrelloCreator } from './trelloCreator';\nimport { WekanCreator } from './wekanCreator';\nimport { CsvCreator } from './csvCreator';\nimport { Exporter } from './exporter';\nimport { getMembersToMap } from './wekanmapper';\n\nMeteor.methods({\n  importBoard(board, data, importSource, currentBoard) {\n    check(data, Object);\n    check(importSource, String);\n    check(currentBoard, Match.Maybe(String));\n    let creator;\n    switch (importSource) {\n      case 'trello':\n        check(board, Object);\n        creator = new TrelloCreator(data);\n        break;\n      case 'wekan':\n        check(board, Object);\n        creator = new WekanCreator(data);\n        break;\n      case 'csv':\n        check(board, Array);\n        creator = new CsvCreator(data);\n        break;\n    }\n\n    // 1. check all parameters are ok from a syntax point of view\n    //creator.check(board);\n\n    // 2. check parameters are ok from a business point of view (exist &\n    // authorized) nothing to check, everyone can import boards in their account\n\n    // 3. create all elements\n    return creator.create(board, currentBoard);\n  },\n});\n\nMeteor.methods({\n  cloneBoard(sourceBoardId, currentBoardId) {\n    check(sourceBoardId, String);\n    check(currentBoardId, Match.Maybe(String));\n    const exporter = new Exporter(sourceBoardId);\n    const data = exporter.build();\n    const additionalData = {};\n\n    //get the members to map\n    const membersMapping = getMembersToMap(data);\n\n    //now mirror the mapping done in finishImport in client/components/import/import.js:\n    if (membersMapping) {\n      const mappingById = {};\n      membersMapping.forEach(member => {\n        if (member.wekanId) {\n          mappingById[member.id] = member.wekanId;\n        }\n      });\n      additionalData.membersMapping = mappingById;\n    }\n\n    const creator = new WekanCreator(additionalData);\n    //data.title = `${data.title  } - ${  TAPi18n.__('copy-tag')}`;\n    data.title = `${data.title}`;\n    return creator.create(data, currentBoardId);\n  },\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nIntegrations = new Mongo.Collection('integrations');\n\n/**\n * Integration with third-party applications\n */\nIntegrations.attachSchema(\n  new SimpleSchema({\n    enabled: {\n      /**\n       * is the integration enabled?\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n    title: {\n      /**\n       * name of the integration\n       */\n      type: String,\n      optional: true,\n    },\n    type: {\n      /**\n       * type of the integratation (Default to 'outgoing-webhooks')\n       */\n      type: String,\n      defaultValue: 'outgoing-webhooks',\n    },\n    activities: {\n      /**\n       * activities the integration gets triggered (list)\n       */\n      type: [String],\n      defaultValue: ['all'],\n    },\n    url: {\n      // URL validation regex (https://mathiasbynens.be/demo/url-regex)\n      /**\n       * URL validation regex (https://mathiasbynens.be/demo/url-regex)\n       */\n      type: String,\n    },\n    token: {\n      /**\n       * token of the integration\n       */\n      type: String,\n      optional: true,\n    },\n    boardId: {\n      /**\n       * Board ID of the integration\n       */\n      type: String,\n    },\n    createdAt: {\n      /**\n       * Creation date of the integration\n       */\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    userId: {\n      /**\n       * user ID who created the interation\n       */\n      type: String,\n    },\n  }),\n);\nIntegrations.Const = {\n  GLOBAL_WEBHOOK_ID: '_global',\n  ONEWAY: 'outgoing-webhooks',\n  TWOWAY: 'bidirectional-webhooks',\n  get WEBHOOK_TYPES() {\n    return [this.ONEWAY, this.TWOWAY];\n  },\n};\nconst permissionHelper = {\n  allow(userId, doc) {\n    const user = ReactiveCache.getUser(userId);\n    const isAdmin = user && ReactiveCache.getCurrentUser().isAdmin;\n    return isAdmin || allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n};\nIntegrations.allow({\n  insert(userId, doc) {\n    return permissionHelper.allow(userId, doc);\n  },\n  update(userId, doc) {\n    return permissionHelper.allow(userId, doc);\n  },\n  remove(userId, doc) {\n    return permissionHelper.allow(userId, doc);\n  },\n  fetch: ['boardId'],\n});\n\n//INTEGRATIONS REST API\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Integrations._collection.createIndex({ modifiedAt: -1 });\n    Integrations._collection.createIndex({ boardId: 1 });\n  });\n\n  /**\n   * @operation get_all_integrations\n   * @summary Get all integrations in board\n   *\n   * @param {string} boardId the board ID\n   * @return_type [Integrations]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/integrations', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      const data = ReactiveCache.getIntegrations(\n        { boardId: paramBoardId },\n        { fields: { token: 0 } },\n      ).map(function(doc) {\n        return doc;\n      });\n\n      JsonRoutes.sendResult(res, { code: 200, data });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_integration\n   * @summary Get a single integration in board\n   *\n   * @param {string} boardId the board ID\n   * @param {string} intId the integration ID\n   * @return_type Integrations\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/integrations/:intId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramIntId = req.params.intId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getIntegration(\n          { _id: paramIntId, boardId: paramBoardId },\n          { fields: { token: 0 } },\n        ),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation new_integration\n   * @summary Create a new integration\n   *\n   * @param {string} boardId the board ID\n   * @param {string} url the URL of the integration\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/integrations', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      const id = Integrations.insert({\n        userId: req.userId,\n        boardId: paramBoardId,\n        url: req.body.url,\n      });\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation edit_integration\n   * @summary Edit integration data\n   *\n   * @param {string} boardId the board ID\n   * @param {string} intId the integration ID\n   * @param {string} [enabled] is the integration enabled?\n   * @param {string} [title] new name of the integration\n   * @param {string} [url] new URL of the integration\n   * @param {string} [token] new token of the integration\n   * @param {string} [activities] new list of activities of the integration\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('PUT', '/api/boards/:boardId/integrations/:intId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramIntId = req.params.intId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      if (req.body.hasOwnProperty('enabled')) {\n        const newEnabled = req.body.enabled;\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $set: { enabled: newEnabled } },\n        );\n      }\n      if (req.body.hasOwnProperty('title')) {\n        const newTitle = req.body.title;\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $set: { title: newTitle } },\n        );\n      }\n      if (req.body.hasOwnProperty('url')) {\n        const newUrl = req.body.url;\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $set: { url: newUrl } },\n        );\n      }\n      if (req.body.hasOwnProperty('token')) {\n        const newToken = req.body.token;\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $set: { token: newToken } },\n        );\n      }\n      if (req.body.hasOwnProperty('activities')) {\n        const newActivities = req.body.activities;\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $set: { activities: newActivities } },\n        );\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramIntId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_integration_activities\n   * @summary Delete subscribed activities\n   *\n   * @param {string} boardId the board ID\n   * @param {string} intId the integration ID\n   * @param {string} newActivities the activities to remove from the integration\n   * @return_type Integrations\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/integrations/:intId/activities',\n    function(req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramIntId = req.params.intId;\n        const newActivities = req.body.activities;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $pullAll: { activities: newActivities } },\n        );\n\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: ReactiveCache.getIntegration(\n            { _id: paramIntId, boardId: paramBoardId },\n            { fields: { _id: 1, activities: 1 } },\n          ),\n        });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation new_integration_activities\n   * @summary Add subscribed activities\n   *\n   * @param {string} boardId the board ID\n   * @param {string} intId the integration ID\n   * @param {string} newActivities the activities to add to the integration\n   * @return_type Integrations\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/integrations/:intId/activities',\n    function(req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramIntId = req.params.intId;\n        const newActivities = req.body.activities;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n        Integrations.direct.update(\n          { _id: paramIntId, boardId: paramBoardId },\n          { $addToSet: { activities: { $each: newActivities } } },\n        );\n\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: ReactiveCache.getIntegration(\n            { _id: paramIntId, boardId: paramBoardId },\n            { fields: { _id: 1, activities: 1 } },\n          ),\n        });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation delete_integration\n   * @summary Delete integration\n   *\n   * @param {string} boardId the board ID\n   * @param {string} intId the integration ID\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('DELETE', '/api/boards/:boardId/integrations/:intId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramIntId = req.params.intId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      Integrations.direct.remove({ _id: paramIntId, boardId: paramBoardId });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramIntId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n}\n\nexport default Integrations;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nInvitationCodes = new Mongo.Collection('invitation_codes');\n\nInvitationCodes.attachSchema(\n  new SimpleSchema({\n    code: {\n      type: String,\n    },\n    email: {\n      type: String,\n      unique: true,\n      regEx: SimpleSchema.RegEx.Email,\n    },\n    createdAt: {\n      type: Date,\n      denyUpdate: false,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    // always be the admin if only one admin\n    authorId: {\n      type: String,\n    },\n    boardsToBeInvited: {\n      type: [String],\n      optional: true,\n    },\n    valid: {\n      type: Boolean,\n      defaultValue: true,\n    },\n  }),\n);\n\nInvitationCodes.helpers({\n  author() {\n    return ReactiveCache.getUser(this.authorId);\n  },\n});\n\n// InvitationCodes.before.insert((userId, doc) => {\n// doc.createdAt = new Date();\n// doc.authorId = userId;\n// });\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    InvitationCodes._collection.createIndex({ modifiedAt: -1 });\n  });\n  Boards.deny({\n    fetch: ['members'],\n  });\n}\n\nexport default InvitationCodes;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { ALLOWED_COLORS } from '/config/const';\n\nLists = new Mongo.Collection('lists');\n\n/**\n * A list (column) in the Wekan board.\n */\nLists.attachSchema(\n  new SimpleSchema({\n    title: {\n      /**\n       * the title of the list\n       */\n      type: String,\n    },\n    starred: {\n      /**\n       * if a list is stared\n       * then we put it on the top\n       */\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n    },\n    archived: {\n      /**\n       * is the list archived\n       */\n      type: Boolean,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return false;\n        }\n      },\n    },\n    archivedAt: {\n      /**\n       * latest archiving date\n       */\n      type: Date,\n      optional: true,\n    },\n    boardId: {\n      /**\n       * the board associated to this list\n       */\n      type: String,\n    },\n    swimlaneId: {\n      /**\n       * the swimlane associated to this list. Used for templates\n       */\n      type: String,\n      defaultValue: '',\n    },\n    createdAt: {\n      /**\n       * creation date\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    sort: {\n      /**\n       * is the list sorted\n       */\n      type: Number,\n      decimal: true,\n      // XXX We should probably provide a default\n      optional: true,\n    },\n    updatedAt: {\n      /**\n       * last update of the list\n       */\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isUpdate || this.isUpsert || this.isInsert) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        // this is redundant with updatedAt\n        /*if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }*/\n        if (!this.isSet) {\n          return new Date();\n        }\n      },\n    },\n    wipLimit: {\n      /**\n       * WIP object, see below\n       */\n      type: Object,\n      optional: true,\n    },\n    'wipLimit.value': {\n      /**\n       * value of the WIP\n       */\n      type: Number,\n      decimal: false,\n      defaultValue: 1,\n    },\n    'wipLimit.enabled': {\n      /**\n       * is the WIP enabled\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    'wipLimit.soft': {\n      /**\n       * is the WIP a soft or hard requirement\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    color: {\n      /**\n       * the color of the list\n       */\n      type: String,\n      optional: true,\n      // silver is the default\n      allowedValues: ALLOWED_COLORS,\n    },\n    type: {\n      /**\n       * The type of list\n       */\n      type: String,\n      defaultValue: 'list',\n    },\n    collapsed: {\n      /**\n       * is the list collapsed\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n  }),\n);\n\nLists.allow({\n  insert(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  fetch: ['boardId'],\n});\n\nLists.helpers({\n  copy(boardId, swimlaneId) {\n    const oldId = this._id;\n    const oldSwimlaneId = this.swimlaneId || null;\n    this.boardId = boardId;\n    this.swimlaneId = swimlaneId;\n\n    let _id = null;\n    const existingListWithSameName = ReactiveCache.getList({\n      boardId,\n      title: this.title,\n      archived: false,\n    });\n    if (existingListWithSameName) {\n      _id = existingListWithSameName._id;\n    } else {\n      delete this._id;\n      delete this.swimlaneId;\n      _id = Lists.insert(this);\n    }\n\n    // Copy all cards in list\n    ReactiveCache.getCards({\n      swimlaneId: oldSwimlaneId,\n      listId: oldId,\n      archived: false,\n    }).forEach(card => {\n      card.copy(boardId, swimlaneId, _id);\n    });\n  },\n\n  move(boardId, swimlaneId) {\n    const boardList = ReactiveCache.getList({\n      boardId,\n      title: this.title,\n      archived: false,\n    });\n    let listId;\n    if (boardList) {\n      listId = boardList._id;\n      this.cards().forEach(card => {\n        card.move(boardId, this._id, boardList._id);\n      });\n    } else {\n      console.log('list.title:', this.title);\n      console.log('boardList:', boardList);\n      listId = Lists.insert({\n        title: this.title,\n        boardId,\n        type: this.type,\n        archived: false,\n        wipLimit: this.wipLimit,\n      });\n    }\n\n    this.cards(swimlaneId).forEach(card => {\n      card.move(boardId, swimlaneId, listId);\n    });\n  },\n\n  cards(swimlaneId) {\n    const selector = {\n      listId: this._id,\n      archived: false,\n    };\n    if (swimlaneId) selector.swimlaneId = swimlaneId;\n    const ret = ReactiveCache.getCards(Filter.mongoSelector(selector), { sort: ['sort'] });\n    return ret;\n  },\n\n  cardsUnfiltered(swimlaneId) {\n    const selector = {\n      listId: this._id,\n      archived: false,\n    };\n    if (swimlaneId) selector.swimlaneId = swimlaneId;\n    const ret = ReactiveCache.getCards(selector, { sort: ['sort'] });\n    return ret;\n  },\n\n  allCards() {\n    const ret = ReactiveCache.getCards({ listId: this._id });\n    return ret;\n  },\n\n  board() {\n    return ReactiveCache.getBoard(this.boardId);\n  },\n\n  getWipLimit(option) {\n    const list = ReactiveCache.getList(this._id);\n    if (!list.wipLimit) {\n      // Necessary check to avoid exceptions for the case where the doc doesn't have the wipLimit field yet set\n      return 0;\n    } else if (!option) {\n      return list.wipLimit;\n    } else {\n      return list.wipLimit[option] ? list.wipLimit[option] : 0; // Necessary check to avoid exceptions for the case where the doc doesn't have the wipLimit field yet set\n    }\n  },\n\n  colorClass() {\n    if (this.color) return `list-header-${this.color}`;\n    return '';\n  },\n\n  isTemplateList() {\n    return this.type === 'template-list';\n  },\n\n  isStarred() {\n    return this.starred === true;\n  },\n\n  isCollapsed() {\n    return this.collapsed === true;\n  },\n\n  absoluteUrl() {\n    const card = ReactiveCache.getCard({ listId: this._id });\n    return card && card.absoluteUrl();\n  },\n  originRelativeUrl() {\n    const card = ReactiveCache.getCard({ listId: this._id });\n    return card && card.originRelativeUrl();\n  },\n  remove() {\n    Lists.remove({ _id: this._id });\n  },\n});\n\nLists.mutations({\n  rename(title) {\n    return { $set: { title } };\n  },\n  star(enable = true) {\n    return { $set: { starred: !!enable } };\n  },\n  collapse(enable = true) {\n    return { $set: { collapsed: !!enable } };\n  },\n\n  archive() {\n    if (this.isTemplateList()) {\n      this.cards().forEach(card => {\n        return card.archive();\n      });\n    }\n    return { $set: { archived: true, archivedAt: new Date() } };\n  },\n\n  restore() {\n    if (this.isTemplateList()) {\n      this.allCards().forEach(card => {\n        return card.restore();\n      });\n    }\n    return { $set: { archived: false } };\n  },\n\n  toggleSoftLimit(toggle) {\n    return { $set: { 'wipLimit.soft': toggle } };\n  },\n\n  toggleWipLimit(toggle) {\n    return { $set: { 'wipLimit.enabled': toggle } };\n  },\n\n  setWipLimit(limit) {\n    return { $set: { 'wipLimit.value': limit } };\n  },\n\n  setColor(newColor) {\n    return {\n      $set: {\n        color: newColor,\n      },\n    };\n  },\n});\n\nLists.userArchivedLists = userId => {\n  return ReactiveCache.getLists({\n    boardId: { $in: Boards.userBoardIds(userId, null) },\n    archived: true,\n  })\n};\n\nLists.userArchivedListIds = () => {\n  return Lists.userArchivedLists().map(list => { return list._id; });\n};\n\nLists.archivedLists = () => {\n  return ReactiveCache.getLists({ archived: true });\n};\n\nLists.archivedListIds = () => {\n  return Lists.archivedLists().map(list => {\n    return list._id;\n  });\n};\n\nMeteor.methods({\n  applyWipLimit(listId, limit) {\n    check(listId, String);\n    check(limit, Number);\n    if (limit === 0) {\n      limit = 1;\n    }\n    ReactiveCache.getList(listId).setWipLimit(limit);\n  },\n\n  enableWipLimit(listId) {\n    check(listId, String);\n    const list = ReactiveCache.getList(listId);\n    if (list.getWipLimit('value') === 0) {\n      list.setWipLimit(1);\n    }\n    list.toggleWipLimit(!list.getWipLimit('enabled'));\n  },\n\n  enableSoftLimit(listId) {\n    check(listId, String);\n    const list = ReactiveCache.getList(listId);\n    list.toggleSoftLimit(!list.getWipLimit('soft'));\n  },\n\n  myLists() {\n    // my lists\n    return _.uniq(\n      ReactiveCache.getLists(\n        {\n          boardId: { $in: Boards.userBoardIds(this.userId) },\n          archived: false,\n        },\n        {\n          fields: { title: 1 },\n        },\n      )\n        .map(list => {\n          return list.title;\n        }),\n    ).sort();\n  },\n});\n\nLists.hookOptions.after.update = { fetchPrevious: false };\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Lists._collection.createIndex({ modifiedAt: -1 });\n    Lists._collection.createIndex({ boardId: 1 });\n    Lists._collection.createIndex({ archivedAt: -1 });\n  });\n\n  Lists.after.insert((userId, doc) => {\n    Activities.insert({\n      userId,\n      type: 'list',\n      activityType: 'createList',\n      boardId: doc.boardId,\n      listId: doc._id,\n      // this preserves the name so that the activity can be useful after the\n      // list is deleted\n      title: doc.title,\n    });\n  });\n\n  Lists.before.remove((userId, doc) => {\n    const cards = ReactiveCache.getCards({ listId: doc._id });\n    if (cards) {\n      cards.forEach(card => {\n        Cards.remove(card._id);\n      });\n    }\n    Activities.insert({\n      userId,\n      type: 'list',\n      activityType: 'removeList',\n      boardId: doc.boardId,\n      listId: doc._id,\n      title: doc.title,\n    });\n  });\n\n  Lists.after.update((userId, doc, fieldNames) => {\n    if (fieldNames.includes('title')) {\n      Activities.insert({\n        userId,\n        type: 'list',\n        activityType: 'changedListTitle',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    } else if (doc.archived)  {\n      Activities.insert({\n        userId,\n        type: 'list',\n        activityType: 'archivedList',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    } else if (fieldNames.includes('archived'))  {\n      Activities.insert({\n        userId,\n        type: 'list',\n        activityType: 'restoredList',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    }\n  });\n}\n\n//LISTS REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_lists\n   * @summary Get the list of Lists attached to a board\n   *\n   * @param {string} boardId the board ID\n   * @return_type [{_id: string,\n   *           title: string}]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/lists', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getLists({ boardId: paramBoardId, archived: false }).map(\n          function(doc) {\n            return {\n              _id: doc._id,\n              title: doc.title,\n            };\n          },\n        ),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_list\n   * @summary Get a List attached to a board\n   *\n   * @param {string} boardId the board ID\n   * @param {string} listId the List ID\n   * @return_type Lists\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/lists/:listId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getList({\n          _id: paramListId,\n          boardId: paramBoardId,\n          archived: false,\n        }),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation new_list\n   * @summary Add a List to a board\n   *\n   * @param {string} boardId the board ID\n   * @param {string} title the title of the List\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/lists', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const board = ReactiveCache.getBoard(paramBoardId);\n      const id = Lists.insert({\n        title: req.body.title,\n        boardId: paramBoardId,\n        sort: board.lists().length,\n      });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation edit_list\n   * @summary Edit a List\n   *\n   * @description This updates a list on a board.\n   * You can update the title, color, wipLimit, starred, and collapsed properties.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} listId the ID of the list to update\n   * @param {string} [title] the new title of the list\n   * @param {string} [color] the new color of the list\n   * @param {Object} [wipLimit] the WIP limit configuration\n   * @param {boolean} [starred] whether the list is starred\n   * @param {boolean} [collapsed] whether the list is collapsed\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('PUT', '/api/boards/:boardId/lists/:listId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      let updated = false;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      const list = ReactiveCache.getList({\n        _id: paramListId,\n        boardId: paramBoardId,\n        archived: false,\n      });\n\n      if (!list) {\n        JsonRoutes.sendResult(res, {\n          code: 404,\n          data: { error: 'List not found' },\n        });\n        return;\n      }\n\n      // Update title if provided\n      if (req.body.title) {\n        const newTitle = req.body.title;\n        Lists.direct.update(\n          {\n            _id: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              title: newTitle,\n            },\n          },\n        );\n        updated = true;\n      }\n\n      // Update color if provided\n      if (req.body.color) {\n        const newColor = req.body.color;\n        Lists.direct.update(\n          {\n            _id: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              color: newColor,\n            },\n          },\n        );\n        updated = true;\n      }\n\n      // Update starred status if provided\n      if (req.body.hasOwnProperty('starred')) {\n        const newStarred = req.body.starred;\n        Lists.direct.update(\n          {\n            _id: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              starred: newStarred,\n            },\n          },\n        );\n        updated = true;\n      }\n\n      // Update collapsed status if provided\n      if (req.body.hasOwnProperty('collapsed')) {\n        const newCollapsed = req.body.collapsed;\n        Lists.direct.update(\n          {\n            _id: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              collapsed: newCollapsed,\n            },\n          },\n        );\n        updated = true;\n      }\n\n      // Update wipLimit if provided\n      if (req.body.wipLimit) {\n        const newWipLimit = req.body.wipLimit;\n        Lists.direct.update(\n          {\n            _id: paramListId,\n            boardId: paramBoardId,\n            archived: false,\n          },\n          {\n            $set: {\n              wipLimit: newWipLimit,\n            },\n          },\n        );\n        updated = true;\n      }\n\n      // Check if update is true or false\n      if (!updated) {\n        JsonRoutes.sendResult(res, {\n          code: 404,\n          data: {\n            message: 'Error',\n          },\n        });\n        return;\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramListId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_list\n   * @summary Delete a List\n   *\n   * @description This **deletes** a list from a board.\n   * The list is not put in the recycle bin.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} listId the ID of the list to remove\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('DELETE', '/api/boards/:boardId/lists/:listId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramListId = req.params.listId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      Lists.remove({ _id: paramListId, boardId: paramBoardId });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramListId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n}\n\nexport default Lists;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nOrg = new Mongo.Collection('org');\n\n/**\n * A Organization in Wekan. A Enterprise in Trello.\n */\nOrg.attachSchema(\n  new SimpleSchema({\n    orgDisplayName: {\n      /**\n       * the name to display for the organization\n       */\n      type: String,\n      optional: true,\n    },\n    orgDesc: {\n      /**\n       * the description the organization\n       */\n      type: String,\n      optional: true,\n      max: 190,\n    },\n    orgShortName: {\n      /**\n       * short name of the organization\n       */\n      type: String,\n      optional: true,\n      max: 255,\n    },\n    orgAutoAddUsersWithDomainName: {\n      /**\n       * automatically add users with domain name\n       */\n      type: String,\n      optional: true,\n      max: 255,\n    },\n    orgWebsite: {\n      /**\n       * website of the organization\n       */\n      type: String,\n      optional: true,\n      max: 255,\n    },\n    orgIsActive: {\n      /**\n       * status of the organization\n       */\n      type: Boolean,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * creation date of the organization\n       */\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nif (Meteor.isServer) {\n  Org.allow({\n    insert(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    update(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    remove(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    fetch: [],\n  });\n\n\n  Meteor.methods({\n    setCreateOrg(\n      orgDisplayName,\n      orgDesc,\n      orgShortName,\n      orgAutoAddUsersWithDomainName,\n      orgWebsite,\n      orgIsActive,\n    ) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(orgDisplayName, String);\n        check(orgDesc, String);\n        check(orgShortName, String);\n        check(orgAutoAddUsersWithDomainName, String);\n        check(orgWebsite, String);\n        check(orgIsActive, Boolean);\n\n        const nOrgNames = ReactiveCache.getOrgs({ orgShortName }).length;\n        if (nOrgNames > 0) {\n          throw new Meteor.Error('orgname-already-taken');\n        } else {\n          Org.insert({\n            orgDisplayName,\n            orgDesc,\n            orgShortName,\n            orgAutoAddUsersWithDomainName,\n            orgWebsite,\n            orgIsActive,\n          });\n        }\n      }\n    },\n    setCreateOrgFromOidc(\n      orgDisplayName,\n      orgDesc,\n      orgShortName,\n      orgAutoAddUsersWithDomainName,\n      orgWebsite,\n      orgIsActive,\n    ) {\n      check(orgDisplayName, String);\n      check(orgDesc, String);\n      check(orgShortName, String);\n      check(orgAutoAddUsersWithDomainName, String);\n      check(orgWebsite, String);\n      check(orgIsActive, Boolean);\n\n      const nOrgNames = ReactiveCache.getOrgs({ orgShortName }).length;\n      if (nOrgNames > 0) {\n        throw new Meteor.Error('orgname-already-taken');\n      } else {\n        Org.insert({\n          orgDisplayName,\n          orgDesc,\n          orgShortName,\n          orgAutoAddUsersWithDomainName,\n          orgWebsite,\n          orgIsActive,\n        });\n      }\n    },\n    setOrgDisplayName(org, orgDisplayName) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgDisplayName, String);\n        Org.update(org, {\n          $set: { orgDisplayName: orgDisplayName },\n        });\n        Meteor.call('setUsersOrgsOrgDisplayName', org._id, orgDisplayName);\n      }\n    },\n\n    setOrgDesc(org, orgDesc) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgDesc, String);\n        Org.update(org, {\n          $set: { orgDesc: orgDesc },\n        });\n      }\n    },\n\n    setOrgShortName(org, orgShortName) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgShortName, String);\n        Org.update(org, {\n          $set: { orgShortName: orgShortName },\n        });\n      }\n    },\n\n    setAutoAddUsersWithDomainName(org, orgAutoAddUsersWithDomainName) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgAutoAddUsersWithDomainName, String);\n        Org.update(org, {\n          $set: { orgAutoAddUsersWithDomainName: orgAutoAddUsersWithDomainName },\n        });\n      }\n    },\n\n    setOrgIsActive(org, orgIsActive) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgIsActive, Boolean);\n        Org.update(org, {\n          $set: { orgIsActive: orgIsActive },\n        });\n      }\n    },\n    setOrgAllFieldsFromOidc(\n      org,\n      orgDisplayName,\n      orgDesc,\n      orgShortName,\n      orgAutoAddUsersWithDomainName,\n      orgWebsite,\n      orgIsActive,\n    ) {\n      check(org, Object);\n      check(orgDisplayName, String);\n      check(orgDesc, String);\n      check(orgShortName, String);\n      check(orgAutoAddUsersWithDomainName, String);\n      check(orgWebsite, String);\n      check(orgIsActive, Boolean);\n      Org.update(org, {\n        $set: {\n          orgDisplayName: orgDisplayName,\n          orgDesc: orgDesc,\n          orgShortName: orgShortName,\n          orgAutoAddUsersWithDomainName: orgAutoAddUsersWithDomainName,\n          orgWebsite: orgWebsite,\n          orgIsActive: orgIsActive,\n        },\n      });\n      Meteor.call('setUsersOrgsOrgDisplayName', org._id, orgDisplayName);\n    },\n    setOrgAllFields(\n      org,\n      orgDisplayName,\n      orgDesc,\n      orgShortName,\n      orgAutoAddUsersWithDomainName,\n      orgWebsite,\n      orgIsActive,\n    ) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(org, Object);\n        check(orgDisplayName, String);\n        check(orgDesc, String);\n        check(orgShortName, String);\n        check(orgAutoAddUsersWithDomainName, String);\n        check(orgWebsite, String);\n        check(orgIsActive, Boolean);\n        Org.update(org, {\n          $set: {\n            orgDisplayName: orgDisplayName,\n            orgDesc: orgDesc,\n            orgShortName: orgShortName,\n            orgAutoAddUsersWithDomainName: orgAutoAddUsersWithDomainName,\n            orgWebsite: orgWebsite,\n            orgIsActive: orgIsActive,\n          },\n        });\n        Meteor.call('setUsersOrgsOrgDisplayName', org._id, orgDisplayName);\n      }\n    },\n  });\n}\n\nif (Meteor.isServer) {\n  // Index for Organization name.\n  Meteor.startup(() => {\n    // Org._collection.createIndex({ name: -1 });\n    Org._collection.createIndex({ orgDisplayName: 1 });\n  });\n}\n\nexport default Org;\n","OrgUser = new Mongo.Collection('orgUser');\n\n/**\n * A Organization User in wekan\n */\nOrgUser.attachSchema(\n  new SimpleSchema({\n    _id: {\n      /**\n       * the organization user's id\n       */\n      type: Number,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return incrementCounter('counters', 'orgUserId', 1);\n        }\n      },\n    },\n    orgId: {\n      /**\n       * the organization id\n       */\n      type: Number,\n      optional: true,\n    },\n    userId: {\n      /**\n       * the user id\n       */\n      type: Number,\n      optional: true,\n    },\n    role: {\n      /**\n       * the role of user\n       */\n      type: String,\n      optional: true,\n      max: 20,\n    },\n    createdAt: {\n      /**\n       * creation date of the organization user\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nif (Meteor.isServer) {\n  // Index for Organization User.\n  Meteor.startup(() => {\n    OrgUser._collection.createIndex({ orgId: -1 });\n    OrgUser._collection.createIndex({ orgId: -1, userId: -1 });\n  });\n}\n\nexport default OrgUser;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\n\nRules = new Mongo.Collection('rules');\n\nRules.attachSchema(\n  new SimpleSchema({\n    title: {\n      type: String,\n      optional: false,\n    },\n    triggerId: {\n      type: String,\n      optional: false,\n    },\n    actionId: {\n      type: String,\n      optional: false,\n    },\n    boardId: {\n      type: String,\n      optional: false,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nRules.mutations({\n  rename(description) {\n    return { $set: { description } };\n  },\n});\n\nRules.helpers({\n  getAction() {\n    return ReactiveCache.getAction(this.actionId);\n  },\n  getTrigger() {\n    return ReactiveCache.getTrigger(this.triggerId);\n  },\n  board() {\n    return ReactiveCache.getBoard(this.boardId);\n  },\n  trigger() {\n    return ReactiveCache.getTrigger(this.triggerId);\n  },\n  action() {\n    return ReactiveCache.getAction(this.actionId);\n  },\n});\n\nRules.allow({\n  insert(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Rules._collection.createIndex({ modifiedAt: -1 });\n  });\n}\n\nexport default Rules;\n","/**\n * Executes a function only if we are on the server. Use in combination\n * with package-sepcific loader functions to create a \"nested\" import that\n * prevents leakage of server-dependencies to the client.\n * @param fct {function} the function to be executed on the server\n * @return {*} a return value from the function, if there is any\n */\nexport const runOnServer = fct => Meteor.isServer && fct();\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { TAPi18n } from '/imports/i18n';\n//var nodemailer = require('nodemailer');\n\n// Sandstorm context is detected using the METEOR_SETTINGS environment variable\n// in the package definition.\nconst isSandstorm =\n  Meteor.settings && Meteor.settings.public && Meteor.settings.public.sandstorm;\n\nSettings = new Mongo.Collection('settings');\n\nSettings.attachSchema(\n  new SimpleSchema({\n    disableRegistration: {\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n    },\n    disableForgotPassword: {\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n    },\n    'mailServer.username': {\n      type: String,\n      optional: true,\n    },\n    'mailServer.password': {\n      type: String,\n      optional: true,\n    },\n    'mailServer.host': {\n      type: String,\n      optional: true,\n    },\n    'mailServer.port': {\n      type: String,\n      optional: true,\n    },\n    'mailServer.enableTLS': {\n      type: Boolean,\n      optional: true,\n    },\n    'mailServer.from': {\n      type: String,\n      optional: true,\n    },\n    productName: {\n      type: String,\n      optional: true,\n    },\n    displayAuthenticationMethod: {\n      type: Boolean,\n      optional: true,\n    },\n    defaultAuthenticationMethod: {\n      type: String,\n      optional: false,\n    },\n    spinnerName: {\n      type: String,\n      optional: true,\n    },\n    hideLogo: {\n      type: Boolean,\n      optional: true,\n    },\n    hideCardCounterList: {\n      type: Boolean,\n      optional: true,\n    },\n    hideBoardMemberList: {\n      type: Boolean,\n      optional: true,\n    },\n    customLoginLogoImageUrl: {\n      type: String,\n      optional: true,\n    },\n    customLoginLogoLinkUrl: {\n      type: String,\n      optional: true,\n    },\n    customHelpLinkUrl: {\n      type: String,\n      optional: true,\n    },\n    textBelowCustomLoginLogo: {\n      type: String,\n      optional: true,\n    },\n    automaticLinkedUrlSchemes: {\n      type: String,\n      optional: true,\n    },\n    customTopLeftCornerLogoImageUrl: {\n      type: String,\n      optional: true,\n    },\n    customTopLeftCornerLogoLinkUrl: {\n      type: String,\n      optional: true,\n    },\n    customTopLeftCornerLogoHeight: {\n      type: String,\n      optional: true,\n    },\n    oidcBtnText: {\n      type: String,\n      optional: true,\n    },\n    mailDomainName: {\n      type: String,\n      optional: true,\n    },\n    legalNotice: {\n      type: String,\n      optional: true,\n    },\n    accessibilityPageEnabled: {\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n    },\n    accessibilityTitle: {\n      type: String,\n      optional: true,\n    },\n    accessibilityContent: {\n      type: String,\n      optional: true,\n    },\n    createdAt: {\n      type: Date,\n      denyUpdate: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\nSettings.helpers({\n  mailUrl() {\n    if (!this.mailServer.host) {\n      return null;\n    }\n    const protocol = this.mailServer.enableTLS ? 'smtps://' : 'smtp://';\n    if (!this.mailServer.username && !this.mailServer.password) {\n      return `${protocol}${this.mailServer.host}:${this.mailServer.port}/`;\n    }\n    return `${protocol}${this.mailServer.username}:${encodeURIComponent(\n      this.mailServer.password,\n    )}@${this.mailServer.host}:${this.mailServer.port}/`;\n  },\n});\nSettings.allow({\n  update(userId) {\n    const user = ReactiveCache.getUser(userId);\n    return user && user.isAdmin;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Settings._collection.createIndex({ modifiedAt: -1 });\n    const setting = ReactiveCache.getCurrentSetting();\n    if (!setting) {\n      const now = new Date();\n      const domain = process.env.ROOT_URL.match(\n        /\\/\\/(?:www\\.)?(.*)?(?:\\/)?/,\n      )[1];\n      const from = `Boards Support <support@${domain}>`;\n      const defaultSetting = {\n        disableRegistration: false,\n        mailServer: {\n          username: '',\n          password: '',\n          host: '',\n          port: '',\n          enableTLS: false,\n          from,\n        },\n        createdAt: now,\n        modifiedAt: now,\n        displayAuthenticationMethod: true,\n        defaultAuthenticationMethod: 'password',\n      };\n      Settings.insert(defaultSetting);\n    }\n    if (isSandstorm) {\n      // At Sandstorm, Admin Panel has SMTP settings\n      const newSetting = ReactiveCache.getCurrentSetting();\n      if (!process.env.MAIL_URL && newSetting.mailUrl())\n        process.env.MAIL_URL = newSetting.mailUrl();\n      Accounts.emailTemplates.from = process.env.MAIL_FROM\n        ? process.env.MAIL_FROM\n        : newSetting.mailServer.from;\n    } else {\n      // Not running on Sandstorm, so using environment variables\n      Accounts.emailTemplates.from = process.env.MAIL_FROM;\n    }\n  });\n  if (isSandstorm) {\n    // At Sandstorm Wekan Admin Panel, save SMTP settings.\n    Settings.after.update((userId, doc, fieldNames) => {\n      // assign new values to mail-from & MAIL_URL in environment\n      if (_.contains(fieldNames, 'mailServer') && doc.mailServer.host) {\n        const protocol = doc.mailServer.enableTLS ? 'smtps://' : 'smtp://';\n        if (!doc.mailServer.username && !doc.mailServer.password) {\n          process.env.MAIL_URL = `${protocol}${doc.mailServer.host}:${doc.mailServer.port}/`;\n        } else {\n          process.env.MAIL_URL = `${protocol}${\n            doc.mailServer.username\n          }:${encodeURIComponent(doc.mailServer.password)}@${\n            doc.mailServer.host\n          }:${doc.mailServer.port}/`;\n        }\n        Accounts.emailTemplates.from = doc.mailServer.from;\n      }\n    });\n  }\n\n  function getRandomNum(min, max) {\n    const range = max - min;\n    const rand = Math.random();\n    return min + Math.round(rand * range);\n  }\n\n  function getEnvVar(name) {\n    const value = process.env[name];\n    if (value) {\n      return value;\n    }\n    throw new Meteor.Error([\n      'var-not-exist',\n      `The environment variable ${name} does not exist`,\n    ]);\n  }\n\n  function loadOidcConfig(service){\n    check(service, String);\n    var config = ServiceConfiguration.configurations.findOne({service: service});\n    return config;\n  }\n\n  function sendInvitationEmail(_id) {\n    const icode = ReactiveCache.getInvitationCode(_id);\n    const author = ReactiveCache.getCurrentUser();\n    try {\n      const fullName = ReactiveCache.getUser(icode.authorId)?.profile?.fullname || \"\";\n\n      const params = {\n        email: icode.email,\n        inviter: fullName != \"\" ? fullName + \" (\" + ReactiveCache.getUser(icode.authorId).username + \" )\" : ReactiveCache.getUser(icode.authorId).username,\n        user: icode.email.split('@')[0],\n        icode: icode.code,\n        url: FlowRouter.url('sign-up'),\n      };\n      const lang = author.getLanguage();\n      // Use EmailLocalization utility to handle email in the proper language\n      if (typeof EmailLocalization !== 'undefined') {\n        EmailLocalization.sendEmail({\n          to: icode.email,\n          from: Accounts.emailTemplates.from,\n          subject: 'email-invite-register-subject',\n          text: 'email-invite-register-text',\n          params: params,\n          language: lang\n        });\n      } else {\n        // Fallback if EmailLocalization is not available\n        Email.send({\n          to: icode.email,\n          from: Accounts.emailTemplates.from,\n          subject: TAPi18n.__('email-invite-register-subject', params, lang),\n          text: TAPi18n.__('email-invite-register-text', params, lang),\n        });\n      }\n    } catch (e) {\n      InvitationCodes.remove(_id);\n      throw new Meteor.Error('email-fail', e.message);\n    }\n  }\n\n  function isNonAdminAllowedToSendMail(currentUser){\n    const currSett = ReactiveCache.getCurrentSetting();\n    let isAllowed = false;\n    if(currSett && currSett != undefined && currSett.disableRegistration && currSett.mailDomainName !== undefined && currSett.mailDomainName != \"\"){\n      for(let i = 0; i < currentUser.emails.length; i++) {\n        if(currentUser.emails[i].address.endsWith(currSett.mailDomainName)){\n          isAllowed = true;\n          break;\n        }\n      }\n    }\n    return isAllowed;\n  }\n\n  function isLdapEnabled() {\n    return (\n      process.env.LDAP_ENABLE === 'true' || process.env.LDAP_ENABLE === true\n    );\n  }\n\n  function isOauth2Enabled() {\n    return (\n      process.env.OAUTH2_ENABLED === 'true' ||\n      process.env.OAUTH2_ENABLED === true\n    );\n  }\n\n  function isCasEnabled() {\n    return (\n      process.env.CAS_ENABLED === 'true' || process.env.CAS_ENABLED === true\n    );\n  }\n\n  function isApiEnabled() {\n    return process.env.WITH_API === 'true' || process.env.WITH_API === true;\n  }\n\n  Meteor.methods({\n    sendInvitation(emails, boards) {\n      let rc = 0;\n      check(emails, [String]);\n      check(boards, [String]);\n\n      const user = ReactiveCache.getCurrentUser();\n      if (!user.isAdmin && !isNonAdminAllowedToSendMail(user)) {\n        rc = -1;\n        throw new Meteor.Error('not-allowed');\n      }\n      emails.forEach(email => {\n        if (email && SimpleSchema.RegEx.Email.test(email)) {\n          // Checks if the email is already link to an account.\n          const userExist = ReactiveCache.getUser({ email });\n          if (userExist) {\n            rc = -1;\n            throw new Meteor.Error(\n              'user-exist',\n              `The user with the email ${email} has already an account.`,\n            );\n          }\n          // Checks if the email is already link to an invitation.\n          const invitation = ReactiveCache.getInvitationCode({ email });\n          if (invitation) {\n            InvitationCodes.update(invitation, {\n              $set: { boardsToBeInvited: boards },\n            });\n            sendInvitationEmail(invitation._id);\n          } else {\n            const code = getRandomNum(100000, 999999);\n            InvitationCodes.insert(\n              {\n                code,\n                email,\n                boardsToBeInvited: boards,\n                createdAt: new Date(),\n                authorId: Meteor.userId(),\n              },\n              function(err, _id) {\n                if (!err && _id) {\n                  sendInvitationEmail(_id);\n                } else {\n                  rc = -1;\n                  throw new Meteor.Error(\n                    'invitation-generated-fail',\n                    err.message,\n                  );\n                }\n              },\n            );\n          }\n        }\n      });\n      return rc;\n    },\n\n    sendSMTPTestEmail() {\n      if (!Meteor.userId()) {\n        throw new Meteor.Error('invalid-user');\n      }\n      const user = ReactiveCache.getCurrentUser();\n      if (!user.emails || !user.emails[0] || !user.emails[0].address) {\n        throw new Meteor.Error('email-invalid');\n      }\n      this.unblock();\n      const lang = user.getLanguage();\n      try {\n/*\n        if (process.env.MAIL_SERVICE !== '') {\n          let transporter = nodemailer.createTransport({\n            service: process.env.MAIL_SERVICE,\n            auth: {\n              user: process.env.MAIL_SERVICE_USER,\n              pass: process.env.MAIL_SERVICE_PASSWORD\n            },\n          })\n          let info = transporter.sendMail({\n            to: user.emails[0].address,\n            from: Accounts.emailTemplates.from,\n            subject: TAPi18n.__('email-smtp-test-subject', { lng: lang }),\n            text: TAPi18n.__('email-smtp-test-text', { lng: lang }),\n          })\n        } else {\n          Email.send({\n            to: user.emails[0].address,\n            from: Accounts.emailTemplates.from,\n            subject: TAPi18n.__('email-smtp-test-subject', { lng: lang }),\n            text: TAPi18n.__('email-smtp-test-text', { lng: lang }),\n          });\n        }\n*/\n        Email.send({\n          to: user.emails[0].address,\n          from: Accounts.emailTemplates.from,\n          subject: TAPi18n.__('email-smtp-test-subject', { lng: lang }),\n          text: TAPi18n.__('email-smtp-test-text', { lng: lang }),\n        });\n      } catch ({ message }) {\n        throw new Meteor.Error(\n          'email-fail',\n          `${TAPi18n.__('email-fail-text', { lng: lang })}: ${message}`,\n          message,\n        );\n      }\n      return {\n        message: 'email-sent',\n        email: user.emails[0].address,\n      };\n    },\n\n    getCustomUI() {\n      const setting = ReactiveCache.getCurrentSetting();\n      if (!setting.productName) {\n        return {\n          productName: '',\n        };\n      } else {\n        return {\n          productName: `${setting.productName}`,\n        };\n      }\n    },\n\n    isDisableRegistration() {\n      const setting = ReactiveCache.getCurrentSetting();\n      if (setting.disableRegistration === true) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n   isDisableForgotPassword() {\n      const setting = ReactiveCache.getCurrentSetting();\n      if (setting.disableForgotPassword === true) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    getMatomoConf() {\n      return {\n        address: getEnvVar('MATOMO_ADDRESS'),\n        siteId: getEnvVar('MATOMO_SITE_ID'),\n        doNotTrack: process.env.MATOMO_DO_NOT_TRACK || false,\n        withUserName: process.env.MATOMO_WITH_USERNAME || false,\n      };\n    },\n\n    _isLdapEnabled() {\n      return isLdapEnabled();\n    },\n\n    _isOauth2Enabled() {\n      return isOauth2Enabled();\n    },\n\n    _isCasEnabled() {\n      return isCasEnabled();\n    },\n\n    _isApiEnabled() {\n      return isApiEnabled();\n    },\n\n    // Gets all connection methods to use it in the Template\n    getAuthenticationsEnabled() {\n      return {\n        ldap: isLdapEnabled(),\n        oauth2: isOauth2Enabled(),\n        cas: isCasEnabled(),\n      };\n    },\n\n    getOauthServerUrl(){\n      return process.env.OAUTH2_SERVER_URL;\n    },\n    getOauthDashboardUrl(){\n      return process.env.DASHBOARD_URL;\n    },\n    getDefaultAuthenticationMethod() {\n      return process.env.DEFAULT_AUTHENTICATION_METHOD;\n    },\n\n    isPasswordLoginEnabled() {\n      return !(process.env.PASSWORD_LOGIN_ENABLED === 'false');\n    },\n    isOidcRedirectionEnabled(){\n      return process.env.OIDC_REDIRECTION_ENABLED === 'true' && Object.keys(loadOidcConfig(\"oidc\")).length > 0;\n    },\n    getServiceConfiguration(service){\n      return loadOidcConfig(service);\n      }\n  });\n}\n\nexport default Settings;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { ALLOWED_COLORS } from '/config/const';\n\nSwimlanes = new Mongo.Collection('swimlanes');\n\n/**\n * A swimlane is an line in the kaban board.\n */\nSwimlanes.attachSchema(\n  new SimpleSchema({\n    title: {\n      /**\n       * the title of the swimlane\n       */\n      type: String,\n    },\n    archived: {\n      /**\n       * is the swimlane archived?\n       */\n      type: Boolean,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return false;\n        }\n      },\n    },\n    archivedAt: {\n      /**\n       * latest archiving date of the swimlane\n       */\n      type: Date,\n      optional: true,\n    },\n    boardId: {\n      /**\n       * the ID of the board the swimlane is attached to\n       */\n      type: String,\n    },\n    createdAt: {\n      /**\n       * creation date of the swimlane\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    sort: {\n      /**\n       * the sort value of the swimlane\n       */\n      type: Number,\n      decimal: true,\n      // XXX We should probably provide a default\n      optional: true,\n    },\n    color: {\n      /**\n       * the color of the swimlane\n       */\n      type: String,\n      optional: true,\n      // silver is the default\n      allowedValues: ALLOWED_COLORS,\n    },\n    updatedAt: {\n      /**\n       * when was the swimlane last edited\n       */\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isUpdate || this.isUpsert || this.isInsert) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    type: {\n      /**\n       * The type of swimlane\n       */\n      type: String,\n      defaultValue: 'swimlane',\n    },\n    collapsed: {\n      /**\n       * is the swimlane collapsed\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n  }),\n);\n\nSwimlanes.allow({\n  insert(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardMemberCommentOnly(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  fetch: ['boardId'],\n});\n\nSwimlanes.helpers({\n  copy(boardId) {\n    const oldId = this._id;\n    const oldBoardId = this.boardId;\n    this.boardId = boardId;\n    delete this._id;\n    const _id = Swimlanes.insert(this);\n\n    const query = {\n      swimlaneId: { $in: [oldId, ''] },\n      archived: false,\n    };\n    if (oldBoardId) {\n      query.boardId = oldBoardId;\n    }\n\n    // Copy all lists in swimlane\n    ReactiveCache.getLists(query).forEach(list => {\n      list.type = 'list';\n      list.swimlaneId = oldId;\n      list.boardId = boardId;\n      list.copy(boardId, _id);\n    });\n  },\n\n  move(toBoardId) {\n    this.lists().forEach(list => {\n      const toList = ReactiveCache.getList({\n        boardId: toBoardId,\n        title: list.title,\n        archived: false,\n      });\n\n      let toListId;\n      if (toList) {\n        toListId = toList._id;\n      } else {\n        toListId = Lists.insert({\n          title: list.title,\n          boardId: toBoardId,\n          type: list.type,\n          archived: false,\n          wipLimit: list.wipLimit,\n        });\n      }\n\n      ReactiveCache.getCards({\n        listId: list._id,\n        swimlaneId: this._id,\n      }).forEach(card => {\n        card.move(toBoardId, this._id, toListId);\n      });\n    });\n\n    Swimlanes.update(this._id, {\n      $set: {\n        boardId: toBoardId,\n      },\n    });\n\n    // make sure there is a default swimlane\n    this.board().getDefaultSwimline();\n  },\n\n  cards() {\n    const ret = ReactiveCache.getCards(\n      Filter.mongoSelector({\n        swimlaneId: this._id,\n        archived: false,\n      }),\n      { sort: ['sort'] },\n    );\n    return ret;\n  },\n\n  lists() {\n    return this.draggableLists();\n  },\n  newestLists() {\n    // sorted lists from newest to the oldest, by its creation date or its cards' last modification date\n    return ReactiveCache.getLists(\n      {\n        boardId: this.boardId,\n        swimlaneId: { $in: [this._id, ''] },\n        archived: false,\n      },\n      { sort: { modifiedAt: -1 } },\n    );\n  },\n  draggableLists() {\n    return ReactiveCache.getLists(\n      {\n        boardId: this.boardId,\n        swimlaneId: { $in: [this._id, ''] },\n        //archived: false,\n      },\n      { sort: ['sort'] },\n    );\n  },\n\n  myLists() {\n    return ReactiveCache.getLists({ swimlaneId: this._id });\n  },\n\n  allCards() {\n    const ret = ReactiveCache.getCards({ swimlaneId: this._id });\n    return ret;\n  },\n\n  isCollapsed() {\n    return this.collapsed === true;\n  },\n\n  board() {\n    return ReactiveCache.getBoard(this.boardId);\n  },\n\n  colorClass() {\n    if (this.color) return `swimlane-${this.color}`;\n    return '';\n  },\n\n  isTemplateSwimlane() {\n    return this.type === 'template-swimlane';\n  },\n\n  isTemplateContainer() {\n    return this.type === 'template-container';\n  },\n\n  isListTemplatesSwimlane() {\n    const user = ReactiveCache.getCurrentUser();\n    return (user.profile || {}).listTemplatesSwimlaneId === this._id;\n  },\n\n  isCardTemplatesSwimlane() {\n    const user = ReactiveCache.getCurrentUser();\n    return (user.profile || {}).cardTemplatesSwimlaneId === this._id;\n  },\n\n  isBoardTemplatesSwimlane() {\n    const user = ReactiveCache.getCurrentUser();\n    return (user.profile || {}).boardTemplatesSwimlaneId === this._id;\n  },\n\n  remove() {\n    Swimlanes.remove({ _id: this._id });\n  },\n});\n\nSwimlanes.mutations({\n  rename(title) {\n    return { $set: { title } };\n  },\n\n  collapse(enable = true) {\n    return { $set: { collapsed: !!enable } };\n  },\n\n  archive() {\n    if (this.isTemplateSwimlane()) {\n      this.myLists().forEach(list => {\n        return list.archive();\n      });\n    }\n    return { $set: { archived: true, archivedAt: new Date() } };\n  },\n\n  restore() {\n    if (this.isTemplateSwimlane()) {\n      this.myLists().forEach(list => {\n        return list.restore();\n      });\n    }\n    return { $set: { archived: false } };\n  },\n\n  setColor(newColor) {\n    return {\n      $set: {\n        color: newColor,\n      },\n    };\n  },\n});\n\nSwimlanes.userArchivedSwimlanes = userId => {\n  return ReactiveCache.getSwimlanes({\n    boardId: { $in: Boards.userBoardIds(userId, null) },\n    archived: true,\n  })\n};\n\nSwimlanes.userArchivedSwimlaneIds = () => {\n  return Swimlanes.userArchivedSwimlanes().map(swim => { return swim._id; });\n};\n\nSwimlanes.archivedSwimlanes = () => {\n  return ReactiveCache.getSwimlanes({ archived: true });\n};\n\nSwimlanes.archivedSwimlaneIds = () => {\n  return Swimlanes.archivedSwimlanes().map(swim => {\n    return swim._id;\n  });\n};\n\nSwimlanes.hookOptions.after.update = { fetchPrevious: false };\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Swimlanes._collection.createIndex({ modifiedAt: -1 });\n    Swimlanes._collection.createIndex({ boardId: 1 });\n  });\n\n  Swimlanes.after.insert((userId, doc) => {\n    Activities.insert({\n      userId,\n      type: 'swimlane',\n      activityType: 'createSwimlane',\n      boardId: doc.boardId,\n      swimlaneId: doc._id,\n    });\n  });\n\n  Swimlanes.before.remove(function(userId, doc) {\n    const lists = ReactiveCache.getLists(\n      {\n        boardId: doc.boardId,\n        swimlaneId: { $in: [doc._id, ''] },\n        archived: false,\n      },\n      { sort: ['sort'] },\n    );\n\n    if (lists.length < 2) {\n      lists.forEach(list => {\n        list.remove();\n      });\n    } else {\n      Cards.remove({ swimlaneId: doc._id });\n    }\n\n    Activities.insert({\n      userId,\n      type: 'swimlane',\n      activityType: 'removeSwimlane',\n      boardId: doc.boardId,\n      swimlaneId: doc._id,\n      title: doc.title,\n    });\n  });\n\n  Swimlanes.after.update((userId, doc, fieldNames) => {\n    if (fieldNames.includes('title')) {\n      Activities.insert({\n        userId,\n        type: 'swimlane',\n        activityType: 'changedSwimlaneTitle',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    } else if (doc.archived)  {\n      Activities.insert({\n        userId,\n        type: 'swimlane',\n        activityType: 'archivedSwimlane',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    } else if (fieldNames.includes('archived'))  {\n      Activities.insert({\n        userId,\n        type: 'swimlane',\n        activityType: 'restoredSwimlane',\n        listId: doc._id,\n        boardId: doc.boardId,\n        // this preserves the name so that the activity can be useful after the\n        // list is deleted\n        title: doc.title,\n      });\n    }\n  });\n}\n\n//SWIMLANE REST API\nif (Meteor.isServer) {\n  /**\n   * @operation get_all_swimlanes\n   *\n   * @summary Get the list of swimlanes attached to a board\n   *\n   * @param {string} boardId the ID of the board\n   * @return_type [{_id: string,\n   *                title: string}]\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/swimlanes', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getSwimlanes({ boardId: paramBoardId, archived: false }).map(\n          function(doc) {\n            return {\n              _id: doc._id,\n              title: doc.title,\n            };\n          },\n        ),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_swimlane\n   *\n   * @summary Get a swimlane\n   *\n   * @param {string} boardId the ID of the board\n   * @param {string} swimlaneId the ID of the swimlane\n   * @return_type Swimlanes\n   */\n  JsonRoutes.add('GET', '/api/boards/:boardId/swimlanes/:swimlaneId', function(\n    req,\n    res,\n  ) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramSwimlaneId = req.params.swimlaneId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: ReactiveCache.getSwimlane({\n          _id: paramSwimlaneId,\n          boardId: paramBoardId,\n          archived: false,\n        }),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation new_swimlane\n   *\n   * @summary Add a swimlane to a board\n   *\n   * @param {string} boardId the ID of the board\n   * @param {string} title the new title of the swimlane\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/boards/:boardId/swimlanes', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n\n      const board = ReactiveCache.getBoard(paramBoardId);\n      const id = Swimlanes.insert({\n        title: req.body.title,\n        boardId: paramBoardId,\n        sort: board.swimlanes().length,\n      });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation edit_swimlane\n   *\n   * @summary Edit the title of a swimlane\n   *\n   * @param {string} boardId the ID of the board\n   * @param {string} swimlaneId the ID of the swimlane to edit\n   * @param {string} title the new title of the swimlane\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('PUT', '/api/boards/:boardId/swimlanes/:swimlaneId', function(req, res) {\n    try {\n      const paramBoardId = req.params.boardId;\n      const paramSwimlaneId = req.params.swimlaneId;\n      Authentication.checkBoardAccess(req.userId, paramBoardId);\n      const board = ReactiveCache.getBoard(paramBoardId);\n      const swimlane = ReactiveCache.getSwimlane({\n        _id: paramSwimlaneId,\n        boardId: paramBoardId,\n      });\n      if (!swimlane) {\n        throw new Meteor.Error('not-found', 'Swimlane not found');\n      }\n      Swimlanes.direct.update(\n        { _id: paramSwimlaneId },\n        { $set: { title: req.body.title } }\n      );\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: paramSwimlaneId,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_swimlane\n   *\n   * @summary Delete a swimlane\n   *\n   * @description The swimlane will be deleted, not moved to the recycle bin\n   *\n   * @param {string} boardId the ID of the board\n   * @param {string} swimlaneId the ID of the swimlane\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add(\n    'DELETE',\n    '/api/boards/:boardId/swimlanes/:swimlaneId',\n    function(req, res) {\n      try {\n        const paramBoardId = req.params.boardId;\n        const paramSwimlaneId = req.params.swimlaneId;\n        Authentication.checkBoardAccess(req.userId, paramBoardId);\n        Swimlanes.remove({ _id: paramSwimlaneId, boardId: paramBoardId });\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: {\n            _id: paramSwimlaneId,\n          },\n        });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n}\n\nexport default Swimlanes;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nTableVisibilityModeSettings = new Mongo.Collection('tableVisibilityModeSettings');\n\nTableVisibilityModeSettings.attachSchema(\n  new SimpleSchema({\n    _id: {\n      type: String,\n    },\n    booleanValue: {\n      type: Boolean,\n      optional: true,\n    },\n    sort: {\n      type: Number,\n      decimal: true,\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nTableVisibilityModeSettings.allow({\n  update(userId) {\n    const user = ReactiveCache.getUser(userId);\n    return user && user.isAdmin;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    TableVisibilityModeSettings._collection.createIndex({ modifiedAt: -1 });\n    TableVisibilityModeSettings.upsert(\n      { _id: 'tableVisibilityMode-allowPrivateOnly' },\n      {\n        $setOnInsert: {\n          booleanValue: false,\n          sort: 0,\n        },\n      },\n    );\n  });\n}\n\nTableVisibilityModeSettings.helpers({\n  allowPrivateOnly() {\n    return TableVisibilityModeSettings.findOne('tableVisibilityMode-allowPrivateOnly').booleanValue;\n  },\n});\n\nexport default TableVisibilityModeSettings;\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nTeam = new Mongo.Collection('team');\n\n/**\n * A Team in Wekan. Organization in Trello.\n */\nTeam.attachSchema(\n  new SimpleSchema({\n    teamDisplayName: {\n      /**\n       * the name to display for the team\n       */\n      type: String,\n      optional: true,\n    },\n    teamDesc: {\n      /**\n       * the description the team\n       */\n      type: String,\n      optional: true,\n      max: 190,\n    },\n    teamShortName: {\n      /**\n       * short name of the team\n       */\n      type: String,\n      optional: true,\n      max: 255,\n    },\n    teamWebsite: {\n      /**\n       * website of the team\n       */\n      type: String,\n      optional: true,\n      max: 255,\n    },\n    teamIsActive: {\n      /**\n       * status of the team\n       */\n      type: Boolean,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * creation date of the team\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nif (Meteor.isServer) {\n  Team.allow({\n    insert(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    update(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    remove(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    fetch: [],\n  });\n\n  Meteor.methods({\n    setCreateTeam(\n      teamDisplayName,\n      teamDesc,\n      teamShortName,\n      teamWebsite,\n      teamIsActive,\n    ) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(teamDisplayName, String);\n        check(teamDesc, String);\n        check(teamShortName, String);\n        check(teamWebsite, String);\n        check(teamIsActive, Boolean);\n\n        const nTeamNames = ReactiveCache.getTeams({ teamShortName }).length;\n        if (nTeamNames > 0) {\n          throw new Meteor.Error('teamname-already-taken');\n        } else {\n          Team.insert({\n            teamDisplayName,\n            teamDesc,\n            teamShortName,\n            teamWebsite,\n            teamIsActive,\n          });\n        }\n      }\n    },\n    setCreateTeamFromOidc(\n      teamDisplayName,\n      teamDesc,\n      teamShortName,\n      teamWebsite,\n      teamIsActive,\n    ) {\n      check(teamDisplayName, String);\n      check(teamDesc, String);\n      check(teamShortName, String);\n      check(teamWebsite, String);\n      check(teamIsActive, Boolean);\n      const nTeamNames = ReactiveCache.getTeams({ teamShortName }).length;\n      if (nTeamNames > 0) {\n        throw new Meteor.Error('teamname-already-taken');\n      } else {\n        Team.insert({\n          teamDisplayName,\n          teamDesc,\n          teamShortName,\n          teamWebsite,\n          teamIsActive,\n        });\n      }\n    },\n    setTeamDisplayName(team, teamDisplayName) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(team, Object);\n        check(teamDisplayName, String);\n        Team.update(team, {\n          $set: { teamDisplayName: teamDisplayName },\n        });\n        Meteor.call('setUsersTeamsTeamDisplayName', team._id, teamDisplayName);\n      }\n    },\n\n    setTeamDesc(team, teamDesc) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(team, Object);\n        check(teamDesc, String);\n        Team.update(team, {\n          $set: { teamDesc: teamDesc },\n        });\n      }\n    },\n\n    setTeamShortName(team, teamShortName) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(team, Object);\n        check(teamShortName, String);\n        Team.update(team, {\n          $set: { teamShortName: teamShortName },\n        });\n      }\n    },\n\n    setTeamIsActive(team, teamIsActive) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(team, Object);\n        check(teamIsActive, Boolean);\n        Team.update(team, {\n          $set: { teamIsActive: teamIsActive },\n        });\n      }\n    },\n    setTeamAllFieldsFromOidc(\n      team,\n      teamDisplayName,\n      teamDesc,\n      teamShortName,\n      teamWebsite,\n      teamIsActive,\n    ) {\n        check(team, Object);\n        check(teamDisplayName, String);\n        check(teamDesc, String);\n        check(teamShortName, String);\n        check(teamWebsite, String);\n        check(teamIsActive, Boolean);\n        Team.update(team, {\n          $set: {\n            teamDisplayName: teamDisplayName,\n            teamDesc: teamDesc,\n            teamShortName: teamShortName,\n            teamWebsite: teamWebsite,\n            teamIsActive: teamIsActive,\n          },\n        });\n        Meteor.call('setUsersTeamsTeamDisplayName', team._id, teamDisplayName);\n      },\n    setTeamAllFields(\n      team,\n      teamDisplayName,\n      teamDesc,\n      teamShortName,\n      teamWebsite,\n      teamIsActive,\n    ) {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        check(team, Object);\n        check(teamDisplayName, String);\n        check(teamDesc, String);\n        check(teamShortName, String);\n        check(teamWebsite, String);\n        check(teamIsActive, Boolean);\n        Team.update(team, {\n          $set: {\n            teamDisplayName: teamDisplayName,\n            teamDesc: teamDesc,\n            teamShortName: teamShortName,\n            teamWebsite: teamWebsite,\n            teamIsActive: teamIsActive,\n          },\n        });\n        Meteor.call('setUsersTeamsTeamDisplayName', team._id, teamDisplayName);\n      }\n    },\n  });\n}\n\nif (Meteor.isServer) {\n  // Index for Team name.\n  Meteor.startup(() => {\n    Team._collection.createIndex({ teamDisplayName: 1 });\n  });\n}\n\nexport default Team;\n","Translation = new Mongo.Collection('translation');\n\n/**\n * A Organization User in wekan\n */\nTranslation.attachSchema(\n  new SimpleSchema({\n    language: {\n      /**\n       * the language\n       */\n      type: String,\n      max: 5,\n    },\n    text: {\n      /**\n       * the text\n       */\n      type: String,\n    },\n    translationText: {\n      /**\n       * the translation text\n       */\n      type: String,\n      optional: true,\n    },\n    createdAt: {\n      /**\n       * creation date of the translation custom string\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nif (Meteor.isServer) {\n  Translation.allow({\n    insert(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    update(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    remove(userId, doc) {\n      const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n      if (user?.isAdmin)\n        return true;\n      if (!user) {\n        return false;\n      }\n      return doc._id === userId;\n    },\n    fetch: [],\n  });\n\n  Meteor.methods({\n    setCreateTranslation(\n      language,\n      text,\n      translationText,\n    ) {\n      check(language, String);\n      check(text, String);\n      check(translationText, String);\n\n      const nTexts = ReactiveCache.getTranslations({ language, text }).length;\n      if (nTexts > 0) {\n        throw new Meteor.Error('text-already-taken');\n      } else {\n        Translation.insert({\n          language,\n          text,\n          translationText,\n        });\n      }\n    },\n    setTranslationText(translation, translationText) {\n      check(translation, Object);\n      check(translationText, String);\n      Translation.update(translation, {\n        $set: { translationText: translationText },\n      });\n    },\n  });\n}\n\nif (Meteor.isServer) {\n  // Index for Organization User.\n  Meteor.startup(() => {\n    Translation._collection.createIndex({ modifiedAt: -1 });\n  });\n}\n\nexport default Translation;\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\nimport { TAPi18n } from '/imports/i18n';\n\nconst DateString = Match.Where(function(dateAsString) {\n  check(dateAsString, String);\n  return moment(dateAsString, moment.ISO_8601).isValid();\n});\n\nexport class TrelloCreator {\n  constructor(data) {\n    // we log current date, to use the same timestamp for all our actions.\n    // this helps to retrieve all elements performed by the same import.\n    this._nowDate = new Date();\n    // The object creation dates, indexed by Trello id\n    // (so we only parse actions once!)\n    this.createdAt = {\n      board: null,\n      cards: {},\n      lists: {},\n    };\n    // The object creator Trello Id, indexed by the object Trello id\n    // (so we only parse actions once!)\n    this.createdBy = {\n      cards: {}, // only cards have a field for that\n    };\n\n    // Map of labels Trello ID => Wekan ID\n    this.labels = {};\n    // Default swimlane\n    this.swimlane = null;\n    // Map of lists Trello ID => Wekan ID\n    this.lists = {};\n    // Map of cards Trello ID => Wekan ID\n    this.cards = {};\n    // Map of attachments Wekan ID => Wekan ID\n    this.attachmentIds = {};\n    // Map of checklists Wekan ID => Wekan ID\n    this.checklists = {};\n    // The comments, indexed by Trello card id (to map when importing cards)\n    this.comments = {};\n    // the members, indexed by Trello member id => Wekan user ID\n    this.members = data.membersMapping ? data.membersMapping : {};\n\n    // maps a trelloCardId to an array of trelloAttachments\n    this.attachments = {};\n\n    this.customFields = {};\n  }\n\n  /**\n   * If dateString is provided,\n   * return the Date it represents.\n   * If not, will return the date when it was first called.\n   * This is useful for us, as we want all import operations to\n   * have the exact same date for easier later retrieval.\n   *\n   * @param {String} dateString a properly formatted Date\n   */\n  _now(dateString) {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    if (!this._nowDate) {\n      this._nowDate = new Date();\n    }\n    return this._nowDate;\n  }\n\n  /**\n   * if trelloUserId is provided and we have a mapping,\n   * return it.\n   * Otherwise return current logged user.\n   * @param trelloUserId\n   * @private\n   */\n  _user(trelloUserId) {\n    if (trelloUserId && this.members[trelloUserId]) {\n      return this.members[trelloUserId];\n    }\n    return Meteor.userId();\n  }\n\n  checkActions(trelloActions) {\n    check(trelloActions, [\n      Match.ObjectIncluding({\n        data: Object,\n        date: DateString,\n        type: String,\n      }),\n    ]);\n    // XXX we could perform more thorough checks based on action type\n  }\n\n  checkBoard(trelloBoard) {\n    check(\n      trelloBoard,\n      Match.ObjectIncluding({\n        // closed: Boolean,  // issue #3840, should import closed Trello boards\n        name: String,\n        prefs: Match.ObjectIncluding({\n          // XXX refine control by validating 'background' against a list of\n          // allowed values (is it worth the maintenance?)\n          background: String,\n          permissionLevel: Match.Where(value => {\n            return ['org', 'private', 'public'].indexOf(value) >= 0;\n          }),\n        }),\n      }),\n    );\n  }\n\n  checkCards(trelloCards) {\n    check(trelloCards, [\n      Match.ObjectIncluding({\n        closed: Boolean,\n        dateLastActivity: DateString,\n        desc: String,\n        idLabels: [String],\n        idMembers: [String],\n        name: String,\n        pos: Number,\n      }),\n    ]);\n  }\n\n  checkLabels(trelloLabels) {\n    check(trelloLabels, [\n      Match.ObjectIncluding({\n        // XXX refine control by validating 'color' against a list of allowed\n        // values (is it worth the maintenance?)\n        name: String,\n      }),\n    ]);\n  }\n\n  checkLists(trelloLists) {\n    check(trelloLists, [\n      Match.ObjectIncluding({\n        closed: Boolean,\n        name: String,\n      }),\n    ]);\n  }\n\n  checkChecklists(trelloChecklists) {\n    check(trelloChecklists, [\n      Match.ObjectIncluding({\n        idBoard: String,\n        idCard: String,\n        name: String,\n        checkItems: [\n          Match.ObjectIncluding({\n            state: String,\n            name: String,\n          }),\n        ],\n      }),\n    ]);\n  }\n\n  // You must call parseActions before calling this one.\n  createBoardAndLabels(trelloBoard) {\n    let color = 'blue';\n    if (this.getColor(trelloBoard.prefs.background) !== undefined) {\n      color = this.getColor(trelloBoard.prefs.background);\n    }\n\n    const boardToCreate = {\n      archived: trelloBoard.closed,\n      color: color,\n      // very old boards won't have a creation activity so no creation date\n      createdAt: this._now(this.createdAt.board),\n      labels: [],\n      customFields: [],\n      members: [\n        {\n          userId: Meteor.userId(),\n          isAdmin: true,\n          isActive: true,\n          isNoComments: false,\n          isCommentOnly: false,\n          swimlaneId: false,\n        },\n      ],\n      permission: this.getPermission(trelloBoard.prefs.permissionLevel),\n      slug: getSlug(trelloBoard.name) || 'board',\n      stars: 0,\n      title: Boards.uniqueTitle(trelloBoard.name),\n    };\n    // now add other members\n    if (trelloBoard.memberships) {\n      trelloBoard.memberships.forEach(trelloMembership => {\n        const trelloId = trelloMembership.idMember;\n        // do we have a mapping?\n        if (this.members[trelloId]) {\n          const wekanId = this.members[trelloId];\n          // do we already have it in our list?\n          const wekanMember = boardToCreate.members.find(\n            wekanMember => wekanMember.userId === wekanId,\n          );\n          if (wekanMember) {\n            // we're already mapped, but maybe with lower rights\n            if (!wekanMember.isAdmin) {\n              wekanMember.isAdmin = this.getAdmin(trelloMembership.memberType);\n            }\n          } else {\n            boardToCreate.members.push({\n              userId: wekanId,\n              isAdmin: this.getAdmin(trelloMembership.memberType),\n              isActive: true,\n              isNoComments: false,\n              isCommentOnly: false,\n              swimlaneId: false,\n            });\n          }\n        }\n      });\n    }\n    if (trelloBoard.labels) {\n      trelloBoard.labels.forEach(label => {\n        const labelToCreate = {\n          _id: Random.id(6),\n          color: label.color ? label.color : 'black',\n          name: label.name,\n        };\n        // We need to remember them by Trello ID, as this is the only ref we have\n        // when importing cards.\n        this.labels[label.id] = labelToCreate._id;\n        boardToCreate.labels.push(labelToCreate);\n      });\n    }\n    const boardId = Boards.direct.insert(boardToCreate);\n    Boards.direct.update(boardId, { $set: { modifiedAt: this._now() } });\n    // log activity\n    Activities.direct.insert({\n      activityType: 'importBoard',\n      boardId,\n      createdAt: this._now(),\n      source: {\n        id: trelloBoard.id,\n        system: 'Trello',\n        url: trelloBoard.url,\n      },\n      // We attribute the import to current user,\n      // not the author from the original object.\n      userId: this._user(),\n    });\n    if (trelloBoard.customFields) {\n      trelloBoard.customFields.forEach(field => {\n        const fieldToCreate = {\n          // trelloId: field.id,\n          name: field.name,\n          showOnCard: field.display.cardFront,\n          showLabelOnMiniCard: field.display.cardFront,\n          automaticallyOnCard: true,\n          alwaysOnCard: false,\n          type: field.type,\n          boardIds: [boardId],\n          settings: {},\n        };\n\n        if (field.type === 'list') {\n          fieldToCreate.type = 'dropdown';\n          fieldToCreate.settings = {\n            dropdownItems: field.options.map(opt => {\n              return {\n                _id: opt.id,\n                name: opt.value.text,\n              };\n            }),\n          };\n        }\n\n        // We need to remember them by Trello ID, as this is the only ref we have\n        // when importing cards.\n        this.customFields[field.id] = CustomFields.direct.insert(fieldToCreate);\n      });\n    }\n    return boardId;\n  }\n\n  /**\n   * Create the Wekan cards corresponding to the supplied Trello cards,\n   * as well as all linked data: activities, comments, and attachments\n   * @param trelloCards\n   * @param boardId\n   * @returns {Array}\n   */\n  createCards(trelloCards, boardId) {\n    const result = [];\n    trelloCards.forEach(card => {\n      const cardToCreate = {\n        archived: card.closed,\n        boardId,\n        // very old boards won't have a creation activity so no creation date\n        createdAt: this._now(this.createdAt.cards[card.id]),\n        dateLastActivity: this._now(),\n        description: card.desc,\n        listId: this.lists[card.idList],\n        swimlaneId: this.swimlane,\n        sort: card.pos,\n        title: card.name,\n        // we attribute the card to its creator if available\n        userId: this._user(this.createdBy.cards[card.id]),\n        dueAt: card.due ? this._now(card.due) : null,\n      };\n      // add labels\n      if (card.idLabels) {\n        cardToCreate.labelIds = card.idLabels.map(trelloId => {\n          return this.labels[trelloId];\n        });\n      }\n      // add members {\n      if (card.idMembers) {\n        const wekanMembers = [];\n        // we can't just map, as some members may not have been mapped\n        card.idMembers.forEach(trelloId => {\n          if (this.members[trelloId]) {\n            const wekanId = this.members[trelloId];\n            // we may map multiple Trello members to the same wekan user\n            // in which case we risk adding the same user multiple times\n            if (!wekanMembers.find(wId => wId === wekanId)) {\n              wekanMembers.push(wekanId);\n            }\n          }\n          return true;\n        });\n        if (wekanMembers.length > 0) {\n          cardToCreate.members = wekanMembers;\n        }\n      }\n      // add vote\n      if (card.idMembersVoted) {\n        // Trello only know's positive votes\n        const positiveVotes = [];\n        card.idMembersVoted.forEach(trelloId => {\n          if (this.members[trelloId]) {\n            const wekanId = this.members[trelloId];\n            // we may map multiple Trello members to the same wekan user\n            // in which case we risk adding the same user multiple times\n            if (!positiveVotes.find(wId => wId === wekanId)) {\n              positiveVotes.push(wekanId);\n            }\n          }\n          return true;\n        });\n        if (positiveVotes.length > 0) {\n          cardToCreate.vote = {\n            question: cardToCreate.title,\n            public: true,\n            positive: positiveVotes,\n          };\n        }\n      }\n\n      if (card.customFieldItems) {\n        cardToCreate.customFields = [];\n        card.customFieldItems.forEach(item => {\n          const custom = {\n            _id: this.customFields[item.idCustomField],\n          };\n          if (item.idValue) {\n            custom.value = item.idValue;\n          } else if (item.value.hasOwnProperty('checked')) {\n            custom.value = item.value.checked === 'true';\n          } else if (item.value.hasOwnProperty('text')) {\n            custom.value = item.value.text;\n          } else if (item.value.hasOwnProperty('date')) {\n            custom.value = item.value.date;\n          } else if (item.value.hasOwnProperty('number')) {\n            custom.value = item.value.number;\n          }\n          cardToCreate.customFields.push(custom);\n        });\n      }\n\n      // insert card\n      const cardId = Cards.direct.insert(cardToCreate);\n      // keep track of Trello id => Wekan id\n      this.cards[card.id] = cardId;\n      // log activity\n      // Activities.direct.insert({\n      //   activityType: 'importCard',\n      //   boardId,\n      //   cardId,\n      //   createdAt: this._now(),\n      //   listId: cardToCreate.listId,\n      //   source: {\n      //     id: card.id,\n      //     system: 'Trello',\n      //     url: card.url,\n      //   },\n      //   // we attribute the import to current user,\n      //   // not the author of the original card\n      //   userId: this._user(),\n      // });\n      // add comments\n      const comments = this.comments[card.id];\n      if (comments) {\n        comments.forEach(comment => {\n          const commentToCreate = {\n            boardId,\n            cardId,\n            createdAt: this._now(comment.date),\n            text: comment.data.text,\n            // we attribute the comment to the original author, default to current user\n            userId: this._user(comment.idMemberCreator),\n          };\n          // dateLastActivity will be set from activity insert, no need to\n          // update it ourselves\n          const commentId = CardComments.direct.insert(commentToCreate);\n          // We need to keep adding comment activities this way with Trello\n          // because it doesn't provide a comment ID\n          Activities.direct.insert({\n            activityType: 'addComment',\n            boardId: commentToCreate.boardId,\n            cardId: commentToCreate.cardId,\n            commentId,\n            createdAt: this._now(comment.date),\n            // we attribute the addComment (not the import)\n            // to the original author - it is needed by some UI elements.\n            userId: commentToCreate.userId,\n          });\n        });\n      }\n      const attachments = this.attachments[card.id];\n      const trelloCoverId = card.idAttachmentCover;\n      if (attachments && Meteor.isServer) {\n        attachments.forEach(att => {\n          const self = this;\n          const opts = {\n            type: att.type ? att.type : undefined,\n            userId: self._user(att.userId),\n            meta: {\n              boardId,\n              cardId,\n              source: 'import',\n            },\n          };\n          const cb = (error, fileObj) => {\n            if (error) {\n              throw error;\n            }\n            self.attachmentIds[att._id] = fileObj._id;\n            if (trelloCoverId === att._id) {\n              Cards.direct.update(cardId, {\n                $set: { coverId: fileObj._id },\n              });\n            }\n          };\n          if (att.url) {\n            Attachments.load(att.url, opts, cb, true);\n          } else if (att.file) {\n            Attachments.insert(att.file, opts, cb, true);\n          }\n        });\n\n        if (links) {\n          if (links.length) {\n            let desc = cardToCreate.description.trim();\n            if (desc) {\n              desc += '\\n\\n';\n            }\n            desc += `## ${TAPi18n.__('links-heading')}\\n`;\n            links.forEach(link => {\n              desc += `* ${link}\\n`;\n            });\n            Cards.direct.update(cardId, {\n              $set: {\n                description: desc,\n              },\n            });\n          }\n        }\n      }\n      result.push(cardId);\n    });\n    return result;\n  }\n\n  // Create labels if they do not exist and load this.labels.\n  createLabels(trelloLabels, board) {\n    trelloLabels.forEach(label => {\n      const color = label.color;\n      const name = label.name;\n      const existingLabel = board.getLabel(name, color);\n      if (existingLabel) {\n        this.labels[label.id] = existingLabel._id;\n      } else {\n        const idLabelCreated = board.pushLabel(name, color);\n        this.labels[label.id] = idLabelCreated;\n      }\n    });\n  }\n\n  createLists(trelloLists, boardId) {\n    trelloLists.forEach(list => {\n      const listToCreate = {\n        archived: list.closed,\n        boardId,\n        // We are being defensing here by providing a default date (now) if the\n        // creation date wasn't found on the action log. This happen on old\n        // Trello boards (eg from 2013) that didn't log the 'createList' action\n        // we require.\n        createdAt: this._now(this.createdAt.lists[list.id]),\n        title: list.name,\n        sort: list.pos,\n      };\n      const listId = Lists.direct.insert(listToCreate);\n      Lists.direct.update(listId, { $set: { updatedAt: this._now() } });\n      this.lists[list.id] = listId;\n      // log activity\n      // Activities.direct.insert({\n      //   activityType: 'importList',\n      //   boardId,\n      //   createdAt: this._now(),\n      //   listId,\n      //   source: {\n      //     id: list.id,\n      //     system: 'Trello',\n      //   },\n      //   // We attribute the import to current user,\n      //   // not the creator of the original object\n      //   userId: this._user(),\n      // });\n    });\n  }\n\n  createSwimlanes(boardId) {\n    const swimlaneToCreate = {\n      archived: false,\n      boardId,\n      // We are being defensing here by providing a default date (now) if the\n      // creation date wasn't found on the action log. This happen on old\n      // Wekan boards (eg from 2013) that didn't log the 'createList' action\n      // we require.\n      createdAt: this._now(),\n      title: 'Default',\n      sort: 1,\n    };\n    const swimlaneId = Swimlanes.direct.insert(swimlaneToCreate);\n    Swimlanes.direct.update(swimlaneId, { $set: { updatedAt: this._now() } });\n    this.swimlane = swimlaneId;\n  }\n\n  createChecklists(trelloChecklists) {\n    trelloChecklists.forEach(checklist => {\n      if (this.cards[checklist.idCard]) {\n        // Create the checklist\n        const checklistToCreate = {\n          cardId: this.cards[checklist.idCard],\n          title: checklist.name,\n          createdAt: this._now(),\n          sort: checklist.pos,\n        };\n        const checklistId = Checklists.direct.insert(checklistToCreate);\n        // keep track of Trello id => Wekan id\n        this.checklists[checklist.id] = checklistId;\n        // Now add the items to the checklistItems\n        let counter = 0;\n        checklist.checkItems.forEach(item => {\n          counter++;\n          const checklistItemTocreate = {\n            _id: checklistId + counter,\n            title: item.name,\n            checklistId: this.checklists[checklist.id],\n            cardId: this.cards[checklist.idCard],\n            sort: item.pos,\n            isFinished: item.state === 'complete',\n          };\n          ChecklistItems.direct.insert(checklistItemTocreate);\n        });\n      }\n    });\n  }\n\n  getAdmin(trelloMemberType) {\n    return trelloMemberType === 'admin';\n  }\n\n  getColor(trelloColorCode) {\n    // trello color name => wekan color\n    const mapColors = {\n      blue: 'belize',\n      orange: 'pumpkin',\n      green: 'nephritis',\n      red: 'pomegranate',\n      purple: 'wisteria',\n      pink: 'moderatepink',\n      lime: 'limegreen',\n      sky: 'strongcyan',\n      grey: 'midnight',\n    };\n    const wekanColor = mapColors[trelloColorCode];\n    return wekanColor || Boards.simpleSchema()._schema.color.allowedValues[0];\n  }\n\n  getPermission(trelloPermissionCode) {\n    if (trelloPermissionCode === 'public') {\n      return 'public';\n    }\n    // Wekan does NOT have organization level, so we default both 'private' and\n    // 'org' to private.\n    return 'private';\n  }\n\n  parseActions(trelloActions) {\n    trelloActions.forEach(action => {\n      if (action.type === 'addAttachmentToCard') {\n        // We have to be cautious, because the attachment could have been removed later.\n        // In that case Trello still reports its addition, but removes its 'url' field.\n        // So we test for that\n        const trelloAttachment = action.data.attachment;\n        // We need the idMemberCreator\n        trelloAttachment.idMemberCreator = action.idMemberCreator;\n        if (trelloAttachment.url) {\n          // we cannot actually create the Wekan attachment, because we don't yet\n          // have the cards to attach it to, so we store it in the instance variable.\n          const trelloCardId = action.data.card.id;\n          if (!this.attachments[trelloCardId]) {\n            this.attachments[trelloCardId] = [];\n          }\n          this.attachments[trelloCardId].push(trelloAttachment);\n        }\n      } else if (action.type === 'commentCard') {\n        const id = action.data.card.id;\n        if (this.comments[id]) {\n          this.comments[id].push(action);\n        } else {\n          this.comments[id] = [action];\n        }\n      } else if (action.type === 'createBoard') {\n        this.createdAt.board = action.date;\n      } else if (action.type === 'createCard') {\n        const cardId = action.data.card.id;\n        this.createdAt.cards[cardId] = action.date;\n        this.createdBy.cards[cardId] = action.idMemberCreator;\n      } else if (action.type === 'createList') {\n        const listId = action.data.list.id;\n        this.createdAt.lists[listId] = action.date;\n      }\n    });\n  }\n\n  importActions(actions, boardId) {\n    actions.forEach(action => {\n      switch (action.type) {\n        // Board related actions\n        // TODO: addBoardMember, removeBoardMember\n        case 'createBoard': {\n          Activities.direct.insert({\n            userId: this._user(action.idMemberCreator),\n            type: 'board',\n            activityTypeId: boardId,\n            activityType: 'createBoard',\n            boardId,\n            createdAt: this._now(action.date),\n          });\n          break;\n        }\n        // List related activities\n        // TODO: removeList, archivedList\n        case 'createList': {\n          Activities.direct.insert({\n            userId: this._user(action.idMemberCreator),\n            type: 'list',\n            activityType: 'createList',\n            listId: this.lists[action.data.list.id],\n            boardId,\n            createdAt: this._now(action.date),\n          });\n          break;\n        }\n        // Card related activities\n        // TODO: archivedCard, restoredCard, joinMember, unjoinMember\n        case 'createCard': {\n          Activities.direct.insert({\n            userId: this._user(action.idMemberCreator),\n            activityType: 'createCard',\n            listId: this.lists[action.data.list.id],\n            cardId: this.cards[action.data.card.id],\n            boardId,\n            createdAt: this._now(action.date),\n          });\n          break;\n        }\n        case 'updateCard': {\n          if (action.data.old.idList) {\n            Activities.direct.insert({\n              userId: this._user(action.idMemberCreator),\n              oldListId: this.lists[action.data.old.idList],\n              activityType: 'moveCard',\n              listId: this.lists[action.data.listAfter.id],\n              cardId: this.cards[action.data.card.id],\n              boardId,\n              createdAt: this._now(action.date),\n            });\n          }\n          break;\n        }\n        // Comment related activities\n        // Trello doesn't export the comment id\n        // Attachment related activities\n        case 'addAttachmentToCard': {\n          Activities.direct.insert({\n            userId: this._user(action.idMemberCreator),\n            type: 'card',\n            activityType: 'addAttachment',\n            attachmentId: this.attachmentIds[action.data.attachment.id],\n            cardId: this.cards[action.data.card.id],\n            boardId,\n            createdAt: this._now(action.date),\n          });\n          break;\n        }\n        // Checklist related activities\n        case 'addChecklistToCard': {\n          Activities.direct.insert({\n            userId: this._user(action.idMemberCreator),\n            activityType: 'addChecklist',\n            cardId: this.cards[action.data.card.id],\n            checklistId: this.checklists[action.data.checklist.id],\n            boardId,\n            createdAt: this._now(action.date),\n          });\n          break;\n        }\n      }\n      // Trello doesn't have an add checklist item action\n    });\n  }\n\n  check(board) {\n    try {\n      // check(data, {\n      //   membersMapping: Match.Optional(Object),\n      // });\n      this.checkActions(board.actions);\n      this.checkBoard(board);\n      this.checkLabels(board.labels);\n      this.checkLists(board.lists);\n      this.checkCards(board.cards);\n      this.checkChecklists(board.checklists);\n    } catch (e) {\n      throw new Meteor.Error('error-json-schema');\n    }\n  }\n\n  create(board, currentBoardId) {\n    // TODO : Make isSandstorm variable global\n    const isSandstorm =\n      Meteor.settings &&\n      Meteor.settings.public &&\n      Meteor.settings.public.sandstorm;\n    if (isSandstorm && currentBoardId) {\n      const currentBoard = ReactiveCache.getBoard(currentBoardId);\n      currentBoard.archive();\n    }\n    this.parseActions(board.actions);\n    const boardId = this.createBoardAndLabels(board);\n    this.createLists(board.lists, boardId);\n    this.createSwimlanes(boardId);\n    this.createCards(board.cards, boardId);\n    this.createChecklists(board.checklists);\n    this.importActions(board.actions, boardId);\n    // XXX add members\n    return boardId;\n  }\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\n\nTriggers = new Mongo.Collection('triggers');\n\nTriggers.mutations({\n  rename(description) {\n    return {\n      $set: {\n        description,\n      },\n    };\n  },\n});\n\nTriggers.before.insert((userId, doc) => {\n  doc.createdAt = new Date();\n  doc.updatedAt = doc.createdAt;\n});\n\nTriggers.before.update((userId, doc, fieldNames, modifier) => {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\n\nTriggers.allow({\n  insert(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  update(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n  remove(userId, doc) {\n    return allowIsBoardAdmin(userId, ReactiveCache.getBoard(doc.boardId));\n  },\n});\n\nTriggers.helpers({\n  description() {\n    return this.desc;\n  },\n\n  getRule() {\n    return ReactiveCache.getRule({ triggerId: this._id });\n  },\n\n  fromList() {\n    return ReactiveCache.getList(this.fromId);\n  },\n\n  toList() {\n    return ReactiveCache.getList(this.toId);\n  },\n\n  findList(title) {\n    return ReactiveCache.getList({\n      title,\n    });\n  },\n\n  labels() {\n    const boardLabels = this.board().labels;\n    const cardLabels = _.filter(boardLabels, label => {\n      return _.contains(this.labelIds, label._id);\n    });\n    return cardLabels;\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(() => {\n    Triggers._collection.createIndex({ modifiedAt: -1 });\n  });\n}\n\nexport default Triggers;\n","// This collection shouldn't be manipulated directly by instead throw the\n// `UnsavedEdits` API on the client.\nUnsavedEditCollection = new Mongo.Collection('unsaved-edits');\n\nUnsavedEditCollection.attachSchema(\n  new SimpleSchema({\n    fieldName: {\n      type: String,\n    },\n    docId: {\n      type: String,\n    },\n    value: {\n      type: String,\n    },\n    userId: {\n      type: String,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return this.userId;\n        }\n      },\n    },\n    createdAt: {\n      type: Date,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nif (Meteor.isServer) {\n  function isAuthor(userId, doc, fieldNames = []) {\n    return userId === doc.userId && fieldNames.indexOf('userId') === -1;\n  }\n  Meteor.startup(() => {\n    UnsavedEditCollection._collection.createIndex({ modifiedAt: -1 });\n    UnsavedEditCollection._collection.createIndex({ userId: 1 });\n  });\n  UnsavedEditCollection.allow({\n    insert: isAuthor,\n    update: isAuthor,\n    remove: isAuthor,\n    fetch: ['userId'],\n  });\n}\n\nexport default UnsavedEditCollection;\n","import { ReactiveCache, ReactiveMiniMongoIndex } from '/imports/reactiveCache';\nimport { SyncedCron } from 'meteor/percolate:synced-cron';\nimport { TAPi18n } from '/imports/i18n';\nimport ImpersonatedUsers from './impersonatedUsers';\nimport { Index, MongoDBEngine } from 'meteor/easy:search';\n\n// Sandstorm context is detected using the METEOR_SETTINGS environment variable\n// in the package definition.\nconst isSandstorm =\n  Meteor.settings && Meteor.settings.public && Meteor.settings.public.sandstorm;\nUsers = Meteor.users;\n\nconst allowedSortValues = [\n  '-modifiedAt',\n  'modifiedAt',\n  '-title',\n  'title',\n  '-sort',\n  'sort',\n];\nconst defaultSortBy = allowedSortValues[0];\n\n/**\n * A User in wekan\n */\nUsers.attachSchema(\n  new SimpleSchema({\n    username: {\n      /**\n       * the username of the user\n       */\n      type: String,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          const name = this.field('profile.fullname');\n          if (name.isSet) {\n            return name.value.toLowerCase().replace(/\\s/g, '');\n          }\n        }\n      },\n    },\n    orgs: {\n      /**\n       * the list of organizations that a user belongs to\n       */\n      type: [Object],\n      optional: true,\n    },\n    'orgs.$.orgId': {\n      /**\n       * The uniq ID of the organization\n       */\n      type: String,\n    },\n    'orgs.$.orgDisplayName': {\n      /**\n       * The display name of the organization\n       */\n      type: String,\n    },\n    teams: {\n      /**\n       * the list of teams that a user belongs to\n       */\n      type: [Object],\n      optional: true,\n    },\n    'teams.$.teamId': {\n      /**\n       * The uniq ID of the team\n       */\n      type: String,\n    },\n    'teams.$.teamDisplayName': {\n      /**\n       * The display name of the team\n       */\n      type: String,\n    },\n    emails: {\n      /**\n       * the list of emails attached to a user\n       */\n      type: [Object],\n      optional: true,\n    },\n    'emails.$.address': {\n      /**\n       * The email address\n       */\n      type: String,\n      regEx: SimpleSchema.RegEx.Email,\n    },\n    'emails.$.verified': {\n      /**\n       * Has the email been verified\n       */\n      type: Boolean,\n    },\n    createdAt: {\n      /**\n       * creation date of the user\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return {\n            $setOnInsert: new Date(),\n          };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n    profile: {\n      /**\n       * profile settings\n       */\n      type: Object,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return {\n            boardView: 'board-view-swimlanes',\n          };\n        }\n      },\n    },\n    'profile.avatarUrl': {\n      /**\n       * URL of the avatar of the user\n       */\n      type: String,\n      optional: true,\n    },\n    'profile.emailBuffer': {\n      /**\n       * list of email buffers of the user\n       */\n      type: [String],\n      optional: true,\n    },\n    'profile.fullname': {\n      /**\n       * full name of the user\n       */\n      type: String,\n      optional: true,\n    },\n    'profile.showDesktopDragHandles': {\n      /**\n       * does the user want to show desktop drag handles?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'profile.cardMaximized': {\n      /**\n       * has user clicked maximize card?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'profile.customFieldsGrid': {\n      /**\n       * has user at card Custom Fields have Grid (false) or one per row (true) layout?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'profile.hiddenMinicardLabelText': {\n      /**\n       * does the user want to hide minicard label texts?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'profile.initials': {\n      /**\n       * initials of the user\n       */\n      type: String,\n      optional: true,\n    },\n    'profile.invitedBoards': {\n      /**\n       * board IDs the user has been invited to\n       */\n      type: [String],\n      optional: true,\n    },\n    'profile.language': {\n      /**\n       * language of the user\n       */\n      type: String,\n      optional: true,\n    },\n    'profile.moveAndCopyDialog': {\n      /**\n       * move and copy card dialog\n       */\n      type: Object,\n      optional: true,\n      blackbox: true,\n    },\n    'profile.moveAndCopyDialog.$.boardId': {\n      /**\n       * last selected board id\n       */\n      type: String,\n    },\n    'profile.moveAndCopyDialog.$.swimlaneId': {\n      /**\n       * last selected swimlane id\n       */\n      type: String,\n    },\n    'profile.moveAndCopyDialog.$.listId': {\n      /**\n       * last selected list id\n       */\n      type: String,\n    },\n    'profile.moveChecklistDialog': {\n      /**\n       * move checklist dialog\n       */\n      type: Object,\n      optional: true,\n      blackbox: true,\n    },\n    'profile.moveChecklistDialog.$.boardId': {\n      /**\n       * last selected board id\n       */\n      type: String,\n    },\n    'profile.moveChecklistDialog.$.swimlaneId': {\n      /**\n       * last selected swimlane id\n       */\n      type: String,\n    },\n    'profile.moveChecklistDialog.$.listId': {\n      /**\n       * last selected list id\n       */\n      type: String,\n    },\n    'profile.moveChecklistDialog.$.cardId': {\n      /**\n       * last selected card id\n       */\n      type: String,\n    },\n    'profile.copyChecklistDialog': {\n      /**\n       * copy checklist dialog\n       */\n      type: Object,\n      optional: true,\n      blackbox: true,\n    },\n    'profile.copyChecklistDialog.$.boardId': {\n      /**\n       * last selected board id\n       */\n      type: String,\n    },\n    'profile.copyChecklistDialog.$.swimlaneId': {\n      /**\n       * last selected swimlane id\n       */\n      type: String,\n    },\n    'profile.copyChecklistDialog.$.listId': {\n      /**\n       * last selected list id\n       */\n      type: String,\n    },\n    'profile.copyChecklistDialog.$.cardId': {\n      /**\n       * last selected card id\n       */\n      type: String,\n    },\n    'profile.notifications': {\n      /**\n       * enabled notifications for the user\n       */\n      type: [Object],\n      optional: true,\n    },\n    'profile.notifications.$.activity': {\n      /**\n       * The id of the activity this notification references\n       */\n      type: String,\n    },\n    'profile.notifications.$.read': {\n      /**\n       * the date on which this notification was read\n       */\n      type: Date,\n      optional: true,\n    },\n    'profile.rescueCardDescription': {\n      /**\n       * show dialog for saving card description on unintentional card closing\n       */\n      type: Boolean,\n      optional: true,\n    },\n    'profile.showCardsCountAt': {\n      /**\n       * showCardCountAt field of the user\n       */\n      type: Number,\n      optional: true,\n    },\n    'profile.startDayOfWeek': {\n      /**\n       * startDayOfWeek field of the user\n       */\n      type: Number,\n      optional: true,\n    },\n    'profile.starredBoards': {\n      /**\n       * list of starred board IDs\n       */\n      type: [String],\n      optional: true,\n    },\n    'profile.icode': {\n      /**\n       * icode\n       */\n      type: String,\n      optional: true,\n    },\n    'profile.boardView': {\n      /**\n       * boardView field of the user\n       */\n      type: String,\n      optional: true,\n      allowedValues: [\n        'board-view-swimlanes',\n        'board-view-lists',\n        'board-view-cal',\n      ],\n    },\n    'profile.listSortBy': {\n      /**\n       * default sort list for user\n       */\n      type: String,\n      optional: true,\n      defaultValue: defaultSortBy,\n      allowedValues: allowedSortValues,\n    },\n    'profile.templatesBoardId': {\n      /**\n       * Reference to the templates board\n       */\n      type: String,\n      defaultValue: '',\n    },\n    'profile.cardTemplatesSwimlaneId': {\n      /**\n       * Reference to the card templates swimlane Id\n       */\n      type: String,\n      defaultValue: '',\n    },\n    'profile.listTemplatesSwimlaneId': {\n      /**\n       * Reference to the list templates swimlane Id\n       */\n      type: String,\n      defaultValue: '',\n    },\n    'profile.boardTemplatesSwimlaneId': {\n      /**\n       * Reference to the board templates swimlane Id\n       */\n      type: String,\n      defaultValue: '',\n    },\n    'profile.listWidths': {\n      /**\n       * User-specified width of each list (or nothing if default).\n       * profile[boardId][listId] = width;\n       */\n      type: Object,\n      defaultValue: {},\n      blackbox: true,\n    },\n    'profile.listConstraints': {\n      /**\n       * User-specified constraint of each list (or nothing if default).\n       * profile[boardId][listId] = constraint;\n       */\n      type: Object,\n      defaultValue: {},\n      blackbox: true,\n    },\n    'profile.autoWidthBoards': {\n      /**\n       * User-specified flag for enabling auto-width for boards (false is the default).\n       * profile[boardId][listId] = constraint;\n       */\n      type: Object,\n      defaultValue: {},\n      blackbox: true,\n    },\n    'profile.swimlaneHeights': {\n      /**\n       * User-specified heights of each swimlane (or nothing if default).\n       * profile[boardId][swimlaneId] = height;\n       */\n      type: Object,\n      defaultValue: {},\n      blackbox: true,\n    },\n    'profile.keyboardShortcuts': {\n      /**\n       * User-specified state of keyboard shortcut activation.\n       */\n      type: Boolean,\n      defaultValue: false,\n    },\n    'profile.verticalScrollbars': {\n      /**\n       * User-specified state of vertical scrollbars visibility.\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n    'profile.showWeekOfYear': {\n      /**\n       * User-specified state of week-of-year in date displays.\n       */\n      type: Boolean,\n      defaultValue: true,\n    },\n    services: {\n      /**\n       * services field of the user\n       */\n      type: Object,\n      optional: true,\n      blackbox: true,\n    },\n    heartbeat: {\n      /**\n       * last time the user has been seen\n       */\n      type: Date,\n      optional: true,\n    },\n    isAdmin: {\n      /**\n       * is the user an admin of the board?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    createdThroughApi: {\n      /**\n       * was the user created through the API?\n       */\n      type: Boolean,\n      optional: true,\n    },\n    loginDisabled: {\n      /**\n       * loginDisabled field of the user\n       */\n      type: Boolean,\n      optional: true,\n    },\n    authenticationMethod: {\n      /**\n       * authentication method of the user\n       */\n      type: String,\n      optional: false,\n      defaultValue: 'password',\n    },\n    sessionData: {\n      /**\n       * profile settings\n       */\n      type: Object,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return {};\n        }\n      },\n    },\n    'sessionData.totalHits': {\n      /**\n       * Total hits from last searchquery['members.userId'] = Meteor.userId();\n       * last hit that was returned\n       */\n      type: Number,\n      optional: true,\n    },\n    importUsernames: {\n      /**\n       * username for imported\n       */\n      type: [String],\n      optional: true,\n    },\n    lastConnectionDate: {\n      type: Date,\n      optional: true,\n    },\n  }),\n);\n\nUsers.allow({\n  update(userId, doc) {\n    const user = ReactiveCache.getUser(userId) || ReactiveCache.getCurrentUser();\n    if (user?.isAdmin)\n      return true;\n    if (!user) {\n      return false;\n    }\n    return doc._id === userId;\n  },\n  remove(userId, doc) {\n    const adminsNumber = ReactiveCache.getUsers({\n      isAdmin: true,\n    }).length;\n    const isAdmin = ReactiveCache.getUser(\n      {\n        _id: userId,\n      },\n      {\n        fields: {\n          isAdmin: 1,\n        },\n      },\n    );\n\n    // Prevents remove of the only one administrator\n    if (adminsNumber === 1 && isAdmin && userId === doc._id) {\n      return false;\n    }\n\n    // If it's the user or an admin\n    return userId === doc._id || isAdmin;\n  },\n  fetch: [],\n});\n\n// Non-Admin users can not change to Admin\nUsers.deny({\n  update(userId, board, fieldNames) {\n    return _.contains(fieldNames, 'isAdmin') && !ReactiveCache.getCurrentUser().isAdmin;\n  },\n  fetch: [],\n});\n\n\n// Search a user in the complete server database by its name, username or emails adress. This\n// is used for instance to add a new user to a board.\nUserSearchIndex = new Index({\n  collection: Users,\n  fields: ['username', 'profile.fullname', 'profile.avatarUrl'],\n  allowedFields: ['username', 'profile.fullname', 'profile.avatarUrl'],\n  engine: new MongoDBEngine({\n    fields: function (searchObject, options) {\n      return {\n        username: 1,\n        'profile.fullname': 1,\n        'profile.avatarUrl': 1,\n      };\n    },\n  }),\n});\n\nUsers.safeFields = {\n  _id: 1,\n  username: 1,\n  'profile.fullname': 1,\n  'profile.avatarUrl': 1,\n  'profile.initials': 1,\n  orgs: 1,\n  teams: 1,\n  authenticationMethod: 1,\n  lastConnectionDate: 1,\n};\n\nif (Meteor.isClient) {\n  Users.helpers({\n    isBoardMember() {\n      const board = Utils.getCurrentBoard();\n      return board && board.hasMember(this._id);\n    },\n\n    isNotNoComments() {\n      const board = Utils.getCurrentBoard();\n      return (\n        board && board.hasMember(this._id) && !board.hasNoComments(this._id)\n      );\n    },\n\n    isNoComments() {\n      const board = Utils.getCurrentBoard();\n      return board && board.hasNoComments(this._id);\n    },\n\n    isNotCommentOnly() {\n      const board = Utils.getCurrentBoard();\n      return (\n        board && board.hasMember(this._id) && !board.hasCommentOnly(this._id)\n      );\n    },\n\n    isCommentOnly() {\n      const board = Utils.getCurrentBoard();\n      return board && board.hasCommentOnly(this._id);\n    },\n\n    isNotWorker() {\n      const board = Utils.getCurrentBoard();\n      return board && board.hasMember(this._id) && !board.hasWorker(this._id);\n    },\n\n    isWorker() {\n      const board = Utils.getCurrentBoard();\n      return board && board.hasWorker(this._id);\n    },\n\n    isBoardAdmin(boardId) {\n      let board;\n      if (boardId) {\n        board = ReactiveCache.getBoard(boardId);\n      } else {\n        board = Utils.getCurrentBoard();\n      }\n      return board && board.hasAdmin(this._id);\n    },\n  });\n}\n\nUsers.parseImportUsernames = (usernamesString) => {\n  return usernamesString.trim().split(new RegExp('\\\\s*[,;]\\\\s*'));\n};\n\nUsers.helpers({\n  importUsernamesString() {\n    if (this.importUsernames) {\n      return this.importUsernames.join(', ');\n    }\n    return '';\n  },\n  teamIds() {\n    if (this.teams) {\n      // TODO: Should the Team collection be queried to determine if the team isActive?\n      return this.teams.map((team) => {\n        return team.teamId;\n      });\n    }\n    return [];\n  },\n  orgIds() {\n    if (this.orgs) {\n      // TODO: Should the Org collection be queried to determine if the organization isActive?\n      return this.orgs.map((org) => {\n        return org.orgId;\n      });\n    }\n    return [];\n  },\n  orgsUserBelongs() {\n    if (this.orgs) {\n      return this.orgs\n        .map(function (org) {\n          return org.orgDisplayName;\n        })\n        .sort()\n        .join(',');\n    }\n    return '';\n  },\n  orgIdsUserBelongs() {\n    let ret = '';\n    if (this.orgs) {\n      ret = this.orgs.map(org => org.orgId).join(',');\n    }\n    return ret;\n  },\n  teamsUserBelongs() {\n    if (this.teams) {\n      return this.teams\n        .map(function (team) {\n          return team.teamDisplayName;\n        })\n        .sort()\n        .join(',');\n    }\n    return '';\n  },\n  teamIdsUserBelongs() {\n    let ret = '';\n    if (this.teams) {\n      ret = this.teams.map(team => team.teamId).join(',');\n    }\n    return ret;\n  },\n  boards() {\n    return Boards.userBoards(this._id, null, {}, { sort: { sort: 1 } });\n  },\n\n  starredBoards() {\n    const { starredBoards = [] } = this.profile || {};\n    return Boards.userBoards(\n      this._id,\n      false,\n      { _id: { $in: starredBoards } },\n      { sort: { sort: 1 } },\n    );\n  },\n\n  hasStarred(boardId) {\n    const { starredBoards = [] } = this.profile || {};\n    return _.contains(starredBoards, boardId);\n  },\n\n  isAutoWidth(boardId) {\n    const { autoWidthBoards = {} } = this.profile || {};\n    return autoWidthBoards[boardId] === true;\n  },\n\n  invitedBoards() {\n    const { invitedBoards = [] } = this.profile || {};\n    return Boards.userBoards(\n      this._id,\n      false,\n      { _id: { $in: invitedBoards } },\n      { sort: { sort: 1 } },\n    );\n  },\n\n  isInvitedTo(boardId) {\n    const { invitedBoards = [] } = this.profile || {};\n    return _.contains(invitedBoards, boardId);\n  },\n\n  _getListSortBy() {\n    const profile = this.profile || {};\n    const sortBy = profile.listSortBy || defaultSortBy;\n    const keyPattern = /^(-{0,1})(.*$)/;\n    const ret = [];\n    if (keyPattern.exec(sortBy)) {\n      ret[0] = RegExp.$2;\n      ret[1] = RegExp.$1 ? -1 : 1;\n    }\n    return ret;\n  },\n  hasSortBy() {\n    // if use doesn't have dragHandle, then we can let user to choose sort list by different order\n    return !this.hasShowDesktopDragHandles();\n  },\n  getListSortBy() {\n    return this._getListSortBy()[0];\n  },\n  getListSortTypes() {\n    return allowedSortValues;\n  },\n  getListSortByDirection() {\n    return this._getListSortBy()[1];\n  },\n\n  getListWidths() {\n    const { listWidths = {}, } = this.profile || {};\n    return listWidths;\n  },\n  getListWidth(boardId, listId) {\n    const listWidths = this.getListWidths();\n    if (listWidths[boardId] && listWidths[boardId][listId]) {\n      return listWidths[boardId][listId];\n    } else {\n      return 270; //TODO(mark-i-m): default?\n    }\n  },\n  getListConstraints() {\n    const { listConstraints = {} } = this.profile || {};\n    return listConstraints;\n  },\n  getListConstraint(boardId, listId) {\n    const listConstraints = this.getListConstraints();\n    if (listConstraints[boardId] && listConstraints[boardId][listId]) {\n      return listConstraints[boardId][listId];\n    } else {\n      return 550;\n    }\n  },\n\n  getSwimlaneHeights() {\n    const { swimlaneHeights = {} } = this.profile || {};\n    return swimlaneHeights;\n  },\n  getSwimlaneHeight(boardId, listId) {\n    const swimlaneHeights = this.getSwimlaneHeights();\n    if (swimlaneHeights[boardId] && swimlaneHeights[boardId][listId]) {\n      return swimlaneHeights[boardId][listId];\n    } else {\n      return -1;\n    }\n  },\n\n  /** returns all confirmed move and copy dialog field values\n   * <li> the board, swimlane and list id is stored for each board\n   */\n  getMoveAndCopyDialogOptions() {\n    let _ret = {};\n    if (this.profile && this.profile.moveAndCopyDialog) {\n      _ret = this.profile.moveAndCopyDialog;\n    }\n    return _ret;\n  },\n\n  /** returns all confirmed move checklist dialog field values\n   * <li> the board, swimlane, list and card id is stored for each board\n   */\n  getMoveChecklistDialogOptions() {\n    let _ret = {};\n    if (this.profile && this.profile.moveChecklistDialog) {\n      _ret = this.profile.moveChecklistDialog;\n    }\n    return _ret;\n  },\n\n  /** returns all confirmed copy checklist dialog field values\n   * <li> the board, swimlane, list and card id is stored for each board\n   */\n  getCopyChecklistDialogOptions() {\n    let _ret = {};\n    if (this.profile && this.profile.copyChecklistDialog) {\n      _ret = this.profile.copyChecklistDialog;\n    }\n    return _ret;\n  },\n\n  hasTag(tag) {\n    const { tags = [] } = this.profile || {};\n    return _.contains(tags, tag);\n  },\n\n  hasNotification(activityId) {\n    const { notifications = [] } = this.profile || {};\n    return _.contains(notifications, activityId);\n  },\n\n  notifications() {\n    const { notifications = [] } = this.profile || {};\n    for (const index in notifications) {\n      if (!notifications.hasOwnProperty(index)) continue;\n      const notification = notifications[index];\n      // this preserves their db sort order for editing\n      notification.dbIndex = index;\n      if (!notification.activityObj && typeof(notification.activity) === 'string') {\n        notification.activityObj = ReactiveMiniMongoIndex.getActivityWithId(notification.activity);\n      }\n    }\n    // newest first. don't use reverse() because it changes the array inplace, so sometimes the array is reversed twice and oldest items at top again\n    const ret = notifications.toReversed();\n    return ret;\n  },\n\n  hasShowDesktopDragHandles() {\n    const profile = this.profile || {};\n    return profile.showDesktopDragHandles || false;\n  },\n\n  hasCustomFieldsGrid() {\n    const profile = this.profile || {};\n    return profile.customFieldsGrid || false;\n  },\n\n  hasCardMaximized() {\n    const profile = this.profile || {};\n    return profile.cardMaximized || false;\n  },\n\n  hasHiddenMinicardLabelText() {\n    const profile = this.profile || {};\n    return profile.hiddenMinicardLabelText || false;\n  },\n\n  hasRescuedCardDescription() {\n    const profile = this.profile || {};\n    return profile.rescueCardDescription || false;\n  },\n\n  getEmailBuffer() {\n    const { emailBuffer = [] } = this.profile || {};\n    return emailBuffer;\n  },\n\n  getInitials() {\n    const profile = this.profile || {};\n    if (profile.initials) return profile.initials;\n    else if (profile.fullname) {\n      return profile.fullname\n        .split(/\\s+/)\n        .reduce((memo, word) => {\n          return memo + word[0];\n        }, '')\n        .toUpperCase();\n    } else {\n      return this.username[0].toUpperCase();\n    }\n  },\n\n  getLimitToShowCardsCount() {\n    const profile = this.profile || {};\n    return profile.showCardsCountAt;\n  },\n\n  getName() {\n    const profile = this.profile || {};\n    return profile.fullname || this.username;\n  },\n\n  getLanguage() {\n    const profile = this.profile || {};\n    return profile.language || 'en';\n  },\n\n  getStartDayOfWeek() {\n    const profile = this.profile || {};\n    if (typeof profile.startDayOfWeek === 'undefined') {\n      // default is 'Monday' (1)\n      return 1;\n    }\n    return profile.startDayOfWeek;\n  },\n\n  getTemplatesBoardId() {\n    return (this.profile || {}).templatesBoardId;\n  },\n\n  getTemplatesBoardSlug() {\n    //return (ReactiveCache.getBoard((this.profile || {}).templatesBoardId) || {}).slug;\n    return 'templates';\n  },\n\n  isKeyboardShortcuts() {\n    const { keyboardShortcuts = true } = this.profile || {};\n    return keyboardShortcuts;\n  },\n\n  isVerticalScrollbars() {\n    const { verticalScrollbars = true } = this.profile || {};\n    return verticalScrollbars;\n  },\n\n  isShowWeekOfYear() {\n    const { showWeekOfYear = true } = this.profile || {};\n    return showWeekOfYear;\n  },\n\n  remove() {\n    User.remove({\n      _id: this._id,\n    });\n  },\n});\n\nUsers.mutations({\n  /** set the confirmed board id/swimlane id/list id of a board\n   * @param boardId the current board id\n   * @param options an object with the confirmed field values\n   */\n  setMoveAndCopyDialogOption(boardId, options) {\n    let currentOptions = this.getMoveAndCopyDialogOptions();\n    currentOptions[boardId] = options;\n    return {\n      $set: {\n        'profile.moveAndCopyDialog': currentOptions,\n      },\n    };\n  },\n  /** set the confirmed board id/swimlane id/list id/card id of a board (move checklist)\n   * @param boardId the current board id\n   * @param options an object with the confirmed field values\n   */\n  setMoveChecklistDialogOption(boardId, options) {\n    let currentOptions = this.getMoveChecklistDialogOptions();\n    currentOptions[boardId] = options;\n    return {\n      $set: {\n        'profile.moveChecklistDialog': currentOptions,\n      },\n    };\n  },\n  /** set the confirmed board id/swimlane id/list id/card id of a board (copy checklist)\n   * @param boardId the current board id\n   * @param options an object with the confirmed field values\n   */\n  setCopyChecklistDialogOption(boardId, options) {\n    let currentOptions = this.getCopyChecklistDialogOptions();\n    currentOptions[boardId] = options;\n    return {\n      $set: {\n        'profile.copyChecklistDialog': currentOptions,\n      },\n    };\n  },\n  toggleBoardStar(boardId) {\n    const queryKind = this.hasStarred(boardId) ? '$pull' : '$addToSet';\n    return {\n      [queryKind]: {\n        'profile.starredBoards': boardId,\n      },\n    };\n  },\n  toggleAutoWidth(boardId) {\n    const { autoWidthBoards = {} } = this.profile || {};\n    autoWidthBoards[boardId] = !autoWidthBoards[boardId];\n    return {\n      $set: {\n        'profile.autoWidthBoards': autoWidthBoards,\n      },\n    };\n  },\n  toggleKeyboardShortcuts() {\n    const { keyboardShortcuts = true } = this.profile || {};\n    return {\n      $set: {\n        'profile.keyboardShortcuts': !keyboardShortcuts,\n      },\n    };\n  },\n  toggleVerticalScrollbars() {\n    const { verticalScrollbars = true } = this.profile || {};\n    return {\n      $set: {\n        'profile.verticalScrollbars': !verticalScrollbars,\n      },\n    };\n  },\n  toggleShowWeekOfYear() {\n    const { showWeekOfYear = true } = this.profile || {};\n    return {\n      $set: {\n        'profile.showWeekOfYear': !showWeekOfYear,\n      },\n    };\n  },\n\n  addInvite(boardId) {\n    return {\n      $addToSet: {\n        'profile.invitedBoards': boardId,\n      },\n    };\n  },\n\n  removeInvite(boardId) {\n    return {\n      $pull: {\n        'profile.invitedBoards': boardId,\n      },\n    };\n  },\n\n  addTag(tag) {\n    return {\n      $addToSet: {\n        'profile.tags': tag,\n      },\n    };\n  },\n\n  removeTag(tag) {\n    return {\n      $pull: {\n        'profile.tags': tag,\n      },\n    };\n  },\n\n  toggleTag(tag) {\n    if (this.hasTag(tag)) this.removeTag(tag);\n    else this.addTag(tag);\n  },\n\n  setListSortBy(value) {\n    return {\n      $set: {\n        'profile.listSortBy': value,\n      },\n    };\n  },\n\n  setName(value) {\n    return {\n      $set: {\n        'profile.fullname': value,\n      },\n    };\n  },\n\n  toggleDesktopHandles(value = false) {\n    return {\n      $set: {\n        'profile.showDesktopDragHandles': !value,\n      },\n    };\n  },\n\n  toggleFieldsGrid(value = false) {\n    return {\n      $set: {\n        'profile.customFieldsGrid': !value,\n      },\n    };\n  },\n\n  toggleCardMaximized(value = false) {\n    return {\n      $set: {\n        'profile.cardMaximized': !value,\n      },\n    };\n  },\n\n  toggleLabelText(value = false) {\n    return {\n      $set: {\n        'profile.hiddenMinicardLabelText': !value,\n      },\n    };\n  },\n  toggleRescueCardDescription(value = false) {\n    return {\n      $set: {\n        'profile.rescueCardDescription': !value,\n      },\n    };\n  },\n\n  addNotification(activityId) {\n    return {\n      $addToSet: {\n        'profile.notifications': {\n          activity: activityId,\n        },\n      },\n    };\n  },\n\n  removeNotification(activityId) {\n    return {\n      $pull: {\n        'profile.notifications': {\n          activity: activityId,\n        },\n      },\n    };\n  },\n\n  addEmailBuffer(text) {\n    return {\n      $addToSet: {\n        'profile.emailBuffer': text,\n      },\n    };\n  },\n\n  clearEmailBuffer() {\n    return {\n      $set: {\n        'profile.emailBuffer': [],\n      },\n    };\n  },\n\n  setAvatarUrl(avatarUrl) {\n    return {\n      $set: {\n        'profile.avatarUrl': avatarUrl,\n      },\n    };\n  },\n\n  setShowCardsCountAt(limit) {\n    return {\n      $set: {\n        'profile.showCardsCountAt': limit,\n      },\n    };\n  },\n\n  setStartDayOfWeek(startDay) {\n    return {\n      $set: {\n        'profile.startDayOfWeek': startDay,\n      },\n    };\n  },\n\n  setBoardView(view) {\n    return {\n      $set: {\n        'profile.boardView': view,\n      },\n    };\n  },\n\n  setListWidth(boardId, listId, width) {\n    let currentWidths = this.getListWidths();\n    if (!currentWidths[boardId]) {\n      currentWidths[boardId] = {};\n    }\n    currentWidths[boardId][listId] = width;\n    return {\n      $set: {\n        'profile.listWidths': currentWidths,\n      },\n    };\n  },\n\n  setListConstraint(boardId, listId, constraint) {\n    let currentConstraints = this.getListConstraints();\n    if (!currentConstraints[boardId]) {\n      currentConstraints[boardId] = {};\n    }\n    currentConstraints[boardId][listId] = constraint;\n    return {\n      $set: {\n        'profile.listConstraints': currentConstraints,\n      },\n    };\n  },\n\n  setSwimlaneHeight(boardId, swimlaneId, height) {\n    let currentHeights = this.getSwimlaneHeights();\n    if (!currentHeights[boardId]) {\n      currentHeights[boardId] = {};\n    }\n    currentHeights[boardId][swimlaneId] = height;\n    return {\n      $set: {\n        'profile.swimlaneHeights': currentHeights,\n      },\n    };\n  },\n});\n\nMeteor.methods({\n  setListSortBy(value) {\n    check(value, String);\n    ReactiveCache.getCurrentUser().setListSortBy(value);\n  },\n  toggleDesktopDragHandles() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleDesktopHandles(user.hasShowDesktopDragHandles());\n  },\n  toggleHideCheckedItems() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleHideCheckedItems();\n  },\n  toggleCustomFieldsGrid() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleFieldsGrid(user.hasCustomFieldsGrid());\n  },\n  toggleCardMaximized() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleCardMaximized(user.hasCardMaximized());\n  },\n  toggleMinicardLabelText() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleLabelText(user.hasHiddenMinicardLabelText());\n  },\n  toggleRescueCardDescription() {\n    const user = ReactiveCache.getCurrentUser();\n    user.toggleRescueCardDescription(user.hasRescuedCardDescription());\n  },\n  changeLimitToShowCardsCount(limit) {\n    check(limit, Number);\n    ReactiveCache.getCurrentUser().setShowCardsCountAt(limit);\n  },\n  changeStartDayOfWeek(startDay) {\n    check(startDay, Number);\n    ReactiveCache.getCurrentUser().setStartDayOfWeek(startDay);\n  },\n  applyListWidth(boardId, listId, width, constraint) {\n    check(boardId, String);\n    check(listId, String);\n    check(width, Number);\n    check(constraint, Number);\n    const user = ReactiveCache.getCurrentUser();\n    user.setListWidth(boardId, listId, width);\n    user.setListConstraint(boardId, listId, constraint);\n  },\n  applySwimlaneHeight(boardId, swimlaneId, height) {\n    check(boardId, String);\n    check(swimlaneId, String);\n    check(height, Number);\n    const user = ReactiveCache.getCurrentUser();\n    user.setSwimlaneHeight(boardId, swimlaneId, height);\n  },\n});\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    setCreateUser(\n      fullname,\n      username,\n      initials,\n      password,\n      isAdmin,\n      isActive,\n      email,\n      importUsernames,\n      userOrgsArray,\n      userTeamsArray,\n    ) {\n      check(fullname, String);\n      check(username, String);\n      check(initials, String);\n      check(password, String);\n      check(isAdmin, String);\n      check(isActive, String);\n      check(email, String);\n      check(importUsernames, Array);\n      check(userOrgsArray, Array);\n      check(userTeamsArray, Array);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (fullname.includes('/') ||\n         username.includes('/') ||\n         email.includes('/') ||\n         initials.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        const nUsersWithUsername = ReactiveCache.getUsers({\n          username,\n        }).length;\n        const nUsersWithEmail = ReactiveCache.getUsers({\n          email,\n        }).length;\n        if (nUsersWithUsername > 0) {\n          throw new Meteor.Error('username-already-taken');\n        } else if (nUsersWithEmail > 0) {\n          throw new Meteor.Error('email-already-taken');\n        } else {\n          Accounts.createUser({\n            username,\n            password,\n            isAdmin,\n            isActive,\n            email: email.toLowerCase(),\n            from: 'admin',\n          });\n          const user =\n            ReactiveCache.getUser(username) ||\n            ReactiveCache.getUser({ username });\n          if (user) {\n            Users.update(user._id, {\n              $set: {\n                'profile.fullname': fullname,\n                importUsernames,\n                'profile.initials': initials,\n                orgs: userOrgsArray,\n                teams: userTeamsArray,\n              },\n            });\n          }\n        }\n      }\n    },\n    setUsername(username, userId) {\n      check(username, String);\n      check(userId, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (username.includes('/') ||\n         userId.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        const nUsersWithUsername = ReactiveCache.getUsers({\n          username,\n        }).length;\n        if (nUsersWithUsername > 0) {\n          throw new Meteor.Error('username-already-taken');\n        } else {\n          Users.update(userId, {\n            $set: {\n              username,\n            },\n          });\n        }\n      }\n    },\n    setEmail(email, userId) {\n      check(email, String);\n      check(username, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (username.includes('/') ||\n         email.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        if (Array.isArray(email)) {\n          email = email.shift();\n        }\n        const existingUser = ReactiveCache.getUser(\n          {\n            'emails.address': email,\n          },\n          {\n            fields: {\n              _id: 1,\n            },\n          },\n        );\n        if (existingUser) {\n          throw new Meteor.Error('email-already-taken');\n        } else {\n          Users.update(userId, {\n            $set: {\n              emails: [\n                {\n                  address: email,\n                  verified: false,\n                },\n              ],\n            },\n          });\n        }\n      }\n    },\n    setUsernameAndEmail(username, email, userId) {\n      check(username, String);\n      check(email, String);\n      check(userId, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (username.includes('/') ||\n         email.includes('/') ||\n         userId.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        if (Array.isArray(email)) {\n          email = email.shift();\n        }\n        Meteor.call('setUsername', username, userId);\n        Meteor.call('setEmail', email, userId);\n      }\n    },\n    setPassword(newPassword, userId) {\n      check(userId, String);\n      check(newPassword, String);\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        Accounts.setPassword(userId, newPassword);\n      }\n    },\n    setEmailVerified(email, verified, userId) {\n      check(email, String);\n      check(verified, Boolean);\n      check(userId, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (email.includes('/') ||\n         userId.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        Users.update(userId, {\n          $set: {\n            emails: [\n              {\n                address: email,\n                verified,\n              },\n            ],\n          },\n        });\n      }\n    },\n    setInitials(initials, userId) {\n      check(initials, String);\n      check(userId, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (initials.includes('/') ||\n         userId.includes('/')) {\n         return false;\n      }\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        Users.update(userId, {\n          $set: {\n            'profile.initials': initials,\n          },\n        });\n      }\n    },\n    // we accept userId, username, email\n    inviteUserToBoard(username, boardId) {\n      check(username, String);\n      check(boardId, String);\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (username.includes('/') ||\n          boardId.includes('/')) {\n         return false;\n      }\n      const inviter = ReactiveCache.getCurrentUser();\n      const board = ReactiveCache.getBoard(boardId);\n      const allowInvite =\n        inviter &&\n        board &&\n        board.members &&\n        _.contains(_.pluck(board.members, 'userId'), inviter._id) &&\n        _.where(board.members, {\n          userId: inviter._id,\n        })[0].isActive;\n      // GitHub issue 2060\n      //_.where(board.members, { userId: inviter._id })[0].isAdmin;\n      if (!allowInvite) throw new Meteor.Error('error-board-notAMember');\n\n      this.unblock();\n\n      const posAt = username.indexOf('@');\n      let user = null;\n      if (posAt >= 0) {\n        user = ReactiveCache.getUser({\n          emails: {\n            $elemMatch: {\n              address: username,\n            },\n          },\n        });\n      } else {\n        user =\n          ReactiveCache.getUser(username) ||\n          ReactiveCache.getUser({ username });\n      }\n      if (user) {\n        if (user._id === inviter._id)\n          throw new Meteor.Error('error-user-notAllowSelf');\n      } else {\n        if (posAt <= 0) throw new Meteor.Error('error-user-doesNotExist');\n        if (ReactiveCache.getCurrentSetting().disableRegistration) {\n          throw new Meteor.Error('error-user-notCreated');\n        }\n        // Set in lowercase email before creating account\n        const email = username.toLowerCase();\n        username = email.substring(0, posAt);\n        // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n        // Thanks to mc-marcy and xet7 !\n        if (username.includes('/') ||\n           email.includes('/')) {\n           return false;\n        }\n        const newUserId = Accounts.createUser({\n          username,\n          email,\n        });\n        if (!newUserId) throw new Meteor.Error('error-user-notCreated');\n        // assume new user speak same language with inviter\n        if (inviter.profile && inviter.profile.language) {\n          Users.update(newUserId, {\n            $set: {\n              'profile.language': inviter.profile.language,\n            },\n          });\n        }\n        Accounts.sendEnrollmentEmail(newUserId);\n        user = ReactiveCache.getUser(newUserId);\n      }\n\n      board.addMember(user._id);\n      user.addInvite(boardId);\n\n      //Check if there is a subtasks board\n      if (board.subtasksDefaultBoardId) {\n        const subBoard = ReactiveCache.getBoard(board.subtasksDefaultBoardId);\n        //If there is, also add user to that board\n        if (subBoard) {\n          subBoard.addMember(user._id);\n          user.addInvite(subBoard._id);\n        }\n      }        try {\n          const fullName =\n            inviter.profile !== undefined &&\n              inviter.profile.fullname !== undefined\n              ? inviter.profile.fullname\n              : '';\n          const userFullName =\n            user.profile !== undefined && user.profile.fullname !== undefined\n              ? user.profile.fullname\n              : '';\n          const params = {\n            user:\n              userFullName != ''\n                ? userFullName + ' (' + user.username + ' )'\n                : user.username,\n            inviter:\n              fullName != ''\n                ? fullName + ' (' + inviter.username + ' )'\n                : inviter.username,\n            board: board.title,\n            url: board.absoluteUrl(),\n          };\n          // Get the recipient user's language preference for the email\n          const lang = user.getLanguage();\n\n          // Add code to send invitation with EmailLocalization\n          if (typeof EmailLocalization !== 'undefined') {\n            EmailLocalization.sendEmail({\n              to: user.emails[0].address,\n              from: Accounts.emailTemplates.from,\n              subject: 'email-invite-subject',\n              text: 'email-invite-text',\n              params: params,\n              language: lang,\n              userId: user._id\n            });\n          } else {\n            // Fallback if EmailLocalization is not available\n            Email.send({\n              to: user.emails[0].address,\n              from: Accounts.emailTemplates.from,\n              subject: TAPi18n.__('email-invite-subject', params, lang),\n              text: TAPi18n.__('email-invite-text', params, lang),\n            });\n          }\n      } catch (e) {\n        throw new Meteor.Error('email-fail', e.message);\n      }\n      return {\n        username: user.username,\n        email: user.emails[0].address,\n      };\n    },\n    impersonate(userId) {\n      check(userId, String);\n\n      if (!ReactiveCache.getUser(userId))\n        throw new Meteor.Error(404, 'User not found');\n      if (!ReactiveCache.getCurrentUser().isAdmin)\n        throw new Meteor.Error(403, 'Permission denied');\n\n      ImpersonatedUsers.insert({\n        adminId: ReactiveCache.getCurrentUser()._id,\n        userId: userId,\n        reason: 'clickedImpersonate',\n      });\n      this.setUserId(userId);\n    },\n    isImpersonated(userId) {\n      check(userId, String);\n      const isImpersonated = ReactiveCache.getImpersonatedUser({ userId: userId });\n      return isImpersonated;\n    },\n    setUsersTeamsTeamDisplayName(teamId, teamDisplayName) {\n      check(teamId, String);\n      check(teamDisplayName, String);\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        ReactiveCache.getUsers({\n          teams: {\n            $elemMatch: { teamId: teamId },\n          },\n        }).forEach((user) => {\n          Users.update(\n            {\n              _id: user._id,\n              teams: {\n                $elemMatch: { teamId: teamId },\n              },\n            },\n            {\n              $set: {\n                'teams.$.teamDisplayName': teamDisplayName,\n              },\n            },\n          );\n        });\n      }\n    },\n    setUsersOrgsOrgDisplayName(orgId, orgDisplayName) {\n      check(orgId, String);\n      check(orgDisplayName, String);\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        ReactiveCache.getUsers({\n          orgs: {\n            $elemMatch: { orgId: orgId },\n          },\n        }).forEach((user) => {\n          Users.update(\n            {\n              _id: user._id,\n              orgs: {\n                $elemMatch: { orgId: orgId },\n              },\n            },\n            {\n              $set: {\n                'orgs.$.orgDisplayName': orgDisplayName,\n              },\n            },\n          );\n        });\n      }\n    },\n  });\n  Accounts.onCreateUser((options, user) => {\n    const userCount = ReactiveCache.getUsers({}, {}, true).count();\n    user.isAdmin = userCount === 0;\n\n    if (user.services.oidc) {\n      let email = user.services.oidc.email;\n      if (Array.isArray(email)) {\n        email = email.shift();\n      }\n      email = email.toLowerCase();\n      user.username = user.services.oidc.username;\n      user.emails = [\n        {\n          address: email,\n          verified: true,\n        },\n      ];\n\n\n      // Prevent Hyperlink Injection https://github.com/wekan/wekan/issues/5176\n      // Thanks to mc-marcy and xet7 !\n      if (user.username.includes('/') ||\n         email.includes('/')) {\n         return false;\n      }\n\n\n      const initials = user.services.oidc.fullname\n        .split(/\\s+/)\n        .reduce((memo, word) => {\n          return memo + word[0];\n        }, '')\n        .toUpperCase();\n      user.profile = {\n        initials,\n        fullname: user.services.oidc.fullname,\n        boardView: 'board-view-swimlanes',\n      };\n      user.authenticationMethod = 'oauth2';\n\n      // see if any existing user has this email address or username, otherwise create new\n      const existingUser = ReactiveCache.getUser({\n        $or: [\n          {\n            'emails.address': email,\n          },\n          {\n            username: user.username,\n          },\n        ],\n      });\n      if (!existingUser) return user;\n\n      // copy across new service info\n      const service = _.keys(user.services)[0];\n      existingUser.services[service] = user.services[service];\n      existingUser.emails = user.emails;\n      existingUser.username = user.username;\n      existingUser.profile = user.profile;\n      existingUser.authenticationMethod = user.authenticationMethod;\n\n      Meteor.users.remove({\n        _id: user._id,\n      });\n      Meteor.users.remove({\n        _id: existingUser._id,\n      }); // is going to be created again\n      return existingUser;\n    }\n\n    if (options.from === 'admin') {\n      user.createdThroughApi = true;\n      return user;\n    }\n\n    const disableRegistration = ReactiveCache.getCurrentSetting().disableRegistration;\n    // If this is the first Authentication by the ldap and self registration disabled\n    if (disableRegistration && options && options.ldap) {\n      user.authenticationMethod = 'ldap';\n      return user;\n    }\n\n    // If self registration enabled\n    if (!disableRegistration) {\n      return user;\n    }\n\n    if (!options || !options.profile) {\n      throw new Meteor.Error(\n        'error-invitation-code-blank',\n        'The invitation code is required',\n      );\n    }\n    const invitationCode = ReactiveCache.getInvitationCode({\n      code: options.profile.invitationcode,\n      email: options.email,\n      valid: true,\n    });\n    if (!invitationCode) {\n      throw new Meteor.Error(\n        'error-invitation-code-not-exist',\n        // eslint-disable-next-line quotes\n        \"The invitation code doesn't exist\",\n      );\n    } else {\n      user.profile = {\n        icode: options.profile.invitationcode,\n      };\n      user.profile.boardView = 'board-view-swimlanes';\n\n      // Deletes the invitation code after the user was created successfully.\n      setTimeout(\n        Meteor.bindEnvironment(() => {\n          InvitationCodes.remove({\n            _id: invitationCode._id,\n          });\n        }),\n        200,\n      );\n      return user;\n    }\n  });\n}\n\nconst addCronJob = _.debounce(\n  Meteor.bindEnvironment(function notificationCleanupDebounced() {\n    // passed in the removeAge has to be a number standing for the number of days after a notification is read before we remove it\n    const envRemoveAge =\n      process.env.NOTIFICATION_TRAY_AFTER_READ_DAYS_BEFORE_REMOVE;\n    // default notifications will be removed 2 days after they are read\n    const defaultRemoveAge = 2;\n    const removeAge = parseInt(envRemoveAge, 10) || defaultRemoveAge;\n\n    SyncedCron.add({\n      name: 'notification_cleanup',\n      schedule: (parser) => parser.text('every 1 days'),\n      job: () => {\n        for (const user of ReactiveCache.getUsers()) {\n          if (!user.profile || !user.profile.notifications) continue;\n          for (const notification of user.profile.notifications) {\n            if (notification.read) {\n              const removeDate = new Date(notification.read);\n              removeDate.setDate(removeDate.getDate() + removeAge);\n              if (removeDate <= new Date()) {\n                user.removeNotification(notification.activity);\n              }\n            }\n          }\n        }\n      },\n    });\n\n    SyncedCron.start();\n  }),\n  500,\n);\n\nif (Meteor.isServer) {\n  // Let mongoDB ensure username unicity\n  Meteor.startup(() => {\n    allowedSortValues.forEach((value) => {\n      Lists._collection.createIndex(value);\n    });\n    Users._collection.createIndex({\n      modifiedAt: -1,\n    });\n    // Avatar URLs from CollectionFS to Meteor-Files, at users collection avatarUrl field:\n    Users.find({ \"profile.avatarUrl\": { $regex: \"/cfs/files/avatars/\" } }).forEach(function (doc) {\n        doc.profile.avatarUrl = doc.profile.avatarUrl.replace(\"/cfs/files/avatars/\", \"/cdn/storage/avatars/\");\n      // Try to fix Users.save is not a fuction, by commenting it out:\n      //Users.save(doc);\n    });\n    /* TODO: Optionally, for additional complexity:\n       a) Support SubURLs with parthname from ROOT_URL\n       b) Remove beginning or avatar URL, replace it with pathname and new avatar URL\n       c) Does all avatar and attachment URLs need to be fixed every time when starting or restarting?\n       d) What if avatar URL is at some other server? In that case, links would point incorrectly to this instance, if ROOT_URL and path part is removed.\n       doc.profile.avatarUrl = process.env.ROOT_URL.pathname + doc.profile.avatarUrl.replace(\"/cfs/files/avatars/\", \"/cdn/storage/avatars/\").substring(str.indexOf(\"/cdn/storage/avatars\"));\n    */\n    /* Commented out extra index because of IndexOptionsConflict.\n    Users._collection.createIndex(\n      {\n        username: 1,\n      },\n      {\n        unique: true,\n      },\n    );\n*/\n    Meteor.defer(() => {\n      addCronJob();\n    });\n  });\n\n  // OLD WAY THIS CODE DID WORK: When user is last admin of board,\n  // if admin is removed, board is removed.\n  // NOW THIS IS COMMENTED OUT, because other board users still need to be able\n  // to use that board, and not have board deleted.\n  // Someone can be later changed to be admin of board, by making change to database.\n  // TODO: Add UI for changing someone as board admin.\n  //Users.before.remove((userId, doc) => {\n  //  Boards\n  //    .find({members: {$elemMatch: {userId: doc._id, isAdmin: true}}})\n  //    .forEach((board) => {\n  //      // If only one admin for the board\n  //      if (board.members.filter((e) => e.isAdmin).length === 1) {\n  //        Boards.remove(board._id);\n  //      }\n  //    });\n  //});\n\n  // Each board document contains the de-normalized number of users that have\n  // starred it. If the user star or unstar a board, we need to update this\n  // counter.\n  // We need to run this code on the server only, otherwise the incrementation\n  // will be done twice.\n  Users.after.update(function (userId, user, fieldNames) {\n    // The `starredBoards` list is hosted on the `profile` field. If this\n    // field hasn't been modificated we don't need to run this hook.\n    if (!_.contains(fieldNames, 'profile')) return;\n\n    // To calculate a diff of board starred ids, we get both the previous\n    // and the newly board ids list\n    function getStarredBoardsIds(doc) {\n      return doc.profile && doc.profile.starredBoards;\n    }\n\n    const oldIds = getStarredBoardsIds(this.previous);\n    const newIds = getStarredBoardsIds(user);\n\n    // The _.difference(a, b) method returns the values from a that are not in\n    // b. We use it to find deleted and newly inserted ids by using it in one\n    // direction and then in the other.\n    function incrementBoards(boardsIds, inc) {\n      boardsIds.forEach((boardId) => {\n        Boards.update(boardId, {\n          $inc: {\n            stars: inc,\n          },\n        });\n      });\n    }\n\n    incrementBoards(_.difference(oldIds, newIds), -1);\n    incrementBoards(_.difference(newIds, oldIds), +1);\n  });\n\n  // Override getUserId so that we can TODO get the current userId\n  const fakeUserId = new Meteor.EnvironmentVariable();\n  const getUserId = CollectionHooks.getUserId;\n  CollectionHooks.getUserId = () => {\n    return fakeUserId.get() || getUserId();\n  };\n  if (!isSandstorm) {\n    Users.after.insert((userId, doc) => {\n      const fakeUser = {\n        extendAutoValueContext: {\n          userId: doc._id,\n        },\n      };\n\n      fakeUserId.withValue(doc._id, () => {\n        /*\n\n        // Insert the Welcome Board\n        Boards.insert({\n          title: TAPi18n.__('welcome-board'),\n          permission: 'private',\n        }, fakeUser, (err, boardId) => {\n\n          Swimlanes.insert({\n            title: TAPi18n.__('welcome-swimlane'),\n            boardId,\n            sort: 1,\n          }, fakeUser);\n\n          ['welcome-list1', 'welcome-list2'].forEach((title, titleIndex) => {\n            Lists.insert({title: TAPi18n.__(title), boardId, sort: titleIndex}, fakeUser);\n          });\n        });\n        */\n\n        // Insert Template Container\n        const Future = require('fibers/future');\n        const future1 = new Future();\n        const future2 = new Future();\n        const future3 = new Future();\n        Boards.insert(\n          {\n            title: TAPi18n.__('templates'),\n            permission: 'private',\n            type: 'template-container',\n          },\n          fakeUser,\n          (err, boardId) => {\n            // Insert the reference to our templates board\n            Users.update(fakeUserId.get(), {\n              $set: {\n                'profile.templatesBoardId': boardId,\n              },\n            });\n\n            // Insert the card templates swimlane\n            Swimlanes.insert(\n              {\n                title: TAPi18n.__('card-templates-swimlane'),\n                boardId,\n                sort: 1,\n                type: 'template-container',\n              },\n              fakeUser,\n              (err, swimlaneId) => {\n                // Insert the reference to out card templates swimlane\n                Users.update(fakeUserId.get(), {\n                  $set: {\n                    'profile.cardTemplatesSwimlaneId': swimlaneId,\n                  },\n                });\n                future1.return();\n              },\n            );\n\n            // Insert the list templates swimlane\n            Swimlanes.insert(\n              {\n                title: TAPi18n.__('list-templates-swimlane'),\n                boardId,\n                sort: 2,\n                type: 'template-container',\n              },\n              fakeUser,\n              (err, swimlaneId) => {\n                // Insert the reference to out list templates swimlane\n                Users.update(fakeUserId.get(), {\n                  $set: {\n                    'profile.listTemplatesSwimlaneId': swimlaneId,\n                  },\n                });\n                future2.return();\n              },\n            );\n\n            // Insert the board templates swimlane\n            Swimlanes.insert(\n              {\n                title: TAPi18n.__('board-templates-swimlane'),\n                boardId,\n                sort: 3,\n                type: 'template-container',\n              },\n              fakeUser,\n              (err, swimlaneId) => {\n                // Insert the reference to out board templates swimlane\n                Users.update(fakeUserId.get(), {\n                  $set: {\n                    'profile.boardTemplatesSwimlaneId': swimlaneId,\n                  },\n                });\n                future3.return();\n              },\n            );\n          },\n        );\n        // HACK\n        future1.wait();\n        future2.wait();\n        future3.wait();\n        // End of Insert Template Container\n      });\n    });\n  }\n\n  Users.after.insert((userId, doc) => {\n    // HACK\n    doc = ReactiveCache.getUser(doc._id);\n    if (doc.createdThroughApi) {\n      // The admin user should be able to create a user despite disabling registration because\n      // it is two different things (registration and creation).\n      // So, when a new user is created via the api (only admin user can do that) one must avoid\n      // the disableRegistration check.\n      // Issue : https://github.com/wekan/wekan/issues/1232\n      // PR    : https://github.com/wekan/wekan/pull/1251\n      Users.update(doc._id, {\n        $set: {\n          createdThroughApi: '',\n        },\n      });\n      return;\n    }\n\n    //invite user to corresponding boards\n    const disableRegistration = ReactiveCache.getCurrentSetting().disableRegistration;\n    // If ldap, bypass the inviation code if the self registration isn't allowed.\n    // TODO : pay attention if ldap field in the user model change to another content ex : ldap field to connection_type\n    if (doc.authenticationMethod !== 'ldap' && disableRegistration) {\n      let invitationCode = null;\n      if (doc.authenticationMethod.toLowerCase() == 'oauth2') {\n        // OIDC authentication mode\n        invitationCode = ReactiveCache.getInvitationCode({\n          email: doc.emails[0].address.toLowerCase(),\n          valid: true,\n        });\n      } else {\n        invitationCode = ReactiveCache.getInvitationCode({\n          code: doc.profile.icode,\n          valid: true,\n        });\n      }\n      if (!invitationCode) {\n        throw new Meteor.Error('error-invitation-code-not-exist');\n      } else {\n        invitationCode.boardsToBeInvited.forEach((boardId) => {\n          const board = ReactiveCache.getBoard(boardId);\n          board.addMember(doc._id);\n        });\n        if (!doc.profile) {\n          doc.profile = {};\n        }\n        doc.profile.invitedBoards = invitationCode.boardsToBeInvited;\n        Users.update(doc._id, {\n          $set: {\n            profile: doc.profile,\n          },\n        });\n        InvitationCodes.update(invitationCode._id, {\n          $set: {\n            valid: false,\n          },\n        });\n      }\n    }\n  });\n}\n\n// USERS REST API\nif (Meteor.isServer) {\n  // Middleware which checks that API is enabled.\n  JsonRoutes.Middleware.use(function (req, res, next) {\n    const api = req.url.startsWith('/api');\n    if ((api === true && process.env.WITH_API === 'true') || api === false) {\n      return next();\n    } else {\n      res.writeHead(301, {\n        Location: '/',\n      });\n      return res.end();\n    }\n  });\n\n  /**\n   * @operation get_current_user\n   *\n   * @summary returns the current user\n   * @return_type Users\n   */\n  JsonRoutes.add('GET', '/api/user', function (req, res) {\n    try {\n      Authentication.checkLoggedIn(req.userId);\n      const data = ReactiveCache.getUser({\n        _id: req.userId,\n      });\n      delete data.services;\n\n      // get all boards where the user is member of\n      let boards = ReactiveCache.getBoards(\n        {\n          type: 'board',\n          'members.userId': req.userId,\n        },\n        {\n          fields: {\n            _id: 1,\n            members: 1,\n          },\n        },\n      );\n      boards = boards.map((b) => {\n        const u = b.members.find((m) => m.userId === req.userId);\n        delete u.userId;\n        u.boardId = b._id;\n        return u;\n      });\n\n      data.boards = boards;\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data,\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_all_users\n   *\n   * @summary return all the users\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   * @return_type [{ _id: string,\n   *                 username: string}]\n   */\n  JsonRoutes.add('GET', '/api/users', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: Meteor.users.find({}).map(function (doc) {\n          return {\n            _id: doc._id,\n            username: doc.username,\n          };\n        }),\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation get_user\n   *\n   * @summary get a given user\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} userId the user ID or username\n   * @return_type Users\n   */\n  JsonRoutes.add('GET', '/api/users/:userId', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      let id = req.params.userId;\n      let user = ReactiveCache.getUser({\n        _id: id,\n      });\n      if (!user) {\n        user = ReactiveCache.getUser({\n          username: id,\n        });\n        id = user._id;\n      }\n\n      // get all boards where the user is member of\n      let boards = ReactiveCache.getBoards(\n        {\n          type: 'board',\n          'members.userId': id,\n        },\n        {\n          fields: {\n            _id: 1,\n            members: 1,\n          },\n        },\n      );\n      boards = boards.map((b) => {\n        const u = b.members.find((m) => m.userId === id);\n        delete u.userId;\n        u.boardId = b._id;\n        return u;\n      });\n\n      user.boards = boards;\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: user,\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation edit_user\n   *\n   * @summary edit a given user\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * Possible values for *action*:\n   * - `takeOwnership`: The admin takes the ownership of ALL boards of the user (archived and not archived) where the user is admin on.\n   * - `disableLogin`: Disable a user (the user is not allowed to login and his login tokens are purged)\n   * - `enableLogin`: Enable a user\n   *\n   * @param {string} userId the user ID\n   * @param {string} action the action\n   * @return_type {_id: string,\n   *               title: string}\n   */\n  JsonRoutes.add('PUT', '/api/users/:userId', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const id = req.params.userId;\n      const action = req.body.action;\n      let data = ReactiveCache.getUser({\n        _id: id,\n      });\n      if (data !== undefined) {\n        if (action === 'takeOwnership') {\n          data = ReactiveCache.getBoards(\n            {\n              'members.userId': id,\n              'members.isAdmin': true,\n            },\n            {\n              sort: {\n                sort: 1 /* boards default sorting */,\n              },\n            },\n          ).map(function (board) {\n            if (board.hasMember(req.userId)) {\n              board.removeMember(req.userId);\n            }\n            board.changeOwnership(id, req.userId);\n            return {\n              _id: board._id,\n              title: board.title,\n            };\n          });\n        } else {\n          if (action === 'disableLogin' && id !== req.userId) {\n            Users.update(\n              {\n                _id: id,\n              },\n              {\n                $set: {\n                  loginDisabled: true,\n                  'services.resume.loginTokens': '',\n                },\n              },\n            );\n          } else if (action === 'enableLogin') {\n            Users.update(\n              {\n                _id: id,\n              },\n              {\n                $set: {\n                  loginDisabled: '',\n                },\n              },\n            );\n          }\n          data = ReactiveCache.getUser(id);\n        }\n      }\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data,\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation add_board_member\n   * @tag Boards\n   *\n   * @summary Add New Board Member with Role\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * **Note**: see [Boards.set_board_member_permission](#set_board_member_permission)\n   * to later change the permissions.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} userId the user ID\n   * @param {string} action the action (needs to be `add`)\n   * @param {boolean} isAdmin is the user an admin of the board\n   * @param {boolean} isNoComments disable comments\n   * @param {boolean} isCommentOnly only enable comments\n   * @param {boolean} isWorker is the user a board worker\n   * @return_type {_id: string,\n   *               title: string}\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/members/:userId/add',\n    function (req, res) {\n      try {\n        Authentication.checkUserId(req.userId);\n        const userId = req.params.userId;\n        const boardId = req.params.boardId;\n        const action = req.body.action;\n        const { isAdmin, isNoComments, isCommentOnly, isWorker } = req.body;\n        let data = ReactiveCache.getUser(userId);\n        if (data !== undefined) {\n          if (action === 'add') {\n            data = ReactiveCache.getBoards({\n              _id: boardId,\n            }).map(function (board) {\n              if (!board.hasMember(userId)) {\n                board.addMember(userId);\n\n                function isTrue(data) {\n                  return data.toLowerCase() === 'true';\n                }\n                board.setMemberPermission(\n                  userId,\n                  isTrue(isAdmin),\n                  isTrue(isNoComments),\n                  isTrue(isCommentOnly),\n                  isTrue(isWorker),\n                  userId,\n                );\n              }\n              return {\n                _id: board._id,\n                title: board.title,\n              };\n            });\n          }\n        }\n        JsonRoutes.sendResult(res, { code: 200, data });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation remove_board_member\n   * @tag Boards\n   *\n   * @summary Remove Member from Board\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} boardId the board ID\n   * @param {string} userId the user ID\n   * @param {string} action the action (needs to be `remove`)\n   * @return_type {_id: string,\n   *               title: string}\n   */\n  JsonRoutes.add(\n    'POST',\n    '/api/boards/:boardId/members/:userId/remove',\n    function (req, res) {\n      try {\n        Authentication.checkUserId(req.userId);\n        const userId = req.params.userId;\n        const boardId = req.params.boardId;\n        const action = req.body.action;\n        let data = ReactiveCache.getUser(userId);\n        if (data !== undefined) {\n          if (action === 'remove') {\n            data = ReactiveCache.getBoards({\n              _id: boardId,\n            }).map(function (board) {\n              if (board.hasMember(userId)) {\n                board.removeMember(userId);\n              }\n              return {\n                _id: board._id,\n                title: board.title,\n              };\n            });\n          }\n        }\n        JsonRoutes.sendResult(res, { code: 200, data });\n      } catch (error) {\n        JsonRoutes.sendResult(res, {\n          code: 200,\n          data: error,\n        });\n      }\n    },\n  );\n\n  /**\n   * @operation new_user\n   *\n   * @summary Create a new user\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} username the new username\n   * @param {string} email the email of the new user\n   * @param {string} password the password of the new user\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/users/', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const id = Accounts.createUser({\n        username: req.body.username,\n        email: req.body.email,\n        password: req.body.password,\n        from: 'admin',\n      });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_user\n   *\n   * @summary Delete a user\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} userId the ID of the user to delete\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('DELETE', '/api/users/:userId', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const id = req.params.userId;\n      // Delete user is enabled, but is still has bug of leaving empty user avatars\n      // to boards: boards members, card members and assignees have\n      // empty users. So it would be better to delete user from all boards before\n      // deleting user.\n      // See:\n      // - wekan/client/components/settings/peopleBody.jade deleteButton\n      // - wekan/client/components/settings/peopleBody.js deleteButton\n      // - wekan/client/components/sidebar/sidebar.js Popup.afterConfirm('removeMember'\n      //   that does now remove member from board, card members and assignees correctly,\n      //   but that should be used to remove user from all boards similarly\n      // - wekan/models/users.js Delete is not enabled\n      Meteor.users.remove({ _id: id });\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation create_user_token\n   *\n   * @summary Create a user token\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} userId the ID of the user to create token for.\n   * @return_type {_id: string}\n   */\n  JsonRoutes.add('POST', '/api/createtoken/:userId', function (req, res) {\n    try {\n      Authentication.checkUserId(req.userId);\n      const id = req.params.userId;\n      const token = Accounts._generateStampedLoginToken();\n      Accounts._insertLoginToken(id, token);\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: {\n          _id: id,\n          authToken: token.token,\n        },\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n\n  /**\n   * @operation delete_user_token\n   *\n   * @summary Delete one or all user token.\n   *\n   * @description Only the admin user (the first user) can call the REST API.\n   *\n   * @param {string} userId the user ID\n   * @param {string} token the user hashedToken\n   * @return_type {message: string}\n   */\n  JsonRoutes.add('POST', '/api/deletetoken', function (req, res) {\n    try {\n      const { userId, token } = req.body;\n      Authentication.checkUserId(req.userId);\n\n      let data = {\n        message: 'Expected a userId to be set but received none.',\n      };\n\n      if (token && userId) {\n        Accounts.destroyToken(userId, token);\n        data.message = 'Delete token: [' + token + '] from user: ' + userId;\n      } else if (userId) {\n        check(userId, String);\n        Users.update(\n          {\n            _id: userId,\n          },\n          {\n            $set: {\n              'services.resume.loginTokens': '',\n            },\n          },\n        );\n        data.message = 'Delete all token from user: ' + userId;\n      }\n\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data,\n      });\n    } catch (error) {\n      JsonRoutes.sendResult(res, {\n        code: 200,\n        data: error,\n      });\n    }\n  });\n}\n\nexport default Users;\n","SessionData = new Mongo.Collection('sessiondata');\n\n/**\n * A UserSessionData in Wekan. Organization in Trello.\n */\nSessionData.attachSchema(\n  new SimpleSchema({\n    _id: {\n      /**\n       * the organization id\n       */\n      type: Number,\n      optional: true,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert && !this.isSet) {\n          return incrementCounter('counters', 'orgId', 1);\n        }\n      },\n    },\n    userId: {\n      /**\n       * userId of the user\n       */\n      type: String,\n      optional: false,\n    },\n    sessionId: {\n      /**\n       * unique session ID\n       */\n      type: String,\n      optional: false,\n    },\n    totalHits: {\n      /**\n       * total number of hits in the last report query\n       */\n      type: Number,\n      optional: true,\n    },\n    resultsCount: {\n      /**\n       * number of results returned\n       */\n      type: Number,\n      optional: true,\n    },\n    lastHit: {\n      /**\n       * the last hit returned from a report query\n       */\n      type: Number,\n      optional: true,\n    },\n    cards: {\n      type: [String],\n      optional: true,\n    },\n    selector: {\n      type: String,\n      optional: true,\n      blackbox: true,\n    },\n    projection: {\n      type: String,\n      optional: true,\n      blackbox: true,\n      defaultValue: {},\n    },\n    errorMessages: {\n      type: [String],\n      optional: true,\n    },\n    errors: {\n      type: [Object],\n      optional: true,\n      defaultValue: [],\n    },\n    debug: {\n      type: String,\n      optional: true,\n    },\n    'errors.$': {\n      type: new SimpleSchema({\n        tag: {\n          /**\n           * i18n tag\n           */\n          type: String,\n          optional: false,\n        },\n        value: {\n          /**\n           * value for the tag\n           */\n          type: String,\n          optional: true,\n          defaultValue: null,\n        },\n        color: {\n          type: Boolean,\n          optional: true,\n          defaultValue: false,\n        },\n      }),\n    },\n    createdAt: {\n      /**\n       * creation date of the team\n       */\n      type: Date,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpsert) {\n          return { $setOnInsert: new Date() };\n        } else {\n          this.unset();\n        }\n      },\n    },\n    modifiedAt: {\n      type: Date,\n      denyUpdate: false,\n      // eslint-disable-next-line consistent-return\n      autoValue() {\n        if (this.isInsert || this.isUpsert || this.isUpdate) {\n          return new Date();\n        } else {\n          this.unset();\n        }\n      },\n    },\n  }),\n);\n\nSessionData.helpers({\n  getSelector() {\n    return SessionData.unpickle(this.selector);\n  },\n  getProjection() {\n    return SessionData.unpickle(this.projection);\n  },\n});\n\nSessionData.unpickle = pickle => {\n  return JSON.parse(pickle, (key, value) => {\n    return unpickleValue(value);\n  });\n};\n\nfunction unpickleValue(value) {\n  if (value === null) {\n    return null;\n  } else if (typeof value === 'object') {\n    // eslint-disable-next-line no-prototype-builtins\n    if (value.hasOwnProperty('$$class')) {\n      switch (value.$$class) {\n        case 'RegExp':\n          return new RegExp(value.source, value.flags);\n        case 'Date':\n          return new Date(value.stringValue);\n        case 'Object':\n          return unpickleObject(value);\n      }\n    }\n  }\n  return value;\n}\n\nfunction unpickleObject(obj) {\n  const newObject = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    newObject[key] = unpickleValue(value);\n  });\n  return newObject;\n}\n\nSessionData.pickle = value => {\n  return JSON.stringify(value, (key, value) => {\n    return pickleValue(value);\n  }, 2);\n};\n\nfunction pickleValue(value) {\n  if (value === null) {\n    return null;\n  } else if (typeof value === 'object') {\n    switch (value.constructor.name) {\n      case 'RegExp':\n        return {\n          $$class: 'RegExp',\n          source: value.source,\n          flags: value.flags,\n        };\n      case 'Date':\n        return {\n          $$class: 'Date',\n          stringValue: String(value),\n        };\n      case 'Object':\n        return pickleObject(value);\n    }\n  }\n  return value;\n}\n\nfunction pickleObject(obj) {\n  const newObject = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    newObject[key] = pickleValue(value);\n  });\n  return newObject;\n}\n\nif (!Meteor.isServer) {\n  SessionData.getSessionId = () => {\n    let sessionId = Session.get('sessionId');\n    if (!sessionId) {\n      sessionId = `${String(Meteor.userId())}-${String(Math.random())}`;\n      Session.set('sessionId', sessionId);\n    }\n\n    return sessionId;\n  };\n}\n\nexport default SessionData;\n","// simple version, only toggle watch / unwatch\nconst simpleWatchable = collection => {\n  collection.attachSchema({\n    watchers: {\n      type: [String],\n      optional: true,\n    },\n  });\n\n  collection.helpers({\n    getWatchLevels() {\n      return [true, false];\n    },\n\n    watcherIndex(userId) {\n      return this.watchers.indexOf(userId);\n    },\n\n    findWatcher(userId) {\n      return _.contains(this.watchers, userId);\n    },\n  });\n\n  collection.mutations({\n    setWatcher(userId, level) {\n      // if level undefined or null or false, then remove\n      if (!level) return { $pull: { watchers: userId } };\n      return { $addToSet: { watchers: userId } };\n    },\n  });\n};\n\n// more complex version of same interface, with 3 watching levels\nconst complexWatchOptions = ['watching', 'tracking', 'muted'];\nconst complexWatchDefault = 'muted';\n\nconst complexWatchable = collection => {\n  collection.attachSchema({\n    'watchers.$.userId': {\n      type: String,\n    },\n    'watchers.$.level': {\n      type: String,\n      allowedValues: complexWatchOptions,\n    },\n  });\n\n  collection.helpers({\n    getWatchOptions() {\n      return complexWatchOptions;\n    },\n\n    getWatchDefault() {\n      return complexWatchDefault;\n    },\n\n    watcherIndex(userId) {\n      return _.pluck(this.watchers, 'userId').indexOf(userId);\n    },\n\n    findWatcher(userId) {\n      return _.findWhere(this.watchers, { userId });\n    },\n\n    getWatchLevel(userId) {\n      const watcher = this.findWatcher(userId);\n      return watcher ? watcher.level : complexWatchDefault;\n    },\n  });\n\n  collection.mutations({\n    setWatcher(userId, level) {\n      // if level undefined or null or false, then remove\n      if (level === complexWatchDefault) level = null;\n      if (!level) return { $pull: { watchers: { userId } } };\n      const index = this.watcherIndex(userId);\n      if (index < 0) return { $push: { watchers: { userId, level } } };\n      return {\n        $set: {\n          [`watchers.${index}.level`]: level,\n        },\n      };\n    },\n  });\n};\n\ncomplexWatchable(Boards);\nsimpleWatchable(Lists);\nsimpleWatchable(Cards);\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\n\nconst DateString = Match.Where(function(dateAsString) {\n  check(dateAsString, String);\n  return moment(dateAsString, moment.ISO_8601).isValid();\n});\n\nexport class WekanCreator {\n  constructor(data) {\n    // we log current date, to use the same timestamp for all our actions.\n    // this helps to retrieve all elements performed by the same import.\n    this._nowDate = new Date();\n    // The object creation dates, indexed by Wekan id\n    // (so we only parse actions once!)\n    this.createdAt = {\n      board: null,\n      cards: {},\n      lists: {},\n      swimlanes: {},\n      customFields: {},\n    };\n    // The object creator Wekan Id, indexed by the object Wekan id\n    // (so we only parse actions once!)\n    this.createdBy = {\n      cards: {}, // only cards have a field for that\n    };\n\n    // Map of labels Wekan ID => Wekan ID\n    this.labels = {};\n    // Map of swimlanes Wekan ID => Wekan ID\n    this.swimlanes = {};\n    // Map of lists Wekan ID => Wekan ID\n    this.lists = {};\n    // Map of cards Wekan ID => Wekan ID\n    this.cards = {};\n    // Map of custom fields Wekan ID => Wekan ID\n    this.customFields = {};\n    // Map of comments Wekan ID => Wekan ID\n    this.commentIds = {};\n    // Map of attachments Wekan ID => Wekan ID\n    this.attachmentIds = {};\n    // Map of checklists Wekan ID => Wekan ID\n    this.checklists = {};\n    // Map of checklistItems Wekan ID => Wekan ID\n    this.checklistItems = {};\n    // The comments, indexed by Wekan card id (to map when importing cards)\n    this.comments = {};\n    // Map of rules Wekan ID => Wekan ID\n    this.rules = {};\n    // the members, indexed by Wekan member id => Wekan user ID\n    this.members = data.membersMapping ? data.membersMapping : {};\n    // Map of triggers Wekan ID => Wekan ID\n    this.triggers = {};\n    // Map of actions Wekan ID => Wekan ID\n    this.actions = {};\n\n    // maps a wekanCardId to an array of wekanAttachments\n    this.attachments = {};\n  }\n\n  /**\n   * If dateString is provided,\n   * return the Date it represents.\n   * If not, will return the date when it was first called.\n   * This is useful for us, as we want all import operations to\n   * have the exact same date for easier later retrieval.\n   *\n   * @param {String} dateString a properly formatted Date\n   */\n  _now(dateString) {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    if (!this._nowDate) {\n      this._nowDate = new Date();\n    }\n    return this._nowDate;\n  }\n\n  /**\n   * if wekanUserId is provided and we have a mapping,\n   * return it.\n   * Otherwise return current logged user.\n   * @param wekanUserId\n   * @private\n   */\n  _user(wekanUserId) {\n    if (wekanUserId && this.members[wekanUserId]) {\n      return this.members[wekanUserId];\n    }\n    return Meteor.userId();\n  }\n\n  checkActivities(wekanActivities) {\n    check(wekanActivities, [\n      Match.ObjectIncluding({\n        activityType: String,\n        createdAt: DateString,\n      }),\n    ]);\n    // XXX we could perform more thorough checks based on action type\n  }\n\n  checkBoard(wekanBoard) {\n    check(\n      wekanBoard,\n      Match.ObjectIncluding({\n        archived: Boolean,\n        title: String,\n        // XXX refine control by validating 'color' against a list of\n        // allowed values (is it worth the maintenance?)\n        color: String,\n        permission: Match.Where(value => {\n          return ['private', 'public'].indexOf(value) >= 0;\n        }),\n      }),\n    );\n  }\n\n  checkCards(wekanCards) {\n    check(wekanCards, [\n      Match.ObjectIncluding({\n        archived: Boolean,\n        dateLastActivity: DateString,\n        labelIds: [String],\n        title: String,\n        sort: Number,\n      }),\n    ]);\n  }\n\n  checkLabels(wekanLabels) {\n    check(wekanLabels, [\n      Match.ObjectIncluding({\n        // XXX refine control by validating 'color' against a list of allowed\n        // values (is it worth the maintenance?)\n        color: String,\n      }),\n    ]);\n  }\n\n  checkLists(wekanLists) {\n    check(wekanLists, [\n      Match.ObjectIncluding({\n        archived: Boolean,\n        title: String,\n      }),\n    ]);\n  }\n\n  checkSwimlanes(wekanSwimlanes) {\n    check(wekanSwimlanes, [\n      Match.ObjectIncluding({\n        archived: Boolean,\n        title: String,\n      }),\n    ]);\n  }\n\n  checkChecklists(wekanChecklists) {\n    check(wekanChecklists, [\n      Match.ObjectIncluding({\n        cardId: String,\n        title: String,\n      }),\n    ]);\n  }\n\n  checkChecklistItems(wekanChecklistItems) {\n    check(wekanChecklistItems, [\n      Match.ObjectIncluding({\n        cardId: String,\n        title: String,\n      }),\n    ]);\n  }\n\n  checkRules(wekanRules) {\n    check(wekanRules, [\n      Match.ObjectIncluding({\n        triggerId: String,\n        actionId: String,\n        title: String,\n      }),\n    ]);\n  }\n\n  checkTriggers(wekanTriggers) {\n    // XXX More check based on trigger type\n    check(wekanTriggers, [\n      Match.ObjectIncluding({\n        activityType: String,\n        desc: String,\n      }),\n    ]);\n  }\n\n  getMembersToMap(data) {\n    // we will work on the list itself (an ordered array of objects) when a\n    // mapping is done, we add a 'wekan' field to the object representing the\n    // imported member\n    const membersToMap = data.members;\n    const users = data.users;\n    // auto-map based on username\n    membersToMap.forEach(importedMember => {\n      importedMember.id = importedMember.userId;\n      delete importedMember.userId;\n      const user = users.filter(user => {\n        return user._id === importedMember.id;\n      })[0];\n      if (user.profile && user.profile.fullname) {\n        importedMember.fullName = user.profile.fullname;\n      }\n      importedMember.username = user.username;\n      const wekanUser = ReactiveCache.getUser({ username: importedMember.username });\n      if (wekanUser) {\n        importedMember.wekanId = wekanUser._id;\n      }\n    });\n    return membersToMap;\n  }\n\n  checkActions(wekanActions) {\n    // XXX More check based on action type\n    check(wekanActions, [\n      Match.ObjectIncluding({\n        actionType: String,\n        desc: String,\n      }),\n    ]);\n  }\n\n  // You must call parseActions before calling this one.\n  createBoardAndLabels(boardToImport) {\n    const boardToCreate = {\n      archived: boardToImport.archived,\n      color: boardToImport.color,\n      // very old boards won't have a creation activity so no creation date\n      createdAt: this._now(boardToImport.createdAt),\n      labels: [],\n      members: [\n        {\n          userId: Meteor.userId(),\n          wekanId: Meteor.userId(),\n          isActive: true,\n          isAdmin: true,\n          isNoComments: false,\n          isCommentOnly: false,\n          swimlaneId: false,\n        },\n      ],\n      presentParentTask: boardToImport.presentParentTask,\n      // Standalone Export has modifiedAt missing, adding modifiedAt to fix it\n      modifiedAt: this._now(boardToImport.modifiedAt),\n      permission: boardToImport.permission,\n      slug: getSlug(boardToImport.title) || 'board',\n      stars: 0,\n      title: Boards.uniqueTitle(boardToImport.title),\n    };\n    // now add other members\n    if (boardToImport.members) {\n      boardToImport.members.forEach(wekanMember => {\n        // is it defined and do we already have it in our list?\n        if (\n          wekanMember.wekanId &&\n          !boardToCreate.members.some(\n            member => member.wekanId === wekanMember.wekanId,\n          )\n        )\n          boardToCreate.members.push({\n            ...wekanMember,\n            userId: wekanMember.wekanId,\n          });\n      });\n    }\n\n    if (boardToImport.labels) {\n      boardToImport.labels.forEach(label => {\n        const labelToCreate = {\n          _id: Random.id(6),\n          color: label.color,\n          name: label.name,\n        };\n        // We need to remember them by Wekan ID, as this is the only ref we have\n        // when importing cards.\n        this.labels[label._id] = labelToCreate._id;\n        boardToCreate.labels.push(labelToCreate);\n      });\n    }\n\n    const boardId = Boards.direct.insert(boardToCreate);\n    Boards.direct.update(boardId, {\n      $set: {\n        modifiedAt: this._now(),\n      },\n    });\n    // log activity\n    Activities.direct.insert({\n      activityType: 'importBoard',\n      boardId,\n      createdAt: this._now(),\n      source: {\n        id: boardToImport.id,\n        system: 'Wekan',\n      },\n      // We attribute the import to current user,\n      // not the author from the original object.\n      userId: this._user(),\n    });\n    return boardId;\n  }\n\n  /**\n   * Create the Wekan cards corresponding to the supplied Wekan cards,\n   * as well as all linked data: activities, comments, and attachments\n   * @param wekanCards\n   * @param boardId\n   * @returns {Array}\n   */\n  createCards(wekanCards, boardId) {\n    const result = [];\n    wekanCards.forEach(card => {\n      const cardToCreate = {\n        archived: card.archived,\n        boardId,\n        // very old boards won't have a creation activity so no creation date\n        createdAt: this._now(this.createdAt.cards[card._id]),\n        dateLastActivity: this._now(),\n        description: card.description,\n        listId: this.lists[card.listId],\n        swimlaneId: this.swimlanes[card.swimlaneId],\n        sort: card.sort,\n        title: card.title,\n        // we attribute the card to its creator if available\n        userId: this._user(this.createdBy.cards[card._id]),\n        isOvertime: card.isOvertime || false,\n        startAt: card.startAt ? this._now(card.startAt) : null,\n        dueAt: card.dueAt ? this._now(card.dueAt) : null,\n        spentTime: card.spentTime || null,\n      };\n      // add labels\n      if (card.labelIds) {\n        cardToCreate.labelIds = card.labelIds.map(wekanId => {\n          return this.labels[wekanId];\n        });\n      }\n      // add members {\n      if (card.members) {\n        const wekanMembers = [];\n        // we can't just map, as some members may not have been mapped\n        card.members.forEach(sourceMemberId => {\n          if (this.members[sourceMemberId]) {\n            const wekanId = this.members[sourceMemberId];\n            // we may map multiple Wekan members to the same wekan user\n            // in which case we risk adding the same user multiple times\n            if (!wekanMembers.find(wId => wId === wekanId)) {\n              wekanMembers.push(wekanId);\n            }\n          }\n          return true;\n        });\n        if (wekanMembers.length > 0) {\n          cardToCreate.members = wekanMembers;\n        }\n      }\n      // add assignees\n      if (card.assignees) {\n        const wekanAssignees = [];\n        // we can't just map, as some members may not have been mapped\n        card.assignees.forEach(sourceMemberId => {\n          if (this.members[sourceMemberId]) {\n            const wekanId = this.members[sourceMemberId];\n            // we may map multiple Wekan members to the same wekan user\n            // in which case we risk adding the same user multiple times\n            if (!wekanAssignees.find(wId => wId === wekanId)) {\n              wekanAssignees.push(wekanId);\n            }\n          }\n          return true;\n        });\n        if (wekanAssignees.length > 0) {\n          cardToCreate.assignees = wekanAssignees;\n        }\n      }\n      // set color\n      if (card.color) {\n        cardToCreate.color = card.color;\n      }\n\n      // add custom fields\n      if (card.customFields) {\n        cardToCreate.customFields = card.customFields.map(field => {\n          return {\n            _id: this.customFields[field._id],\n            value: field.value,\n          };\n        });\n      }\n\n      // insert card\n      const cardId = Cards.direct.insert(cardToCreate);\n      // keep track of Wekan id => Wekan id\n      this.cards[card._id] = cardId;\n      // // log activity\n      // Activities.direct.insert({\n      //   activityType: 'importCard',\n      //   boardId,\n      //   cardId,\n      //   createdAt: this._now(),\n      //   listId: cardToCreate.listId,\n      //   source: {\n      //     id: card._id,\n      //     system: 'Wekan',\n      //   },\n      //   // we attribute the import to current user,\n      //   // not the author of the original card\n      //   userId: this._user(),\n      // });\n      // add comments\n      const comments = this.comments[card._id];\n      if (comments) {\n        comments.forEach(comment => {\n          const commentToCreate = {\n            boardId,\n            cardId,\n            createdAt: this._now(comment.createdAt),\n            text: comment.text,\n            // we attribute the comment to the original author, default to current user\n            userId: this._user(comment.userId),\n          };\n          // dateLastActivity will be set from activity insert, no need to\n          // update it ourselves\n          const commentId = CardComments.direct.insert(commentToCreate);\n          this.commentIds[comment._id] = commentId;\n          // Activities.direct.insert({\n          //   activityType: 'addComment',\n          //   boardId: commentToCreate.boardId,\n          //   cardId: commentToCreate.cardId,\n          //   commentId,\n          //   createdAt: this._now(commentToCreate.createdAt),\n          //   // we attribute the addComment (not the import)\n          //   // to the original author - it is needed by some UI elements.\n          //   userId: commentToCreate.userId,\n          // });\n        });\n      }\n      const attachments = this.attachments[card._id];\n      const wekanCoverId = card.coverId;\n      if (attachments && Meteor.isServer) {\n        attachments.forEach(att => {\n          const self = this;\n          const opts = {\n            type: att.type ? att.type : undefined,\n            userId: self._user(att.userId),\n            meta: {\n              boardId,\n              cardId,\n              source: 'import',\n            },\n          };\n          const cb = (error, fileObj) => {\n            if (error) {\n              throw error;\n            }\n            self.attachmentIds[att._id] = fileObj._id;\n            if (wekanCoverId === att._id) {\n              Cards.direct.update(cardId, {\n                $set: { coverId: fileObj._id },\n              });\n            }\n          };\n          if (att.url) {\n            Attachments.load(att.url, opts, cb, true);\n          } else if (att.file) {\n            Attachments.insert(att.file, opts, cb, true);\n          }\n        });\n      }\n      result.push(cardId);\n    });\n    return result;\n  }\n\n  /**\n   * Create the Wekan custom fields corresponding to the supplied Wekan\n   * custom fields.\n   * @param wekanCustomFields\n   * @param boardId\n   */\n  createCustomFields(wekanCustomFields, boardId) {\n    wekanCustomFields.forEach((field, fieldIndex) => {\n      const fieldToCreate = {\n        boardIds: [boardId],\n        name: field.name,\n        type: field.type,\n        settings: field.settings,\n        showOnCard: field.showOnCard,\n        showLabelOnMiniCard: field.showLabelOnMiniCard,\n        automaticallyOnCard: field.automaticallyOnCard,\n        alwaysOnCard: field.alwaysOnCard,\n        //use date \"now\" if now created at date is provided (e.g. for very old boards)\n        createdAt: this._now(this.createdAt.customFields[field._id]),\n        modifiedAt: field.modifiedAt,\n      };\n      //insert copy of custom field\n      const fieldId = CustomFields.direct.insert(fieldToCreate);\n      //set modified date to now\n      CustomFields.direct.update(fieldId, {\n        $set: {\n          modifiedAt: this._now(),\n        },\n      });\n      //store mapping of old id to new id\n      this.customFields[field._id] = fieldId;\n    });\n  }\n\n  // Create labels if they do not exist and load this.labels.\n  createLabels(wekanLabels, board) {\n    wekanLabels.forEach(label => {\n      const color = label.color;\n      const name = label.name;\n      const existingLabel = board.getLabel(name, color);\n      if (existingLabel) {\n        this.labels[label.id] = existingLabel._id;\n      } else {\n        const idLabelCreated = board.pushLabel(name, color);\n        this.labels[label.id] = idLabelCreated;\n      }\n    });\n  }\n\n  createLists(wekanLists, boardId) {\n    wekanLists.forEach((list, listIndex) => {\n      const listToCreate = {\n        archived: list.archived,\n        boardId,\n        // We are being defensing here by providing a default date (now) if the\n        // creation date wasn't found on the action log. This happen on old\n        // Wekan boards (eg from 2013) that didn't log the 'createList' action\n        // we require.\n        createdAt: this._now(this.createdAt.lists[list.id]),\n        title: list.title,\n        sort: list.sort ? list.sort : listIndex,\n      };\n      const listId = Lists.direct.insert(listToCreate);\n      Lists.direct.update(listId, {\n        $set: {\n          updatedAt: this._now(),\n        },\n      });\n      this.lists[list._id] = listId;\n      // // log activity\n      // Activities.direct.insert({\n      //   activityType: 'importList',\n      //   boardId,\n      //   createdAt: this._now(),\n      //   listId,\n      //   source: {\n      //     id: list._id,\n      //     system: 'Wekan',\n      //   },\n      //   // We attribute the import to current user,\n      //   // not the creator of the original object\n      //   userId: this._user(),\n      // });\n    });\n  }\n\n  createSwimlanes(wekanSwimlanes, boardId) {\n    wekanSwimlanes.forEach((swimlane, swimlaneIndex) => {\n      const swimlaneToCreate = {\n        archived: swimlane.archived,\n        boardId,\n        // We are being defensing here by providing a default date (now) if the\n        // creation date wasn't found on the action log. This happen on old\n        // Wekan boards (eg from 2013) that didn't log the 'createList' action\n        // we require.\n        createdAt: this._now(this.createdAt.swimlanes[swimlane._id]),\n        title: swimlane.title,\n        sort: swimlane.sort ? swimlane.sort : swimlaneIndex,\n      };\n      // set color\n      if (swimlane.color) {\n        swimlaneToCreate.color = swimlane.color;\n      }\n      const swimlaneId = Swimlanes.direct.insert(swimlaneToCreate);\n      Swimlanes.direct.update(swimlaneId, {\n        $set: {\n          updatedAt: this._now(),\n        },\n      });\n      this.swimlanes[swimlane._id] = swimlaneId;\n    });\n  }\n\n  createSubtasks(wekanCards) {\n    wekanCards.forEach(card => {\n      // get new id of card (in created / new board)\n      const cardIdInNewBoard = this.cards[card._id];\n\n      //If there is a mapped parent card, use the mapped card\n      //  this means, the card and parent were in the same source board\n      //If there is no mapped parent card, use the original parent id,\n      //  this should handle cases where source and parent are in different boards\n      //  Note: This can only handle board cloning (within the same wekan instance).\n      //        When importing boards between instances the IDs are definitely\n      //        lost if source and parent are two different boards\n      //        This is not the place to fix it, the entire subtask system needs to be rethought there.\n      const parentIdInNewBoard = this.cards[card.parentId]\n        ? this.cards[card.parentId]\n        : card.parentId;\n\n      //if the parent card exists, proceed\n      if (ReactiveCache.getCard(parentIdInNewBoard)) {\n        //set parent id of the card in the new board to the new id of the parent\n        Cards.direct.update(cardIdInNewBoard, {\n          $set: {\n            parentId: parentIdInNewBoard,\n          },\n        });\n      }\n    });\n  }\n\n  createChecklists(wekanChecklists) {\n    const result = [];\n    wekanChecklists.forEach((checklist, checklistIndex) => {\n      // Create the checklist\n      const checklistToCreate = {\n        cardId: this.cards[checklist.cardId],\n        title: checklist.title,\n        createdAt: checklist.createdAt,\n        sort: checklist.sort ? checklist.sort : checklistIndex,\n      };\n      const checklistId = Checklists.direct.insert(checklistToCreate);\n      this.checklists[checklist._id] = checklistId;\n      result.push(checklistId);\n    });\n    return result;\n  }\n\n  createTriggers(wekanTriggers, boardId) {\n    wekanTriggers.forEach(trigger => {\n      if (trigger.hasOwnProperty('labelId')) {\n        trigger.labelId = this.labels[trigger.labelId];\n      }\n      if (trigger.hasOwnProperty('memberId')) {\n        trigger.memberId = this.members[trigger.memberId];\n      }\n      trigger.boardId = boardId;\n      const oldId = trigger._id;\n      delete trigger._id;\n      this.triggers[oldId] = Triggers.direct.insert(trigger);\n    });\n  }\n\n  createActions(wekanActions, boardId) {\n    wekanActions.forEach(action => {\n      if (action.hasOwnProperty('labelId')) {\n        action.labelId = this.labels[action.labelId];\n      }\n      if (action.hasOwnProperty('memberId')) {\n        action.memberId = this.members[action.memberId];\n      }\n      action.boardId = boardId;\n      const oldId = action._id;\n      delete action._id;\n      this.actions[oldId] = Actions.direct.insert(action);\n    });\n  }\n\n  createRules(wekanRules, boardId) {\n    wekanRules.forEach(rule => {\n      // Create the rule\n      rule.boardId = boardId;\n      rule.triggerId = this.triggers[rule.triggerId];\n      rule.actionId = this.actions[rule.actionId];\n      delete rule._id;\n      Rules.direct.insert(rule);\n    });\n  }\n\n  createChecklistItems(wekanChecklistItems) {\n    wekanChecklistItems.forEach((checklistitem, checklistitemIndex) => {\n      //Check if the checklist for this item (still) exists\n      //If a checklist was deleted, but items remain, the import would error out here\n      //Leading to no further checklist items being imported\n      if (this.checklists[checklistitem.checklistId]) {\n        // Create the checklistItem\n        const checklistItemTocreate = {\n          title: checklistitem.title,\n          checklistId: this.checklists[checklistitem.checklistId],\n          cardId: this.cards[checklistitem.cardId],\n          sort: checklistitem.sort ? checklistitem.sort : checklistitemIndex,\n          isFinished: checklistitem.isFinished,\n        };\n\n        const checklistItemId = ChecklistItems.direct.insert(\n          checklistItemTocreate,\n        );\n        this.checklistItems[checklistitem._id] = checklistItemId;\n      }\n    });\n  }\n\n  parseActivities(wekanBoard) {\n    wekanBoard.activities.forEach(activity => {\n      switch (activity.activityType) {\n        case 'addAttachment': {\n          // We have to be cautious, because the attachment could have been removed later.\n          // In that case Wekan still reports its addition, but removes its 'url' field.\n          // So we test for that\n          const wekanAttachment = wekanBoard.attachments.filter(attachment => {\n            return attachment._id === activity.attachmentId;\n          })[0];\n\n          if (typeof wekanAttachment !== 'undefined' && wekanAttachment) {\n            if (wekanAttachment.url || wekanAttachment.file) {\n              // we cannot actually create the Wekan attachment, because we don't yet\n              // have the cards to attach it to, so we store it in the instance variable.\n              const wekanCardId = activity.cardId;\n              if (!this.attachments[wekanCardId]) {\n                this.attachments[wekanCardId] = [];\n              }\n              this.attachments[wekanCardId].push(wekanAttachment);\n            }\n          }\n          break;\n        }\n        case 'addComment': {\n          const wekanComment = wekanBoard.comments.filter(comment => {\n            return comment._id === activity.commentId;\n          })[0];\n          const id = activity.cardId;\n          if (!this.comments[id]) {\n            this.comments[id] = [];\n          }\n          this.comments[id].push(wekanComment);\n          break;\n        }\n        case 'createBoard': {\n          this.createdAt.board = activity.createdAt;\n          break;\n        }\n        case 'createCard': {\n          const cardId = activity.cardId;\n          this.createdAt.cards[cardId] = activity.createdAt;\n          this.createdBy.cards[cardId] = activity.userId;\n          break;\n        }\n        case 'createList': {\n          const listId = activity.listId;\n          this.createdAt.lists[listId] = activity.createdAt;\n          break;\n        }\n        case 'createSwimlane': {\n          const swimlaneId = activity.swimlaneId;\n          this.createdAt.swimlanes[swimlaneId] = activity.createdAt;\n          break;\n        }\n        case 'createCustomField': {\n          const customFieldId = activity.customFieldId;\n          this.createdAt.customFields[customFieldId] = activity.createdAt;\n          break;\n        }\n      }\n    });\n  }\n\n  importActivities(activities, boardId) {\n    activities.forEach(activity => {\n      switch (activity.activityType) {\n        // Board related activities\n        // TODO: addBoardMember, removeBoardMember\n        case 'createBoard': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            type: 'board',\n            activityTypeId: boardId,\n            activityType: activity.activityType,\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        // List related activities\n        // TODO: removeList, archivedList\n        case 'createList': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            type: 'list',\n            activityType: activity.activityType,\n            listId: this.lists[activity.listId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        // Card related activities\n        // TODO: archivedCard, restoredCard, joinMember, unjoinMember\n        case 'createCard': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            activityType: activity.activityType,\n            listId: this.lists[activity.listId],\n            cardId: this.cards[activity.cardId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        case 'moveCard': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            oldListId: this.lists[activity.oldListId],\n            activityType: activity.activityType,\n            listId: this.lists[activity.listId],\n            cardId: this.cards[activity.cardId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        // Comment related activities\n        case 'addComment': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            activityType: activity.activityType,\n            cardId: this.cards[activity.cardId],\n            commentId: this.commentIds[activity.commentId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        // Attachment related activities\n        case 'addAttachment': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            type: 'card',\n            activityType: activity.activityType,\n            attachmentId: this.attachmentIds[activity.attachmentId],\n            cardId: this.cards[activity.cardId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        // Checklist related activities\n        case 'addChecklist': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            activityType: activity.activityType,\n            cardId: this.cards[activity.cardId],\n            checklistId: this.checklists[activity.checklistId],\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n        case 'addChecklistItem': {\n          Activities.direct.insert({\n            userId: this._user(activity.userId),\n            activityType: activity.activityType,\n            cardId: this.cards[activity.cardId],\n            checklistId: this.checklists[activity.checklistId],\n            checklistItemId: activity.checklistItemId.replace(\n              activity.checklistId,\n              this.checklists[activity.checklistId],\n            ),\n            boardId,\n            createdAt: this._now(activity.createdAt),\n          });\n          break;\n        }\n      }\n    });\n  }\n\n  //check(board) {\n  check() {\n    //try {\n    // check(data, {\n    //   membersMapping: Match.Optional(Object),\n    // });\n    // this.checkActivities(board.activities);\n    // this.checkBoard(board);\n    // this.checkLabels(board.labels);\n    // this.checkLists(board.lists);\n    // this.checkSwimlanes(board.swimlanes);\n    // this.checkCards(board.cards);\n    //this.checkChecklists(board.checklists);\n    // this.checkRules(board.rules);\n    // this.checkActions(board.actions);\n    //this.checkTriggers(board.triggers);\n    //this.checkChecklistItems(board.checklistItems);\n    //} catch (e) {\n    //  throw new Meteor.Error('error-json-schema');\n    // }\n  }\n\n  create(board, currentBoardId) {\n    // TODO : Make isSandstorm variable global\n    const isSandstorm =\n      Meteor.settings &&\n      Meteor.settings.public &&\n      Meteor.settings.public.sandstorm;\n    if (isSandstorm && currentBoardId) {\n      const currentBoard = ReactiveCache.getBoard(currentBoardId);\n      currentBoard.archive();\n    }\n    this.parseActivities(board);\n    const boardId = this.createBoardAndLabels(board);\n    this.createLists(board.lists, boardId);\n    this.createSwimlanes(board.swimlanes, boardId);\n    this.createCustomFields(board.customFields, boardId);\n    this.createCards(board.cards, boardId);\n    this.createSubtasks(board.cards);\n    this.createChecklists(board.checklists);\n    this.createChecklistItems(board.checklistItems);\n    this.importActivities(board.activities, boardId);\n    this.createTriggers(board.triggers, boardId);\n    this.createActions(board.actions, boardId);\n    this.createRules(board.rules, boardId);\n    // XXX add members\n    return boardId;\n  }\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nexport function getMembersToMap(data) {\n  // we will work on the list itself (an ordered array of objects) when a\n  // mapping is done, we add a 'wekan' field to the object representing the\n  // imported member\n  const membersToMap = data.members;\n  const users = data.users;\n  // auto-map based on username\n  membersToMap.forEach(importedMember => {\n    importedMember.id = importedMember.userId;\n    delete importedMember.userId;\n    const user = users.filter(user => {\n      return user._id === importedMember.id;\n    })[0];\n    if (user.profile && user.profile.fullname) {\n      importedMember.fullName = user.profile.fullname;\n    }\n    importedMember.username = user.username;\n    const wekanUser = ReactiveCache.getUser({ username: importedMember.username });\n    if (wekanUser) {\n      importedMember.wekanId = wekanUser._id;\n    }\n  });\n  return membersToMap;\n}\n","// emailLocalization.js\n// Utility functions to handle email localization in Wekan\n\nimport { TAPi18n } from '/imports/i18n';\nimport { ReactiveCache } from '/imports/reactiveCache';\n\n// Main object for email localization utilities\nEmailLocalization = {\n  /**\n   * Send an email using the recipient's preferred language\n   * @param {Object} options - Standard email sending options plus language options\n   * @param {String} options.to - Recipient email address\n   * @param {String} options.from - Sender email address\n   * @param {String} options.subject - Email subject i18n key\n   * @param {String} options.text - Email text i18n key\n   * @param {Object} options.params - Parameters for i18n translation\n   * @param {String} options.language - Language code to use (if not provided, will try to detect)\n   * @param {String} options.userId - User ID to determine language (if not provided with language)\n   */\n  sendEmail(options) {\n    // Determine the language to use\n    let lang = options.language;\n\n    // If no language is specified but we have a userId, try to get the user's language\n    if (!lang && options.userId) {\n      const user = ReactiveCache.getUser(options.userId);\n      if (user) {\n        lang = user.getLanguage();\n      }\n    }\n\n    // If no language could be determined, use the site default\n    if (!lang) {\n      lang = TAPi18n.getLanguage() || 'en';\n    }\n\n    // Translate subject and text using the determined language\n    const subject = TAPi18n.__(options.subject, options.params || {}, lang);\n    let text = options.text;\n\n    // If text is an i18n key, translate it\n    if (typeof text === 'string' && text.startsWith('email-')) {\n      text = TAPi18n.__(text, options.params || {}, lang);\n    }\n\n    // Send the email with translated content\n    return Email.send({\n      to: options.to,\n      from: options.from || Accounts.emailTemplates.from,\n      subject: subject,\n      text: text,\n      html: options.html\n    });\n  }\n};\n\n// Add module.exports to make it accessible from other files\nmodule.exports = EmailLocalization;\n","// This file ensures the EmailLocalization utility is imported\n// and available throughout the application\n\nimport './emailLocalization';\n","allowIsBoardAdmin = function(userId, board) {\n  return board && board.hasAdmin(userId);\n};\n\nallowIsBoardMember = function(userId, board) {\n  return board && board.hasMember(userId);\n};\n\nallowIsAnyBoardMember = function(userId, boards) {\n  return _.some(boards, board => {\n    return board && board.hasMember(userId);\n  });\n};\n\nallowIsBoardMemberCommentOnly = function(userId, board) {\n  return board && board.hasMember(userId) && !board.hasCommentOnly(userId);\n};\n\nallowIsBoardMemberNoComments = function(userId, board) {\n  return board && board.hasMember(userId) && !board.hasNoComments(userId);\n};\n\nallowIsBoardMemberByCard = function(userId, card) {\n  const board = card.board();\n  return board && board.hasMember(userId);\n};\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { TAPi18n } from '/imports/i18n';\n//var nodemailer = require('nodemailer');\n\nimport EmailLocalization from '../lib/emailLocalization';\n\n// buffer each user's email text in a queue, then flush them in single email\nMeteor.startup(() => {\n  Notifications.subscribe('email', (user, title, description, params) => {\n    // add quote to make titles easier to read in email text\n    const quoteParams = _.clone(params);\n    ['card', 'list', 'oldList', 'board', 'comment'].forEach(key => {\n      if (quoteParams[key]) quoteParams[key] = `\"${params[key]}\"`;\n    });\n    ['timeValue', 'timeOldValue'].forEach(key => {\n      quoteParams[key] = quoteParams[key] ? `${params[key]}` : '';\n    });\n\n    // Get user's preferred language\n    const lan = user.getLanguage();\n    const subject = TAPi18n.__(title, params, lan); // the original function has a fault, i believe the title should be used according to original author\n    const existing = user.getEmailBuffer().length > 0;\n    const htmlEnabled =\n      Meteor.settings.public &&\n      Meteor.settings.public.RICHER_CARD_COMMENT_EDITOR !== false;\n    const text = `${existing ? `\\n${subject}\\n` : ''}${\n      params.user\n    } ${TAPi18n.__(description, quoteParams, lan)}\\n${params.url}`;\n\n    user.addEmailBuffer(htmlEnabled ? text.replace(/\\n/g, '<br/>') : text);\n\n    // unlike setTimeout(func, delay, args),\n    // Meteor.setTimeout(func, delay) does not accept args :-(\n    // so we pass userId with closure\n    const userId = user._id;\n    Meteor.setTimeout(() => {\n      const user = ReactiveCache.getUser(userId);\n\n      // for each user, in the timed period, only the first call will get the cached content,\n      // other calls will get nothing\n      const texts = user.getEmailBuffer();\n      if (texts.length === 0) return;\n\n      // merge the cached content into single email and flush\n      const html = texts.join('<br/>\\n\\n');\n      user.clearEmailBuffer();\n      try {\n        // Use EmailLocalization utility to ensure the correct language is used\n        EmailLocalization.sendEmail({\n          to: user.emails[0].address.toLowerCase(),\n          from: Accounts.emailTemplates.from,\n          subject,\n          html,\n          language: user.getLanguage(),\n          userId: user._id\n        });\n      } catch (e) {\n        return;\n      }\n    }, process.env.EMAIL_NOTIFICATION_TIMEOUT || 30000);\n  });\n});\n","// a map of notification service, like email, web, IM, qq, etc.\n\n// serviceName -> callback(user, title, description, params)\n// expected arguments to callback:\n// - user: Meteor user object\n// - title: String, TAPi18n key\n// - description, String, TAPi18n key\n// - params: Object, values extracted from context, to used for above two TAPi18n keys\n//   see example call to Notifications.notify() in models/activities.js\nconst notifyServices = {};\n\nNotifications = {\n  subscribe: (serviceName, callback) => {\n    notifyServices[serviceName] = callback;\n  },\n\n  unsubscribe: serviceName => {\n    if (typeof notifyServices[serviceName] === 'function')\n      delete notifyServices[serviceName];\n  },\n\n  getUsers: watchers => {\n    const users = [];\n    watchers.forEach(userId => {\n      const user = ReactiveCache.getUser(userId);\n      if (user) users.push(user);\n    });\n    return users;\n  },\n\n  notify: (user, title, description, params) => {\n    for (const k in notifyServices) {\n      const notifyImpl = notifyServices[k];\n      if (notifyImpl && typeof notifyImpl === 'function')\n        notifyImpl(user, title, description, params);\n    }\n  },\n};\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { TAPi18n } from '/imports/i18n';\n\nif (Meteor.isServer) {\n  const postCatchError = Meteor.wrapAsync((url, options, resolve) => {\n    HTTP.post(url, options, (err, res) => {\n      if (err) {\n        resolve(null, err.response);\n      } else {\n        resolve(null, res);\n      }\n    });\n  });\n\n  const Lock = {\n    _lock: {},\n    _timer: {},\n    echoDelay: 500, // echo should be happening much faster\n    normalDelay: 1e3, // normally user typed comment will be much slower\n    ECHO: 2,\n    NORMAL: 1,\n    NULL: 0,\n    has(id, value) {\n      const existing = this._lock[id];\n      let ret = this.NULL;\n      if (existing) {\n        ret = existing === value ? this.ECHO : this.NORMAL;\n      }\n      return ret;\n    },\n    clear(id, delay) {\n      const previous = this._timer[id];\n      if (previous) {\n        Meteor.clearTimeout(previous);\n      }\n      this._timer[id] = Meteor.setTimeout(() => this.unset(id), delay);\n    },\n    set(id, value) {\n      const state = this.has(id, value);\n      let delay = this.normalDelay;\n      if (state === this.ECHO) {\n        delay = this.echoDelay;\n      }\n      if (!value) {\n        // user commented, we set a lock\n        value = 1;\n      }\n      this._lock[id] = value;\n      this.clear(id, delay); // always auto reset the locker after delay\n    },\n    unset(id) {\n      delete this._lock[id];\n    },\n  };\n\n  const webhooksAtbts = (process.env.WEBHOOKS_ATTRIBUTES &&\n    process.env.WEBHOOKS_ATTRIBUTES.split(',')) || [\n    'cardId',\n    'listId',\n    'oldListId',\n    'boardId',\n    'comment',\n    'user',\n    'card',\n    'commentId',\n    'swimlaneId',\n    'customField',\n    'customFieldValue',\n    'labelId',\n    'label',\n    'attachmentId',\n  ];\n  const responseFunc = data => {\n    const paramCommentId = data.commentId;\n    const paramCardId = data.cardId;\n    const paramBoardId = data.boardId;\n    const newComment = data.comment;\n    if (paramCardId && paramBoardId && newComment) {\n      // only process data with the cardid, boardid and comment text, TODO can expand other functions here to react on returned data\n      const comment = ReactiveCache.getCardComment({\n        _id: paramCommentId,\n        cardId: paramCardId,\n        boardId: paramBoardId,\n      });\n      const board = ReactiveCache.getBoard(paramBoardId);\n      const card = ReactiveCache.getCard(paramCardId);\n      if (board && card) {\n        if (comment) {\n          Lock.set(comment._id, newComment);\n          CardComments.direct.update(comment._id, {\n            $set: {\n              text: newComment,\n            },\n          });\n        }\n      } else {\n        const userId = data.userId;\n        if (userId) {\n          const inserted = CardComments.direct.insert({\n            text: newComment,\n            userId,\n            cardId,\n            boardId,\n          });\n          Lock.set(inserted._id, newComment);\n        }\n      }\n    }\n  };\n  Meteor.methods({\n    outgoingWebhooks(integration, description, params) {\n      if (ReactiveCache.getCurrentUser()) {\n        check(integration, Object);\n        check(description, String);\n        check(params, Object);\n        this.unblock();\n\n        // label activity did not work yet, see wekan/models/activities.js\n        const quoteParams = _.clone(params);\n        const clonedParams = _.clone(params);\n        [\n          'card',\n          'list',\n          'oldList',\n          'board',\n          'oldBoard',\n          'comment',\n          'checklist',\n          'swimlane',\n          'oldSwimlane',\n          'labelId',\n          'label',\n          'attachment',\n          'attachmentId',\n        ].forEach(key => {\n          if (quoteParams[key]) quoteParams[key] = `\"${params[key]}\"`;\n        });\n\n        const userId = params.userId ? params.userId : integrations[0].userId;\n        const user = ReactiveCache.getUser(userId);\n        const descriptionText = TAPi18n.__(\n          description,\n          quoteParams,\n          user.getLanguage(),\n        );\n\n        // If you don't want a hook, set the webhook description to \"-\".\n        if (descriptionText === \"-\") return;\n\n        const text = `${params.user} ${descriptionText}\\n${params.url}`;\n\n        if (text.length === 0) return;\n\n        const value = {\n          text: `${text}`,\n        };\n\n        webhooksAtbts.forEach(key => {\n          if (params[key]) value[key] = params[key];\n        });\n        value.description = description;\n        //integrations.forEach(integration => {\n        const is2way = integration.type === Integrations.Const.TWOWAY;\n        const token = integration.token || '';\n        const headers = {\n          'Content-Type': 'application/json',\n        };\n        if (token) headers['X-Wekan-Token'] = token;\n        const options = {\n          headers,\n          data: is2way ? { description, ...clonedParams } : value,\n        };\n\n        if (!ReactiveCache.getIntegration({ url: integration.url })) return;\n\n        const url = integration.url;\n\n        if (is2way) {\n          const cid = params.commentId;\n          const comment = params.comment;\n          const lockState = cid && Lock.has(cid, comment);\n          if (cid && lockState !== Lock.NULL) {\n            // it's a comment  and there is a previous lock\n            return;\n          } else if (cid) {\n            Lock.set(cid, comment); // set a lock here\n          }\n        }\n        const response = postCatchError(url, options);\n\n        if (\n          response &&\n          response.statusCode &&\n          response.statusCode >= 200 &&\n          response.statusCode < 300\n        ) {\n          if (is2way) {\n            const data = response.data; // only an JSON encoded response will be actioned\n            if (data) {\n              try {\n                responseFunc(data);\n              } catch (e) {\n                throw new Meteor.Error('error-process-data');\n              }\n            }\n          }\n          return response; // eslint-disable-line consistent-return\n        } else {\n          throw new Meteor.Error('error-invalid-webhook-response');\n        }\n      }\n    },\n  });\n}\n","Meteor.startup(() => {\n  Notifications.subscribe('profile', (user, title, description, params) => {\n    user.addNotification(params.activityId);\n  });\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.methods({\n  watch(watchableType, id, level) {\n    check(watchableType, String);\n    check(id, String);\n    check(level, Match.OneOf(String, null));\n\n    const userId = Meteor.userId();\n\n    let watchableObj = null;\n    let board = null;\n    if (watchableType === 'board') {\n      watchableObj = ReactiveCache.getBoard(id);\n      if (!watchableObj) throw new Meteor.Error('error-board-doesNotExist');\n      board = watchableObj;\n    } else if (watchableType === 'list') {\n      watchableObj = ReactiveCache.getList(id);\n      if (!watchableObj) throw new Meteor.Error('error-list-doesNotExist');\n      board = watchableObj.board();\n    } else if (watchableType === 'card') {\n      watchableObj = ReactiveCache.getCard(id);\n      if (!watchableObj) throw new Meteor.Error('error-card-doesNotExist');\n      board = watchableObj.board();\n    } else {\n      throw new Meteor.Error('error-json-schema');\n    }\n\n    if (board.permission === 'private' && !board.hasMember(userId))\n      throw new Meteor.Error('error-board-notAMember');\n\n    watchableObj.setWatcher(userId, level);\n    return true;\n  },\n});\n","Meteor.publish('accountSettings', function() {\n  const ret = AccountSettings.find();\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\n// We use activities fields at two different places:\n// 1. The board sidebar\n// 2. The card activity tab\n// We use this publication to paginate for these two publications.\n\nMeteor.publish('activities', (kind, id, limit, showActivities) => {\n  check(\n    kind,\n    Match.Where(x => {\n      return ['board', 'card'].indexOf(x) !== -1;\n    }),\n  );\n  check(id, String);\n  check(limit, Number);\n  check(showActivities, Boolean);\n\n  // Get linkedBoard\n  let linkedElmtId = [id];\n  if (kind == 'board') {\n    ReactiveCache.getCards({\n      \"type\": \"cardType-linkedBoard\",\n      \"boardId\": id}\n      ).forEach(card => {\n        linkedElmtId.push(card.linkedId);\n    });\n  }\n\n  const selector = showActivities\n    ? { [`${kind}Id`]: { $in: linkedElmtId } }\n    : { $and: [{ activityType: 'addComment' }, { [`${kind}Id`]: { $in: linkedElmtId } }] };\n  const ret = ReactiveCache.getActivities(selector,\n    {\n      limit,\n      sort: { createdAt: -1 },\n    },\n    true,\n  );\n  return ret;\n});\n","Meteor.publish('announcements', function() {\n  const ret = Announcements.find();\n  return ret;\n});\n","import Attachments from '/models/attachments';\nimport { ObjectID } from 'bson';\n\nMeteor.publish('attachmentsList', function(limit) {\n  const ret = ReactiveCache.getAttachments(\n    {},\n    {\n      fields: {\n        _id: 1,\n        name: 1,\n        size: 1,\n        type: 1,\n        meta: 1,\n        path: 1,\n        versions: 1,\n      },\n      sort: {\n        name: 1,\n      },\n      limit: limit,\n    },\n    true,\n  ).cursor;\n  return ret;\n});\n","import Avatars from '../../models/avatars';\nMeteor.publish('my-avatars', function() {\n  const ret = ReactiveCache.getAvatars({ userId: this.userId }, {}, true).cursor;\n  return ret;\n});\n","// This is the publication used to display the board list. We publish all the\n// non-archived boards:\n// 1. that the user is a member of\n// 2. the user has starred\nimport { ReactiveCache } from '/imports/reactiveCache';\nimport Users from \"../../models/users\";\nimport Org from \"../../models/org\";\nimport Team from \"../../models/team\";\nimport Attachments from '../../models/attachments';\n\nMeteor.publishRelations('boards', function() {\n  const userId = this.userId;\n  // Ensure that the user is connected. If it is not, we need to return an empty\n  // array to tell the client to remove the previously published docs.\n  if (!Match.test(userId, String) || !userId) {\n    return [];\n  }\n\n  // Defensive programming to verify that starredBoards has the expected\n  // format -- since the field is in the `profile` a user can modify it.\n  // const { starredBoards = [] } = (ReactiveCache.getUser(userId) || {}).profile || {};\n  // check(starredBoards, [String]);\n\n  // let currUser = ReactiveCache.getUser(userId);\n  // let orgIdsUserBelongs = currUser!== 'undefined' && currUser.teams !== 'undefined' ? currUser.orgIdsUserBelongs() : '';\n  // let teamIdsUserBelongs = currUser!== 'undefined' && currUser.teams !== 'undefined' ? currUser.teamIdsUserBelongs() : '';\n  // let orgsIds = [];\n  // let teamsIds = [];\n  // if(orgIdsUserBelongs && orgIdsUserBelongs != ''){\n  //   orgsIds = orgIdsUserBelongs.split(',');\n  // }\n  // if(teamIdsUserBelongs && teamIdsUserBelongs != ''){\n  //   teamsIds = teamIdsUserBelongs.split(',');\n  // }\n  this.cursor(ReactiveCache.getBoards(\n    {\n      archived: false,\n      _id: { $in: Boards.userBoardIds(userId, false) },\n      // $or: [\n      //   {\n      //     // _id: { $in: starredBoards },  // Commented out, to get a list of all public boards\n      //     permission: 'public',\n      //   },\n      //   { members: { $elemMatch: { userId, isActive: true } } },\n      //   {'orgs.orgId': {$in : orgsIds}},\n      //   {'teams.teamId': {$in : teamsIds}},\n      // ],\n    },\n    {\n      sort: { sort: 1 /* boards default sorting */ },\n    },\n    true,\n  ),\n    function(boardId, board) {\n      this.cursor(\n        ReactiveCache.getLists(\n          { boardId, archived: false },\n          { fields:\n            {\n              _id: 1,\n              title: 1,\n              boardId: 1,\n              archived: 1,\n              sort: 1\n            }\n          },\n          true,\n        )\n      );\n      this.cursor(\n        ReactiveCache.getCards(\n          { boardId, archived: false },\n          { fields: {\n            _id: 1,\n            boardId: 1,\n            listId: 1,\n            archived: 1,\n            sort: 1\n          }},\n          true,\n        )\n      );\n    }\n  );\n  const ret = this.ready();\n  return ret;\n});\n\nMeteor.publish('boardsReport', function() {\n  const userId = this.userId;\n  // Ensure that the user is connected. If it is not, we need to return an empty\n  // array to tell the client to remove the previously published docs.\n  if (!Match.test(userId, String) || !userId) return [];\n\n  const boards = ReactiveCache.getBoards(\n    {\n      _id: { $in: Boards.userBoardIds(userId, null) },\n    },\n    {\n      fields: {\n        _id: 1,\n        boardId: 1,\n        archived: 1,\n        slug: 1,\n        title: 1,\n        description: 1,\n        color: 1,\n        backgroundImageURL: 1,\n        members: 1,\n        orgs: 1,\n        teams: 1,\n        permission: 1,\n        type: 1,\n        sort: 1,\n      },\n      sort: { sort: 1 /* boards default sorting */ },\n    },\n    true,\n  );\n\n  const userIds = [];\n  const orgIds = [];\n  const teamIds = [];\n  boards.forEach(board => {\n    if (board.members) {\n      board.members.forEach(member => {\n        userIds.push(member.userId);\n      });\n    }\n    if (board.orgs) {\n      board.orgs.forEach(org => {\n        orgIds.push(org.orgId);\n      });\n    }\n    if (board.teams) {\n      board.teams.forEach(team => {\n        teamIds.push(team.teamId);\n      });\n    }\n  })\n\n  const ret = [\n    boards,\n    ReactiveCache.getUsers({ _id: { $in: userIds } }, { fields: Users.safeFields }, true),\n    ReactiveCache.getTeams({ _id: { $in: teamIds } }, {}, true),\n    ReactiveCache.getOrgs({ _id: { $in: orgIds } }, {}, true),\n  ]\n  return ret;\n});\n\nMeteor.publish('archivedBoards', function() {\n  const userId = this.userId;\n  if (!Match.test(userId, String)) return [];\n\n  const ret = ReactiveCache.getBoards(\n    {\n      _id: { $in: Boards.userBoardIds(userId, true)},\n      archived: true,\n      members: {\n         $elemMatch: {\n           userId,\n           isAdmin: true,\n         },\n       },\n    },\n    {\n      fields: {\n        _id: 1,\n        archived: 1,\n        slug: 1,\n        title: 1,\n        createdAt: 1,\n        modifiedAt: 1,\n        archivedAt: 1,\n      },\n      sort: { archivedAt: -1, modifiedAt: -1 },\n    },\n    true,\n  );\n  return ret;\n});\n\n// If isArchived = false, this will only return board elements which are not archived.\n// If isArchived = true, this will only return board elements which are archived.\nMeteor.publishRelations('board', function(boardId, isArchived) {\n  this.unblock();\n  check(boardId, String);\n  check(isArchived, Boolean);\n  const thisUserId = this.userId;\n  const $or = [{ permission: 'public' }];\n  let currUser =  (!Match.test(thisUserId, String) || !thisUserId) ? 'undefined' : ReactiveCache.getUser(thisUserId);\n  let orgIdsUserBelongs = currUser!== 'undefined' && currUser.teams !== 'undefined' ? currUser.orgIdsUserBelongs() : '';\n  let teamIdsUserBelongs = currUser!== 'undefined' && currUser.teams !== 'undefined' ? currUser.teamIdsUserBelongs() : '';\n  let orgsIds = [];\n  let teamsIds = [];\n  if(orgIdsUserBelongs && orgIdsUserBelongs != ''){\n    orgsIds = orgIdsUserBelongs.split(',');\n  }\n  if(teamIdsUserBelongs && teamIdsUserBelongs != ''){\n    teamsIds = teamIdsUserBelongs.split(',');\n  }\n\n  if (thisUserId) {\n    $or.push({members: { $elemMatch: { userId: thisUserId, isActive: true } }});\n    $or.push({'orgs.orgId': {$in : orgsIds}});\n    $or.push({'teams.teamId': {$in : teamsIds}});\n  }\n\n  this.cursor(\n    ReactiveCache.getBoards(\n      {\n        _id: boardId,\n        archived: false,\n        // If the board is not public the user has to be a member of it to see\n        // it.\n        $or,\n        // Sort required to ensure oplog usage\n      },\n      { limit: 1, sort: { sort: 1 /* boards default sorting */ } },\n      true,\n    ),\n    function(boardId, board) {\n      this.cursor(ReactiveCache.getLists({ boardId, archived: isArchived }, {}, true));\n      this.cursor(ReactiveCache.getSwimlanes({ boardId, archived: isArchived }, {}, true));\n      this.cursor(ReactiveCache.getIntegrations({ boardId }, {}, true));\n      this.cursor(ReactiveCache.getCardCommentReactions({ boardId }, {}, true));\n      this.cursor(\n        ReactiveCache.getCustomFields(\n          { boardIds: { $in: [boardId] } },\n          { sort: { name: 1 } },\n          true,\n        ),\n      );\n\n      // Cards and cards comments\n      // XXX Originally we were publishing the card documents as a child of the\n      // list publication defined above using the following selector `{ listId:\n      // list._id }`. But it was causing a race condition in publish-composite,\n      // that I documented here:\n      //\n      //   https://github.com/englue/meteor-publish-composite/issues/29\n      //\n      // cottz:publish had a similar problem:\n      //\n      //   https://github.com/Goluis/cottz-publish/issues/4\n      //\n      // The current state of relational publishing in meteor is a bit sad,\n      // there are a lot of various packages, with various APIs, some of them\n      // are unmaintained. Fortunately this is something that will be fixed by\n      // meteor-core at some point:\n      //\n      //   https://trello.com/c/BGvIwkEa/48-easy-joins-in-subscriptions\n      //\n      // And in the meantime our code below works pretty well -- it's not even a\n      // hack!\n\n      // Gather queries and send in bulk\n      const cardComments = this.join(CardComments);\n      cardComments.selector = _ids => ({ cardId: _ids });\n      const cardCommentsLinkedBoard = this.join(CardComments);\n      cardCommentsLinkedBoard.selector = _ids => ({ boardId: _ids });\n      const cardCommentReactions = this.join(CardCommentReactions);\n      cardCommentReactions.selector = _ids => ({ cardId: _ids });\n      const attachments = this.join(Attachments.collection);\n      attachments.selector = _ids => ({ 'meta.cardId': _ids });\n      const checklists = this.join(Checklists);\n      checklists.selector = _ids => ({ cardId: _ids });\n      const checklistItems = this.join(ChecklistItems);\n      checklistItems.selector = _ids => ({ cardId: _ids });\n      const parentCards = this.join(Cards);\n      parentCards.selector = _ids => ({ parentId: _ids });\n      const boards = this.join(Boards);\n      const subCards = this.join(Cards);\n      subCards.selector = _ids => ({ _id: _ids, archived: isArchived });\n      const linkedBoardCards = this.join(Cards);\n      linkedBoardCards.selector = _ids => ({ boardId: _ids });\n\n      this.cursor(\n        ReactiveCache.getCards({\n            boardId: { $in: [boardId, board.subtasksDefaultBoardId] },\n            archived: isArchived,\n          },\n          {},\n          true,\n        ),\n        function(cardId, card) {\n          if (card.type === 'cardType-linkedCard') {\n            const impCardId = card.linkedId;\n            subCards.push(impCardId); // GitHub issue #2688 and #2693\n            cardComments.push(impCardId);\n            attachments.push(impCardId);\n            checklists.push(impCardId);\n            checklistItems.push(impCardId);\n          } else if (card.type === 'cardType-linkedBoard') {\n            boards.push(card.linkedId);\n            linkedBoardCards.push(card.linkedId);\n            cardCommentsLinkedBoard.push(card.linkedId);\n          }\n          cardComments.push(cardId);\n          attachments.push(cardId);\n          checklists.push(cardId);\n          checklistItems.push(cardId);\n          parentCards.push(cardId);\n          cardCommentReactions.push(cardId);\n        },\n      );\n\n      // Send bulk queries for all found ids\n      subCards.send();\n      cardComments.send();\n      cardCommentReactions.send();\n      attachments.send();\n      checklists.send();\n      checklistItems.send();\n      boards.send();\n      parentCards.send();\n      linkedBoardCards.send();\n      cardCommentsLinkedBoard.send();\n\n      if (board.members) {\n        // Board members. This publication also includes former board members that\n        // aren't members anymore but may have some activities attached to them in\n        // the history.\n        const memberIds = _.pluck(board.members, 'userId');\n\n        // We omit the current user because the client should already have that data,\n        // and sending it triggers a subtle bug:\n        // https://github.com/wefork/wekan/issues/15\n        this.cursor(\n          ReactiveCache.getUsers(\n            {\n              _id: { $in: _.without(memberIds, thisUserId) },\n            },\n            {\n              fields: {\n                username: 1,\n                'profile.fullname': 1,\n                'profile.avatarUrl': 1,\n                'profile.initials': 1,\n              },\n            },\n            true,\n          ),\n        );\n\n        //this.cursor(presences.find({ userId: { $in: memberIds } }));\n      }\n    },\n  );\n\n  const ret = this.ready();\n  return ret;\n});\n\nMeteor.methods({\n  copyBoard(boardId, properties) {\n    check(boardId, String);\n    check(properties, Object);\n\n    let ret = null;\n    const board = ReactiveCache.getBoard(boardId);\n    if (board) {\n      for (const key in properties) {\n        board[key] = properties[key];\n      }\n      ret = board.copy();\n    }\n    return ret;\n  },\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport moment from 'moment/min/moment-with-locales';\nimport escapeForRegex from 'escape-string-regexp';\nimport Users from '../../models/users';\nimport Boards from '../../models/boards';\nimport Lists from '../../models/lists';\nimport Swimlanes from '../../models/swimlanes';\nimport Cards from '../../models/cards';\nimport CardComments from '../../models/cardComments';\nimport Attachments from '../../models/attachments';\nimport Checklists from '../../models/checklists';\nimport ChecklistItems from '../../models/checklistItems';\nimport SessionData from '../../models/usersessiondata';\nimport CustomFields from '../../models/customFields';\nimport {\n  DEFAULT_LIMIT,\n  OPERATOR_ASSIGNEE,\n  OPERATOR_BOARD,\n  OPERATOR_COMMENT,\n  OPERATOR_CREATED_AT,\n  OPERATOR_CREATOR,\n  OPERATOR_DEBUG,\n  OPERATOR_DUE,\n  OPERATOR_HAS,\n  OPERATOR_LABEL,\n  OPERATOR_LIMIT,\n  OPERATOR_LIST,\n  OPERATOR_MEMBER,\n  OPERATOR_MODIFIED_AT, OPERATOR_ORG,\n  OPERATOR_SORT,\n  OPERATOR_STATUS,\n  OPERATOR_SWIMLANE, OPERATOR_TEAM,\n  OPERATOR_USER,\n  ORDER_ASCENDING,\n  PREDICATE_ALL,\n  PREDICATE_ARCHIVED,\n  PREDICATE_ASSIGNEES,\n  PREDICATE_ATTACHMENT,\n  PREDICATE_CHECKLIST,\n  PREDICATE_CREATED_AT,\n  PREDICATE_DESCRIPTION,\n  PREDICATE_DUE_AT,\n  PREDICATE_END_AT,\n  PREDICATE_ENDED,\n  PREDICATE_MEMBERS,\n  PREDICATE_MODIFIED_AT,\n  PREDICATE_PRIVATE,\n  PREDICATE_PUBLIC,\n  PREDICATE_START_AT,\n  PREDICATE_SYSTEM,\n} from '/config/search-const';\nimport { QueryErrors, QueryParams, Query } from '/config/query-classes';\nimport { CARD_TYPES } from '../../config/const';\nimport Org from \"../../models/org\";\nimport Team from \"../../models/team\";\n\nMeteor.publish('card', cardId => {\n  check(cardId, String);\n  const ret = ReactiveCache.getCards(\n    { _id: cardId },\n    {},\n    true,\n  );\n  return ret;\n});\n\n/** publish all data which is necessary to display card details as popup\n * @returns array of cursors\n */\nMeteor.publishRelations('popupCardData', function(cardId) {\n  check(cardId, String);\n  this.cursor(\n    ReactiveCache.getCards(\n      { _id: cardId },\n      {},\n      true,\n    ),\n    function(cardId, card) {\n      this.cursor(ReactiveCache.getBoards({_id: card.boardId}, {}, true));\n      this.cursor(ReactiveCache.getLists({boardId: card.boardId}, {}, true));\n    },\n  );\n  const ret = this.ready()\n  return ret;\n});\n\nMeteor.publish('myCards', function(sessionId) {\n  check(sessionId, String);\n\n  const queryParams = new QueryParams();\n  queryParams.addPredicate(OPERATOR_USER, ReactiveCache.getCurrentUser().username);\n  queryParams.setPredicate(OPERATOR_LIMIT, 200);\n\n  const query = buildQuery(queryParams);\n  query.projection.sort = {\n    boardId: 1,\n    swimlaneId: 1,\n    listId: 1,\n  };\n\n  const ret = findCards(sessionId, query);\n  return ret;\n});\n\n// Meteor.publish('dueCards', function(sessionId, allUsers = false) {\n//   check(sessionId, String);\n//   check(allUsers, Boolean);\n//\n//   // eslint-disable-next-line no-console\n//   // console.log('all users:', allUsers);\n//\n//   const queryParams = {\n//     has: [{ field: 'dueAt', exists: true }],\n//     limit: 25,\n//     skip: 0,\n//     sort: { name: 'dueAt', order: 'des' },\n//   };\n//\n//   if (!allUsers) {\n//     queryParams.users = [ReactiveCache.getCurrentUser().username];\n//   }\n//\n//   return buildQuery(sessionId, queryParams);\n// });\n\nMeteor.publish('globalSearch', function(sessionId, params, text) {\n  check(sessionId, String);\n  check(params, Object);\n  check(text, String);\n\n  // eslint-disable-next-line no-console\n  // console.log('queryParams:', params);\n\n  const ret = findCards(sessionId, buildQuery(new QueryParams(params, text)));\n  return ret;\n});\n\nfunction buildSelector(queryParams) {\n  const userId = Meteor.userId();\n\n  const errors = new QueryErrors();\n\n  let selector = {};\n\n  // eslint-disable-next-line no-console\n  // console.log('queryParams:', queryParams);\n\n  if (queryParams.selector) {\n    selector = queryParams.selector;\n  } else {\n    const boardsSelector = {};\n\n    let archived = false;\n    let endAt = null;\n    if (queryParams.hasOperator(OPERATOR_STATUS)) {\n      queryParams.getPredicates(OPERATOR_STATUS).forEach(status => {\n        if (status === PREDICATE_ARCHIVED) {\n          archived = true;\n        } else if (status === PREDICATE_ALL) {\n          archived = null;\n        } else if (status === PREDICATE_ENDED) {\n          endAt = { $nin: [null, ''] };\n        } else if ([PREDICATE_PRIVATE, PREDICATE_PUBLIC].includes(status)) {\n          boardsSelector.permission = status;\n        }\n      });\n    }\n\n    if (queryParams.hasOperator(OPERATOR_ORG)) {\n      const orgs = [];\n      queryParams.getPredicates(OPERATOR_ORG).forEach(name => {\n        const org = ReactiveCache.getOrg({\n          $or: [\n            { orgDisplayName: name },\n            { orgShortName: name }\n          ]\n        });\n        if (org) {\n          orgs.push(org._id);\n        } else {\n          errors.addNotFound(OPERATOR_ORG, name);\n        }\n      });\n      if (orgs.length) {\n        boardsSelector.orgs = {\n          $elemMatch: { orgId: { $in: orgs }, isActive: true }\n        };\n      }\n    }\n\n    if (queryParams.hasOperator(OPERATOR_TEAM)) {\n      const teams = [];\n      queryParams.getPredicates(OPERATOR_TEAM).forEach(name => {\n        const team = ReactiveCache.getTeam({\n          $or: [\n            { teamDisplayName: name },\n            { teamShortName: name }\n          ]\n        });\n        if (team) {\n          teams.push(team._id);\n        } else {\n          errors.addNotFound(OPERATOR_TEAM, name);\n        }\n      });\n      if (teams.length) {\n        boardsSelector.teams = {\n          $elemMatch: { teamId: { $in: teams }, isActive: true }\n        };\n      }\n    }\n\n    selector = {\n      type: 'cardType-card',\n      // boardId: { $in: Boards.userBoardIds(userId) },\n      $and: [],\n    };\n\n    if (archived !== null) {\n      if (archived) {\n        selector.boardId = {\n          $in: Boards.userBoardIds(userId, null, boardsSelector),\n        };\n        selector.$and.push({\n          $or: [\n            {\n              boardId: {\n                $in: Boards.userBoardIds(userId, archived, boardsSelector),\n              },\n            },\n            { swimlaneId: { $in: Swimlanes.userArchivedSwimlaneIds(userId) } },\n            { listId: { $in: Lists.userArchivedListIds(userId) } },\n            { archived: true },\n          ],\n        });\n      } else {\n        selector.boardId = {\n          $in: Boards.userBoardIds(userId, false, boardsSelector),\n        };\n        selector.swimlaneId = { $nin: Swimlanes.archivedSwimlaneIds() };\n        selector.listId = { $nin: Lists.archivedListIds() };\n        selector.archived = false;\n      }\n    } else {\n      selector.boardId = {\n        $in: Boards.userBoardIds(userId, null, boardsSelector),\n      };\n    }\n    if (endAt !== null) {\n      selector.endAt = endAt;\n    }\n\n    if (queryParams.hasOperator(OPERATOR_BOARD)) {\n      const queryBoards = [];\n      queryParams.getPredicates(OPERATOR_BOARD).forEach(query => {\n        const boards = Boards.userSearch(userId, {\n          title: new RegExp(escapeForRegex(query), 'i'),\n        });\n        if (boards.length) {\n          boards.forEach(board => {\n            queryBoards.push(board._id);\n          });\n        } else {\n          errors.addNotFound(OPERATOR_BOARD, query);\n        }\n      });\n\n      selector.boardId.$in = queryBoards;\n    }\n\n    if (queryParams.hasOperator(OPERATOR_SWIMLANE)) {\n      const querySwimlanes = [];\n      queryParams.getPredicates(OPERATOR_SWIMLANE).forEach(query => {\n        const swimlanes = ReactiveCache.getSwimlanes({\n          title: new RegExp(escapeForRegex(query), 'i'),\n        });\n        if (swimlanes.length) {\n          swimlanes.forEach(swim => {\n            querySwimlanes.push(swim._id);\n          });\n        } else {\n          errors.addNotFound(OPERATOR_SWIMLANE, query);\n        }\n      });\n\n      // eslint-disable-next-line no-prototype-builtins\n      if (!selector.swimlaneId.hasOwnProperty('swimlaneId')) {\n        selector.swimlaneId = { $in: [] };\n      }\n      selector.swimlaneId.$in = querySwimlanes;\n    }\n\n    if (queryParams.hasOperator(OPERATOR_LIST)) {\n      const queryLists = [];\n      queryParams.getPredicates(OPERATOR_LIST).forEach(query => {\n        const lists = ReactiveCache.getLists({\n          title: new RegExp(escapeForRegex(query), 'i'),\n        });\n        if (lists.length) {\n          lists.forEach(list => {\n            queryLists.push(list._id);\n          });\n        } else {\n          errors.addNotFound(OPERATOR_LIST, query);\n        }\n      });\n\n      // eslint-disable-next-line no-prototype-builtins\n      if (!selector.hasOwnProperty('listId')) {\n        selector.listId = { $in: [] };\n      }\n      selector.listId.$in = queryLists;\n    }\n\n    if (queryParams.hasOperator(OPERATOR_COMMENT)) {\n      const cardIds = CardComments.textSearch(\n        userId,\n        queryParams.getPredicates(OPERATOR_COMMENT),\n        com => {\n          return com.cardId;\n        },\n      );\n      if (cardIds.length) {\n        selector._id = { $in: cardIds };\n      } else {\n        queryParams.getPredicates(OPERATOR_COMMENT).forEach(comment => {\n          errors.addNotFound(OPERATOR_COMMENT, comment);\n        });\n      }\n    }\n\n    [OPERATOR_DUE, OPERATOR_CREATED_AT, OPERATOR_MODIFIED_AT].forEach(field => {\n      if (queryParams.hasOperator(field)) {\n        selector[field] = {};\n        const predicate = queryParams.getPredicate(field);\n        selector[field][predicate.operator] = new Date(predicate.value);\n      }\n    });\n\n    const queryUsers = {};\n    queryUsers[OPERATOR_ASSIGNEE] = [];\n    queryUsers[OPERATOR_MEMBER] = [];\n    queryUsers[OPERATOR_CREATOR] = [];\n\n    if (queryParams.hasOperator(OPERATOR_USER)) {\n      const users = [];\n      queryParams.getPredicates(OPERATOR_USER).forEach(username => {\n        const user = ReactiveCache.getUser({ username });\n        if (user) {\n          users.push(user._id);\n        } else {\n          errors.addNotFound(OPERATOR_USER, username);\n        }\n      });\n      if (users.length) {\n        selector.$and.push({\n          $or: [{ members: { $in: users } }, { assignees: { $in: users } }],\n        });\n      }\n    }\n\n    [OPERATOR_MEMBER, OPERATOR_ASSIGNEE, OPERATOR_CREATOR].forEach(key => {\n      if (queryParams.hasOperator(key)) {\n        const users = [];\n        queryParams.getPredicates(key).forEach(username => {\n          const user = ReactiveCache.getUser({ username });\n          if (user) {\n            users.push(user._id);\n          } else {\n            errors.addNotFound(key, username);\n          }\n        });\n        if (users.length) {\n          selector[key] = { $in: users };\n        }\n      }\n    });\n\n    if (queryParams.hasOperator(OPERATOR_LABEL)) {\n      const queryLabels = [];\n      queryParams.getPredicates(OPERATOR_LABEL).forEach(label => {\n        let boards = Boards.userBoards(userId, null, {\n          labels: { $elemMatch: { color: label.toLowerCase() } },\n        });\n\n        if (boards.length) {\n          boards.forEach(board => {\n            // eslint-disable-next-line no-console\n            // console.log('board:', board);\n            // eslint-disable-next-line no-console\n            // console.log('board.labels:', board.labels);\n            board.labels\n              .filter(boardLabel => {\n                return boardLabel.color === label.toLowerCase();\n              })\n              .forEach(boardLabel => {\n                queryLabels.push(boardLabel._id);\n              });\n          });\n        } else {\n          // eslint-disable-next-line no-console\n          // console.log('label:', label);\n          const reLabel = new RegExp(escapeForRegex(label), 'i');\n          // eslint-disable-next-line no-console\n          // console.log('reLabel:', reLabel);\n          boards = Boards.userBoards(userId, null, {\n            labels: { $elemMatch: { name: reLabel } },\n          });\n\n          if (boards.length) {\n            boards.forEach(board => {\n              board.labels\n                .filter(boardLabel => {\n                  if (!boardLabel.name) {\n                    return false;\n                  }\n                  return boardLabel.name.match(reLabel);\n                })\n                .forEach(boardLabel => {\n                  queryLabels.push(boardLabel._id);\n                });\n            });\n          } else {\n            errors.addNotFound(OPERATOR_LABEL, label);\n          }\n        }\n      });\n      if (queryLabels.length) {\n        // eslint-disable-next-line no-console\n        // console.log('queryLabels:', queryLabels);\n        selector.labelIds = { $in: _.uniq(queryLabels) };\n      }\n    }\n\n    if (queryParams.hasOperator(OPERATOR_HAS)) {\n      queryParams.getPredicates(OPERATOR_HAS).forEach(has => {\n        switch (has.field) {\n          case PREDICATE_ATTACHMENT:\n            selector.$and.push({\n              _id: {\n                $in: ReactiveCache.getAttachments({}, { fields: { cardId: 1 } }).map(\n                  a => a.cardId,\n                ),\n              },\n            });\n            break;\n          case PREDICATE_CHECKLIST:\n            selector.$and.push({\n              _id: {\n                $in: ReactiveCache.getChecklists({}, { fields: { cardId: 1 } }).map(\n                  a => a.cardId,\n                ),\n              },\n            });\n            break;\n          case PREDICATE_DESCRIPTION:\n          case PREDICATE_START_AT:\n          case PREDICATE_DUE_AT:\n          case PREDICATE_END_AT:\n            if (has.exists) {\n              selector[has.field] = { $exists: true, $nin: [null, ''] };\n            } else {\n              selector[has.field] = { $in: [null, ''] };\n            }\n            break;\n          case PREDICATE_ASSIGNEES:\n          case PREDICATE_MEMBERS:\n            if (has.exists) {\n              selector[has.field] = { $exists: true, $nin: [null, []] };\n            } else {\n              selector[has.field] = { $in: [null, []] };\n            }\n            break;\n        }\n      });\n    }\n\n    if (queryParams.text) {\n      const regex = new RegExp(escapeForRegex(queryParams.text), 'i');\n\n      const items = ReactiveCache.getChecklistItems(\n        { title: regex },\n        { fields: { cardId: 1, checklistId: 1 } },\n      );\n      const checklists = ReactiveCache.getChecklists(\n        {\n          $or: [\n            { title: regex },\n            { _id: { $in: items.map(item => item.checklistId) } },\n          ],\n        },\n        { fields: { cardId: 1 } },\n      );\n\n      const attachments = ReactiveCache.getAttachments({ 'original.name': regex });\n\n      const comments = ReactiveCache.getCardComments(\n        { text: regex },\n        { fields: { cardId: 1 } },\n      );\n\n      let cardsSelector = [\n          { title: regex },\n          { description: regex },\n          { customFields: { $elemMatch: { value: regex } } },\n          { _id: { $in: checklists.map(list => list.cardId) } },\n          { _id: { $in: attachments.map(attach => attach.cardId) } },\n          { _id: { $in: comments.map(com => com.cardId) } },\n        ];\n      if (queryParams.text === \"false\" || queryParams.text === \"true\") {\n        cardsSelector.push({ customFields: { $elemMatch: { value: queryParams.text === \"true\" } } } );\n      }\n      selector.$and.push({ $or: cardsSelector });\n    }\n\n    if (selector.$and.length === 0) {\n      delete selector.$and;\n    }\n  }\n\n  // eslint-disable-next-line no-console\n  // console.log('cards selector:', JSON.stringify(selector, null, 2));\n\n  const query = new Query();\n  query.selector = selector;\n  query.setQueryParams(queryParams);\n  query._errors = errors;\n\n  return query;\n}\n\nfunction buildProjection(query) {\n  // eslint-disable-next-line no-console\n  // console.log('query:', query);\n  let skip = 0;\n  if (query.getQueryParams().skip) {\n    skip = query.getQueryParams().skip;\n  }\n  let limit = DEFAULT_LIMIT;\n  const configLimit = parseInt(process.env.RESULTS_PER_PAGE, 10);\n  if (!isNaN(configLimit) && configLimit > 0) {\n    limit = configLimit;\n  }\n\n  if (query.getQueryParams().hasOperator(OPERATOR_LIMIT)) {\n    limit = query.getQueryParams().getPredicate(OPERATOR_LIMIT);\n  }\n\n  const projection = {\n    fields: {\n      _id: 1,\n      archived: 1,\n      boardId: 1,\n      swimlaneId: 1,\n      listId: 1,\n      title: 1,\n      type: 1,\n      sort: 1,\n      members: 1,\n      assignees: 1,\n      colors: 1,\n      dueAt: 1,\n      createdAt: 1,\n      modifiedAt: 1,\n      labelIds: 1,\n      customFields: 1,\n      userId: 1,\n      description: 1,\n    },\n    sort: {\n      boardId: 1,\n      swimlaneId: 1,\n      listId: 1,\n      sort: 1,\n    },\n    skip,\n  };\n  if (limit > 0) {\n    projection.limit = limit;\n  }\n\n  if (query.getQueryParams().hasOperator(OPERATOR_SORT)) {\n    const order =\n      query.getQueryParams().getPredicate(OPERATOR_SORT).order ===\n      ORDER_ASCENDING\n        ? 1\n        : -1;\n    switch (query.getQueryParams().getPredicate(OPERATOR_SORT).name) {\n      case PREDICATE_DUE_AT:\n        projection.sort = {\n          dueAt: order,\n          boardId: 1,\n          swimlaneId: 1,\n          listId: 1,\n          sort: 1,\n        };\n        break;\n      case PREDICATE_MODIFIED_AT:\n        projection.sort = {\n          modifiedAt: order,\n          boardId: 1,\n          swimlaneId: 1,\n          listId: 1,\n          sort: 1,\n        };\n        break;\n      case PREDICATE_CREATED_AT:\n        projection.sort = {\n          createdAt: order,\n          boardId: 1,\n          swimlaneId: 1,\n          listId: 1,\n          sort: 1,\n        };\n        break;\n      case PREDICATE_SYSTEM:\n        projection.sort = {\n          boardId: order,\n          swimlaneId: order,\n          listId: order,\n          modifiedAt: order,\n          sort: order,\n        };\n        break;\n    }\n  }\n\n  // eslint-disable-next-line no-console\n  // console.log('projection:', projection);\n\n  query.projection = projection;\n\n  return query;\n}\n\nfunction buildQuery(queryParams) {\n  const query = buildSelector(queryParams);\n\n  return buildProjection(query);\n}\n\nMeteor.publish('brokenCards', function(sessionId) {\n  check(sessionId, String);\n\n  const params = new QueryParams();\n  params.addPredicate(OPERATOR_STATUS, PREDICATE_ALL);\n  const query = buildQuery(params);\n  query.selector.$or = [\n    { boardId: { $in: [null, ''] } },\n    { swimlaneId: { $in: [null, ''] } },\n    { listId: { $in: [null, ''] } },\n    { type: { $nin: CARD_TYPES } },\n  ];\n  // console.log('brokenCards selector:', query.selector);\n\n  const ret = findCards(sessionId, query);\n  return ret;\n});\n\nMeteor.publish('nextPage', function(sessionId) {\n  check(sessionId, String);\n\n  const session = ReactiveCache.getSessionData({ sessionId });\n  const projection = session.getProjection();\n  projection.skip = session.lastHit;\n\n  const ret = findCards(sessionId, new Query(session.getSelector(), projection));\n  return ret;\n});\n\nMeteor.publish('previousPage', function(sessionId) {\n  check(sessionId, String);\n\n  const session = ReactiveCache.getSessionData({ sessionId });\n  const projection = session.getProjection();\n  projection.skip = session.lastHit - session.resultsCount - projection.limit;\n\n  const ret = findCards(sessionId, new Query(session.getSelector(), projection));\n  return ret;\n});\n\nfunction findCards(sessionId, query) {\n  const userId = Meteor.userId();\n\n  // eslint-disable-next-line no-console\n  // console.log('selector:', query.selector);\n  // console.log('selector.$and:', query.selector.$and);\n  // eslint-disable-next-line no-console\n  // console.log('projection:', query.projection);\n\n  const cards = ReactiveCache.getCards(query.selector, query.projection, true);\n  // eslint-disable-next-line no-console\n  // console.log('count:', cards.count());\n\n  const update = {\n    $set: {\n      totalHits: 0,\n      lastHit: 0,\n      resultsCount: 0,\n      cards: [],\n      selector: SessionData.pickle(query.selector),\n      projection: SessionData.pickle(query.projection),\n      errors: query.errors(),\n      debug: query.getQueryParams().getPredicate(OPERATOR_DEBUG)\n    },\n  };\n\n  if (cards) {\n    update.$set.totalHits = cards.count();\n    update.$set.lastHit =\n      query.projection.skip + query.projection.limit < cards.count()\n        ? query.projection.skip + query.projection.limit\n        : cards.count();\n    update.$set.cards = cards.map(card => {\n      return card._id;\n    });\n    update.$set.resultsCount = update.$set.cards.length;\n  }\n\n  // eslint-disable-next-line no-console\n  // console.log('sessionId:', sessionId);\n  // eslint-disable-next-line no-console\n  // console.log('userId:', userId);\n  // eslint-disable-next-line no-console\n  // console.log('update:', update);\n  SessionData.upsert({ userId, sessionId }, update);\n\n  // remove old session data\n  SessionData.remove({\n    userId,\n    modifiedAt: {\n      $lt: new Date(\n        moment()\n          .subtract(1, 'day')\n          .format(),\n      ),\n    },\n  });\n\n  if (cards) {\n    const boards = [];\n    const swimlanes = [];\n    const lists = [];\n    const customFieldIds = [];\n    const users = [this.userId];\n\n    cards.forEach(card => {\n      if (card.boardId) boards.push(card.boardId);\n      if (card.swimlaneId) swimlanes.push(card.swimlaneId);\n      if (card.listId) lists.push(card.listId);\n      if (card.userId) {\n        users.push(card.userId);\n      }\n      if (card.members) {\n        card.members.forEach(userId => {\n          users.push(userId);\n        });\n      }\n      if (card.assignees) {\n        card.assignees.forEach(userId => {\n          users.push(userId);\n        });\n      }\n      if (card.customFields) {\n        card.customFields.forEach(field => {\n          customFieldIds.push(field._id);\n        });\n      }\n    });\n\n    const fields = {\n      _id: 1,\n      title: 1,\n      archived: 1,\n      sort: 1,\n      type: 1,\n    };\n\n    return [\n      cards,\n      ReactiveCache.getBoards(\n        { _id: { $in: boards } },\n        { fields: { ...fields, labels: 1, color: 1 } },\n        true,\n      ),\n      ReactiveCache.getSwimlanes(\n        { _id: { $in: swimlanes } },\n        { fields: { ...fields, color: 1 } },\n        true,\n      ),\n      ReactiveCache.getLists({ _id: { $in: lists } }, { fields }, true),\n      ReactiveCache.getCustomFields({ _id: { $in: customFieldIds } }, {}, true),\n      ReactiveCache.getUsers({ _id: { $in: users } }, { fields: Users.safeFields }, true),\n      ReactiveCache.getChecklists({ cardId: { $in: cards.map(c => c._id) } }, {}, true),\n      ReactiveCache.getChecklistItems({ cardId: { $in: cards.map(c => c._id) } }, {}, true),\n      ReactiveCache.getAttachments({ 'meta.cardId': { $in: cards.map(c => c._id) } }, {}, true).cursor,\n      ReactiveCache.getCardComments({ cardId: { $in: cards.map(c => c._id) } }, {}, true),\n      SessionData.find({ userId, sessionId }),\n    ];\n  }\n\n  return [SessionData.find({ userId, sessionId })];\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\n\n// We use these when displaying notifications in the notificationsDrawer\n\n// gets all activities associated with the current user\nMeteor.publish('notificationActivities', () => {\n  const ret = activities();\n  return ret;\n});\n\n// gets all attachments associated with activities associated with the current user\nMeteor.publish('notificationAttachments', function() {\n  const ret = ReactiveCache.getAttachments(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.attachmentId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  ).cursor;\n  return ret;\n});\n\n// gets all cards associated with activities associated with the current user\nMeteor.publish('notificationCards', function() {\n  const ret = ReactiveCache.getCards(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.cardId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all checklistItems associated with activities associated with the current user\nMeteor.publish('notificationChecklistItems', function() {\n  const ret = ReactiveCache.getChecklistItems(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.checklistItemId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all checklists associated with activities associated with the current user\nMeteor.publish('notificationChecklists', function() {\n  const ret = ReactiveCache.getChecklists(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.checklistId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all comments associated with activities associated with the current user\nMeteor.publish('notificationComments', function() {\n  const ret = ReactiveCache.getCardComments(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.commentId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all lists associated with activities associated with the current user\nMeteor.publish('notificationLists', function() {\n  const ret = ReactiveCache.getLists(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.listId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all swimlanes associated with activities associated with the current user\nMeteor.publish('notificationSwimlanes', function() {\n  const ret = ReactiveCache.getSwimlanes(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.swimlaneId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\n// gets all users associated with activities associated with the current user\nMeteor.publish('notificationUsers', function() {\n  const ret = ReactiveCache.getUsers(\n    {\n      _id: {\n        $in: activities()\n          .map(v => v.userId)\n          .filter(v => !!v),\n      },\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\nfunction activities() {\n  const activityIds = ReactiveCache.getCurrentUser()?.profile?.notifications?.map(v => v.activity) || [];\n  let ret = [];\n  if (activityIds.length > 0) {\n    ret = ReactiveCache.getActivities(\n      {\n        _id: { $in: activityIds },\n      },\n      {},\n      true,\n    );\n  }\n  return ret;\n}\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.publish('org', function(query, limit) {\n  check(query, Match.OneOf(Object, null));\n  check(limit, Number);\n\n  let ret = [];\n  const user = ReactiveCache.getCurrentUser();\n\n  if (user && user.isAdmin) {\n    ret = ReactiveCache.getOrgs(query,\n      {\n        limit,\n        sort: { createdAt: -1 },\n        fields: {\n          orgDisplayName: 1,\n          orgDesc: 1,\n          orgShortName: 1,\n          orgAutoAddUsersWithDomainName: 1,\n          orgWebsite: 1,\n          orgTeams: 1,\n          createdAt: 1,\n          orgIsActive: 1,\n        }\n      },\n      true,\n    );\n  }\n\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.publish('people', function(query, limit) {\n  check(query, Match.OneOf(Object, null));\n  check(limit, Number);\n\n  let ret = [];\n  const user = ReactiveCache.getCurrentUser();\n\n  if (user && user.isAdmin) {\n    ret = ReactiveCache.getUsers(query, {\n      limit,\n      sort: { createdAt: -1 },\n      fields: {\n        username: 1,\n        'profile.fullname': 1,\n        'profile.initials': 1,\n        isAdmin: 1,\n        emails: 1,\n        createdAt: 1,\n        loginDisabled: 1,\n        authenticationMethod: 1,\n        importUsernames: 1,\n        orgs: 1,\n        teams: 1,\n      },\n    },\n    true);\n  }\n\n  return ret;\n});\n","import Boards from '/models/boards';\nimport Actions from '/models/actions';\nimport Triggers from '/models/triggers';\nimport Rules from '/models/rules';\n\nMeteor.publish('rules', ruleId => {\n  check(ruleId, String);\n  const ret = ReactiveCache.getRules(\n    {\n      _id: ruleId,\n    },\n    {},\n    true,\n  );\n  return ret;\n});\n\nMeteor.publish('allRules', () => {\n  const ret = ReactiveCache.getRules({}, {}, true);\n  return ret;\n});\n\nMeteor.publish('allTriggers', () => {\n  const ret = ReactiveCache.getTriggers({}, {}, true);\n  return ret;\n});\n\nMeteor.publish('allActions', () => {\n  const ret = ReactiveCache.getActions({}, {}, true);\n  return ret;\n});\n\nMeteor.publish('rulesReport', () => {\n  const rules = ReactiveCache.getRules({}, {}, true);\n  const actionIds = [];\n  const triggerIds = [];\n  const boardIds = [];\n\n  rules.forEach(rule => {\n    actionIds.push(rule.actionId);\n    triggerIds.push(rule.triggerId);\n    boardIds.push(rule.boardId);\n  });\n\n  const ret = [\n    rules,\n    ReactiveCache.getActions({ _id: { $in: actionIds } }, {}, true),\n    ReactiveCache.getTriggers({ _id: { $in: triggerIds } }, {}, true),\n    ReactiveCache.getBoards({ _id: { $in: boardIds } }, { fields: { title: 1 } }, true),\n  ];\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.publish('globalwebhooks', () => {\n  const boardId = Integrations.Const.GLOBAL_WEBHOOK_ID;\n  const ret = ReactiveCache.getIntegrations(\n    {\n      boardId,\n    },\n    {},\n    true,\n  );\n  return ret;\n});\nMeteor.publish('setting', () => {\n  const ret = Settings.find(\n    {},\n    {\n      fields: {\n        disableRegistration: 1,\n        disableForgotPassword: 1,\n        productName: 1,\n        hideLogo: 1,\n        hideCardCounterList: 1,\n        hideBoardMemberList: 1,\n        customLoginLogoImageUrl: 1,\n        customLoginLogoLinkUrl: 1,\n        customHelpLinkUrl: 1,\n        textBelowCustomLoginLogo: 1,\n        automaticLinkedUrlSchemes: 1,\n        customTopLeftCornerLogoImageUrl: 1,\n        customTopLeftCornerLogoLinkUrl: 1,\n        customTopLeftCornerLogoHeight: 1,\n        customHTMLafterBodyStart: 1,\n        customHTMLbeforeBodyEnd: 1,\n        displayAuthenticationMethod: 1,\n        defaultAuthenticationMethod: 1,\n        spinnerName: 1,\n        oidcBtnText: 1,\n        mailDomainName: 1,\n        legalNotice: 1,\n        accessibilityPageEnabled: 1,\n        accessibilityTitle: 1,\n        accessibilityContent: 1,\n      },\n    },\n  );\n  return ret;\n});\n\nMeteor.publish('mailServer', function() {\n  const user = ReactiveCache.getCurrentUser();\n\n  let ret = []\n  if (user && user.isAdmin) {\n    ret = Settings.find(\n      {},\n      {\n        fields: {\n          'mailServer.host': 1,\n          'mailServer.port': 1,\n          'mailServer.username': 1,\n          'mailServer.enableTLS': 1,\n          'mailServer.from': 1,\n        },\n      },\n    );\n  }\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.methods({\n  copySwimlane(swimlaneId, toBoardId) {\n    check(swimlaneId, String);\n    check(toBoardId, String);\n\n    const swimlane = ReactiveCache.getSwimlane(swimlaneId);\n    const toBoard = ReactiveCache.getBoard(toBoardId);\n\n    let ret = false;\n    if (swimlane && toBoard) {\n      swimlane.copy(toBoardId);\n      ret = true;\n    }\n\n    return ret;\n  },\n\n  moveSwimlane(swimlaneId, toBoardId) {\n    check(swimlaneId, String);\n    check(toBoardId, String);\n\n    const swimlane = ReactiveCache.getSwimlane(swimlaneId);\n    const toBoard = ReactiveCache.getBoard(toBoardId);\n\n    let ret = false;\n    if (swimlane && toBoard) {\n      swimlane.move(toBoardId);\n\n      ret = true;\n    }\n\n    return ret;\n  },\n});\n","Meteor.publish('tableVisibilityModeSettings', function() {\n  const ret = TableVisibilityModeSettings.find();\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.publish('team', function(query, limit) {\n  check(query, Match.OneOf(Object, null));\n  check(limit, Number);\n\n  const user = ReactiveCache.getCurrentUser();\n\n  let ret = [];\n  if (user && user.isAdmin) {\n    ret = ReactiveCache.getTeams(query,\n      {\n        limit,\n        sort: { createdAt: -1 },\n        fields: {\n          teamDisplayName: 1,\n          teamDesc: 1,\n          teamShortName: 1,\n          teamWebsite: 1,\n          teams: 1,\n          createdAt: 1,\n          teamIsActive: 1,\n        }\n      },\n      true,\n    );\n  }\n\n  return ret;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nMeteor.publish('translation', function(query, limit) {\n  check(query, Match.OneOf(Object, null));\n  check(limit, Number);\n\n  let ret = [];\n  const user = ReactiveCache.getCurrentUser();\n\n  if (user && user.isAdmin) {\n    ret = ReactiveCache.getTranslations(query,\n      {\n        limit,\n        sort: { modifiedAt: -1 },\n        fields: {\n          language: 1,\n          text: 1,\n          translationText: 1,\n          createdAt: 1,\n        }\n      },\n      true,\n    );\n  }\n\n  return ret;\n});\n","Meteor.publish('unsaved-edits', function() {\n  const ret = UnsavedEditCollection.find({\n    userId: this.userId,\n  });\n  return ret;\n});\n","Meteor.publish('user-miniprofile', function (usernames) {\n  check(usernames, Array);\n\n  // eslint-disable-next-line no-console\n  // console.log('usernames:', usernames);\n  const ret = ReactiveCache.getUsers(\n    {\n      $or: [\n        { username: { $in: usernames } },\n        { importUsernames: { $in: usernames } },\n      ],\n    },\n    {\n      fields: {\n        ...Users.safeFields,\n        importUsernames: 1,\n      },\n    },\n    true,\n  );\n  return ret;\n});\n\nMeteor.publish('user-admin', function () {\n  const ret = Meteor.users.find(this.userId, {\n    fields: {\n      isAdmin: 1,\n      teams: 1,\n      orgs: 1,\n      authenticationMethod: 1,\n    },\n  });\n  return ret;\n});\n\nMeteor.publish('user-authenticationMethod', function (match) {\n  check(match, String);\n  const ret = ReactiveCache.getUsers(\n    { $or: [{ _id: match }, { email: match }, { username: match }] },\n    {\n      fields: {\n        authenticationMethod: 1,\n        teams: 1,\n        orgs: 1,\n      },\n    },\n    true,\n  );\n  return ret;\n});\n\n// update last connection date and last connection average time (in seconds) for a user\n// function UpdateLastConnectionDateAndLastConnectionAverageTime(lstUsers) {\n//   let lastConnectionAverageTime;\n//   lstUsers.forEach((currentUser) => {\n//     lastConnectionAverageTime =\n//       currentUser.lastConnectionAverageTimeInSecs !== undefined\n//         ? currentUser.lastConnectionAverageTimeInSecs\n//         : 0;\n//     lastConnectionAverageTime =\n//       currentUser.lastConnectionDate !== undefined\n//         ? ((new Date().getTime() - currentUser.lastConnectionDate.getTime()) /\n//             1000 +\n//             lastConnectionAverageTime) /\n//           2\n//         : 0;\n\n//     Users.update(currentUser._id, {\n//       $set: {\n//         lastConnectionDate: new Date(),\n//         lastConnectionAverageTimeInSecs: parseInt(lastConnectionAverageTime),\n//       },\n//     });\n//   });\n// }\n\nif (Meteor.isServer) {\n\n/* Got this error, so using this code only when metrics enabled with process.env... below\nI20221023-09:15:09.599(3)? Exception in onConnection callback: TypeError: Cannot read property 'userId' of null\nI20221023-09:15:09.601(3)?     at server/publications/users.js:106:44\nI20221023-09:15:09.601(3)?     at Array.forEach (<anonymous>)\nI20221023-09:15:09.601(3)?     at server/publications/users.js:102:46\nI20221023-09:15:09.601(3)?     at runWithEnvironment (packages/meteor.js:1347:24)\nI20221023-09:15:09.601(3)?     at packages/meteor.js:1360:14\nI20221023-09:15:09.601(3)?     at packages/ddp-server/livedata_server.js:1614:9\nI20221023-09:15:09.601(3)?     at Hook.forEach (packages/callback-hook/hook.js:110:15)\nI20221023-09:15:09.601(3)?     at Hook.each (packages/callback-hook/hook.js:122:17)\nI20221023-09:15:09.602(3)?     at Server._handleConnect (packages/ddp-server/livedata_server.js:1612:27)\nI20221023-09:15:09.602(3)?     at packages/ddp-server/livedata_server.js:1496:18\n*/\n\n  if (process.env.WEKAN_METRICS_ACCEPTED_IP_ADDRESS) {\n/*\n    Meteor.onConnection(function (connection) {\n    // console.log(\n    //   'Meteor.server.stream_server.open_sockets',\n    //   Meteor.server.stream_server.open_sockets,\n    // );\n    //console.log('connection.Id on connection...', connection.id);\n    // connection.onClose(() => {\n    //   console.log('connection.Id on close...', connection.id);\n    //   // Get all user that were connected to this socket\n    //   // And update last connection date and last connection average time (in seconds) for each user\n    //   let lstOfUserThatWasConnectedToThisSocket = ReactiveCache.getUsers({\n    //     lastconnectedSocketId: connection.id,\n    //   }, {}, true).fetch();\n    //   if (\n    //     lstOfUserThatWasConnectedToThisSocket !== undefined &&\n    //     lstOfUserThatWasConnectedToThisSocket.length > 0\n    //   ) {\n    //     console.log({ lstOfUserThatWasConnectedToThisSocket });\n    //     UpdateLastConnectionDateAndLastConnectionAverageTime(\n    //       lstOfUserThatWasConnectedToThisSocket,\n    //     );\n    //   }\n    // });\n\n    // Meteor.server.stream_server.open_sockets.forEach((socket) =>\n    //   console.log('meteor session', socket._meteorSession.userId),\n    // );\n\n    // update last connected user date (needed for one of the KPI)\n    Meteor.server.stream_server.open_sockets.forEach(\n      (socket) => {\n        if (socket?._meteorSession?.userId) {\n          Users.update(socket._meteorSession.userId, {\n            $set: {\n              lastConnectionDate: new Date(),\n            },\n          });\n        }\n      });\n    });\n*/\n  }\n}\n","const fs = require('fs');\nconst os = require('os');\n\nlet errors = [];\nif (!process.env.WRITABLE_PATH) {\n  errors.push(\"WRITABLE_PATH environment variable missing and/or unset, please configure !\");\n} else {\n  try {\n    fs.accessSync(process.env.WRITABLE_PATH, fs.constants.W_OK);\n  } catch (err) {\n    const userInfo = os.userInfo();\n    errors.push(\"can't write to \" + process.env.WRITABLE_PATH, err);\n    errors.push(\"the path of WRITABLE_PATH (\" + process.env.WRITABLE_PATH + \") must be writable !!!\");\n    errors.push(\"username: \" + userInfo[\"username\"] + \" - uid: \" + userInfo[\"uid\"] + \" - gid: \" + userInfo[\"gid\"]);\n  }\n}\n\nif (errors.length > 0) {\n  console.error(\"\\n\\n\");\n  console.error(errors.join(\"\\n\"));\n  console.error(\"\\n\");\n  console.error(\"Stopping Wekan\");\n  console.error(\"Wekan isn't runnable. Please resolve the error's above and restart Wekan !\");\n  console.error(\"\\n\\n\");\n  process.exit(1);\n}\n","Meteor.startup(() => {\n  if (Meteor.isServer) {\n    import { AccountsCommon } from 'meteor/accounts-base';\n\n    Accounts.config({\n      loginExpirationInDays: process.env.ACCOUNTS_COMMON_LOGIN_EXPIRATION_IN_DAYS || 90,\n    });\n  }\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport Fiber from 'fibers';\n\nMeteor.startup(() => {\n  // Node Fibers 100% CPU usage issue\n  // https://github.com/wekan/wekan-mongodb/issues/2#issuecomment-381453161\n  // https://github.com/meteor/meteor/issues/9796#issuecomment-381676326\n  // https://github.com/sandstorm-io/sandstorm/blob/0f1fec013fe7208ed0fd97eb88b31b77e3c61f42/shell/server/00-startup.js#L99-L129\n  Fiber.poolSize = 1e9;\n\n  Accounts.validateLoginAttempt(function(options) {\n    const user = options.user || {};\n    return !user.loginDisabled;\n  });\n\n  Authentication = {};\n\n  Authentication.checkUserId = function(userId) {\n    if (userId === undefined) {\n      const error = new Meteor.Error('Unauthorized', 'Unauthorized');\n      error.statusCode = 401;\n      throw error;\n    }\n    const admin = ReactiveCache.getUser({ _id: userId, isAdmin: true });\n\n    if (admin === undefined) {\n      const error = new Meteor.Error('Forbidden', 'Forbidden');\n      error.statusCode = 403;\n      throw error;\n    }\n  };\n\n  // This will only check if the user is logged in.\n  // The authorization checks for the user will have to be done inside each API endpoint\n  Authentication.checkLoggedIn = function(userId) {\n    if (userId === undefined) {\n      const error = new Meteor.Error('Unauthorized', 'Unauthorized');\n      error.statusCode = 401;\n      throw error;\n    }\n  };\n\n  // An admin should be authorized to access everything, so we use a separate check for admins\n  // This throws an error if otherReq is false and the user is not an admin\n  Authentication.checkAdminOrCondition = function(userId, otherReq) {\n    if (otherReq) return;\n    const admin = ReactiveCache.getUser({ _id: userId, isAdmin: true });\n    if (admin === undefined) {\n      const error = new Meteor.Error('Forbidden', 'Forbidden');\n      error.statusCode = 403;\n      throw error;\n    }\n  };\n\n  // Helper function. Will throw an error if the user is not active BoardAdmin or active Normal user of the board.\n  Authentication.checkBoardAccess = function(userId, boardId) {\n    Authentication.checkLoggedIn(userId);\n    const board = ReactiveCache.getBoard(boardId);\n    const normalAccess = board.members.some(e => e.userId === userId && e.isActive && !e.isNoComments && !e.isCommentOnly && !e.isWorker);\n    Authentication.checkAdminOrCondition(userId, normalAccess);\n  };\n\n  if (Meteor.isServer) {\n    if (\n      process.env.ORACLE_OIM_ENABLED === 'true' ||\n      process.env.ORACLE_OIM_ENABLED === true\n    ) {\n      ServiceConfiguration.configurations.upsert(\n        // eslint-disable-line no-undef\n        { service: 'oidc' },\n        {\n          $set: {\n            loginStyle: process.env.OAUTH2_LOGIN_STYLE,\n            clientId: process.env.OAUTH2_CLIENT_ID,\n            secret: process.env.OAUTH2_SECRET,\n            serverUrl: process.env.OAUTH2_SERVER_URL,\n            authorizationEndpoint: process.env.OAUTH2_AUTH_ENDPOINT,\n            userinfoEndpoint: process.env.OAUTH2_USERINFO_ENDPOINT,\n            tokenEndpoint: process.env.OAUTH2_TOKEN_ENDPOINT,\n            idTokenWhitelistFields:\n              process.env.OAUTH2_ID_TOKEN_WHITELIST_FIELDS || [],\n            requestPermissions: process.env.OAUTH2_REQUEST_PERMISSIONS,\n          },\n        },\n      );\n    } else if (\n      process.env.OAUTH2_ENABLED === 'true' ||\n      process.env.OAUTH2_ENABLED === true\n    ) {\n      ServiceConfiguration.configurations.upsert(\n        // eslint-disable-line no-undef\n        { service: 'oidc' },\n        {\n          $set: {\n            loginStyle: process.env.OAUTH2_LOGIN_STYLE,\n            clientId: process.env.OAUTH2_CLIENT_ID,\n            secret: process.env.OAUTH2_SECRET,\n            serverUrl: process.env.OAUTH2_SERVER_URL,\n            authorizationEndpoint: process.env.OAUTH2_AUTH_ENDPOINT,\n            userinfoEndpoint: process.env.OAUTH2_USERINFO_ENDPOINT,\n            tokenEndpoint: process.env.OAUTH2_TOKEN_ENDPOINT,\n            idTokenWhitelistFields:\n              process.env.OAUTH2_ID_TOKEN_WHITELIST_FIELDS || [],\n            requestPermissions: process.env.OAUTH2_REQUEST_PERMISSIONS,\n          },\n          // OAUTH2_ID_TOKEN_WHITELIST_FIELDS || [],\n          // OAUTH2_REQUEST_PERMISSIONS || 'openid profile email',\n        },\n        );\n    } else if (\n      process.env.CAS_ENABLED === 'true' ||\n      process.env.CAS_ENABLED === true\n    ) {\n      ServiceConfiguration.configurations.upsert(\n        // eslint-disable-line no-undef\n        { service: 'cas' },\n        {\n          $set: {\n            baseUrl: process.env.CAS_BASE_URL,\n            loginUrl: process.env.CAS_LOGIN_URL,\n            serviceParam: 'service',\n            popupWidth: 810,\n            popupHeight: 610,\n            popup: true,\n            autoClose: true,\n            validateUrl: process.env.CASE_VALIDATE_URL,\n            casVersion: 3.0,\n            attributes: {\n              debug: process.env.DEBUG === 'true',\n            },\n          },\n        },\n      );\n    } else if (\n      process.env.SAML_ENABLED === 'true' ||\n      process.env.SAML_ENABLED === true\n    ) {\n      ServiceConfiguration.configurations.upsert(\n        // eslint-disable-line no-undef\n        { service: 'saml' },\n        {\n          $set: {\n            provider: process.env.SAML_PROVIDER,\n            entryPoint: process.env.SAML_ENTRYPOINT,\n            issuer: process.env.SAML_ISSUER,\n            cert: process.env.SAML_CERT,\n            idpSLORedirectURL: process.env.SAML_IDPSLO_REDIRECTURL,\n            privateKeyFile: process.env.SAML_PRIVATE_KEYFILE,\n            publicCertFile: process.env.SAML_PUBLIC_CERTFILE,\n            identifierFormat: process.env.SAML_IDENTIFIER_FORMAT,\n            localProfileMatchAttribute:\n              process.env.SAML_LOCAL_PROFILE_MATCH_ATTRIBUTE,\n            attributesSAML: process.env.SAML_ATTRIBUTES || [\n              'sn',\n              'givenName',\n              'mail',\n            ],\n\n            /*\n            settings = {\"saml\":[{\n              \"provider\":\"openam\",\n              \"entryPoint\":\"https://openam.idp.io/openam/SSORedirect/metaAlias/zimt/idp\",\n              \"issuer\": \"https://sp.zimt.io/\", //replace with url of your app\n              \"cert\":\"MIICizCCAfQCCQCY8tKaMc0 LOTS OF FUNNY CHARS ==\",\n              \"idpSLORedirectURL\": \"http://openam.idp.io/openam/IDPSloRedirect/metaAlias/zimt/idp\",\n              \"privateKeyFile\": \"certs/mykey.pem\",  // path is relative to $METEOR-PROJECT/private\n              \"publicCertFile\": \"certs/mycert.pem\",  // eg $METEOR-PROJECT/private/certs/mycert.pem\n              \"dynamicProfile\": true // set to true if we want to create a user in Meteor.users dynamically if SAML assertion is valid\n              \"identifierFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\", // Defaults to urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n              \"localProfileMatchAttribute\": \"telephoneNumber\" // CAUTION: this will be mapped to profile.<localProfileMatchAttribute> attribute in Mongo if identifierFormat (see above) differs from urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress,\n              \"attributesSAML\": [telephoneNumber, sn, givenName, mail], // attrs from SAML attr statement, which will be used for local Meteor profile creation. Currently no real attribute mapping. If required use mapping on IdP side.\n            }]}\n            */\n          },\n        },\n      );\n    }\n  }\n});\n","Meteor.startup(() => {\n  if (process.env.CARD_OPENED_WEBHOOK_ENABLED === 'true') {\n    Meteor.settings.public.CARD_OPENED_WEBHOOK_ENABLED = true;\n  } else {\n    Meteor.settings.public.CARD_OPENED_WEBHOOK_ENABLED = false;\n  }\n});\n","Meteor.startup(() => {\n  if (process.env.CORS) {\n    // Listen to incoming HTTP requests, can only be used on the server\n    WebApp.rawConnectHandlers.use(function(req, res, next) {\n      res.setHeader('Access-Control-Allow-Origin', process.env.CORS);\n      return next();\n    });\n  }\n  if (process.env.CORS_ALLOW_HEADERS) {\n    WebApp.rawConnectHandlers.use(function(req, res, next) {\n      res.setHeader(\n        'Access-Control-Allow-Headers',\n        process.env.CORS_ALLOW_HEADERS,\n      );\n      return next();\n    });\n  }\n  if (process.env.CORS_EXPOSE_HEADERS) {\n    WebApp.rawConnectHandlers.use(function(req, res, next) {\n      res.setHeader(\n        'Access-Control-Expose-Headers',\n        process.env.CORS_EXPOSE_HEADERS,\n      );\n      return next();\n    });\n  }\n});\n","Meteor.startup(() => {\n  if (process.env.HEADER_LOGIN_ID) {\n    Meteor.settings.public.headerLoginId        = process.env.HEADER_LOGIN_ID;\n    Meteor.settings.public.headerLoginEmail     = process.env.HEADER_LOGIN_EMAIL;\n    Meteor.settings.public.headerLoginFirstname = process.env.HEADER_LOGIN_FIRSTNAME;\n    Meteor.settings.public.headerLoginLastname  = process.env.HEADER_LOGIN_LASTNAME;\n  }\n});\n","Meteor.startup(() => {\n  if (process.env.MAX_IMAGE_PIXEL) {\n    Meteor.settings.public.MAX_IMAGE_PIXEL = process.env.MAX_IMAGE_PIXEL;\n    Meteor.settings.public.IMAGE_COMPRESS_RATIO =\n      process.env.IMAGE_COMPRESS_RATIO;\n  }\n});\n","Meteor.startup(() => {\n  if (process.env.HEADER_LOGIN_ID) {\n    Meteor.settings.public.attachmentsUploadMaxSize   = process.env.ATTACHMENTS_UPLOAD_MAX_SIZE;\n    Meteor.settings.public.attachmentsUploadMimeTypes = process.env.ATTACHMENTS_UPLOAD_MIME_TYPES;\n    Meteor.settings.public.avatarsUploadMaxSize       = process.env.AVATARS_UPLOAD_MAX_SIZE;\n    Meteor.settings.public.avatarsUploadMimeTypes     = process.env.AVATARS_UPLOAD_MIME_TYPES;\n  }\n});\n","import fs from 'fs';\nimport path from 'path';\nimport { TAPi18n } from '/imports/i18n';\nimport AccountSettings from '../models/accountSettings';\nimport TableVisibilityModeSettings from '../models/tableVisibilityModeSettings';\nimport Actions from '../models/actions';\nimport Activities from '../models/activities';\nimport Announcements from '../models/announcements';\nimport Attachments from '../models/attachments';\n//import AttachmentsOld from '../models/attachments_old';\nimport Avatars from '../models/avatars';\n//import AvatarsOld from '../models/avatars_old';\nimport Boards from '../models/boards';\nimport CardComments from '../models/cardComments';\nimport Cards from '../models/cards';\nimport ChecklistItems from '../models/checklistItems';\nimport Checklists from '../models/checklists';\nimport CustomFields from '../models/customFields';\nimport Integrations from '../models/integrations';\nimport InvitationCodes from '../models/invitationCodes';\nimport Lists from '../models/lists';\nimport Rules from '../models/rules';\nimport Settings from '../models/settings';\nimport Swimlanes from '../models/swimlanes';\nimport Triggers from '../models/triggers';\nimport UnsavedEdits from '../models/unsavedEdits';\nimport Users from '../models/users';\n\n// Anytime you change the schema of one of the collection in a non-backward\n// compatible way you have to write a migration in this file using the following\n// API:\n//\n//   Migrations.add(name, migrationCallback, optionalOrder);\n\n// Note that we have extra migrations defined in `sandstorm.js` that are\n// exclusive to Sandstorm and shouldn’t be executed in the general case.\n// XXX I guess if we had ES6 modules we could\n// `import { isSandstorm } from sandstorm.js` and define the migration here as\n// well, but for now I want to avoid definied too many globals.\n\n// In the context of migration functions we don't want to validate database\n// mutation queries against the current (ie, latest) collection schema. Doing\n// that would work at the time we write the migration but would break in the\n// future when we'll update again the concerned collection schema.\n//\n// To prevent this bug we always have to disable the schema validation and\n// argument transformations. We generally use the shorthandlers defined below.\nconst noValidate = {\n  validate: false,\n  filter: false,\n  autoConvert: false,\n  removeEmptyStrings: false,\n  getAutoValues: false,\n};\nconst noValidateMulti = { ...noValidate, multi: true };\n\nMigrations.add('board-background-color', () => {\n  const defaultColor = '#16A085';\n  Boards.update(\n    {\n      background: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        background: {\n          type: 'color',\n          color: defaultColor,\n        },\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-cardcounterlist-allowed', () => {\n  Boards.update(\n    {\n      allowsCardCounterList: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsCardCounterList: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\n/*\nMigrations.add('add-boardmemberlist-allowed', () => {\n  Boards.update(\n    {\n      allowsBoardMemberList: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsBoardMemberList: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n*/\n\nMigrations.add('lowercase-board-permission', () => {\n  ['Public', 'Private'].forEach(permission => {\n    Boards.update(\n      { permission },\n      { $set: { permission: permission.toLowerCase() } },\n      noValidateMulti,\n    );\n  });\n});\n\n/*\n// Security migration: see https://github.com/wekan/wekan/issues/99\nMigrations.add('change-attachments-type-for-non-images', () => {\n  const newTypeForNonImage = 'application/octet-stream';\n  Attachments.find().forEach(file => {\n    if (!file.isImage()) {\n      Attachments.update(\n        file._id,\n        {\n          $set: {\n            'original.type': newTypeForNonImage,\n            'copies.attachments.type': newTypeForNonImage,\n          },\n        },\n        noValidate,\n      );\n    }\n  });\n});\n\nMigrations.add('card-covers', () => {\n  Cards.find().forEach(card => {\n    const cover = Attachments.findOne({ cardId: card._id, cover: true });\n    if (cover) {\n      Cards.update(card._id, { $set: { coverId: cover._id } }, noValidate);\n    }\n  });\n  Attachments.update({}, { $unset: { cover: '' } }, noValidateMulti);\n});\n\n*/\n\nMigrations.add('use-css-class-for-boards-colors', () => {\n  const associationTable = {\n    '#27AE60': 'nephritis',\n    '#C0392B': 'pomegranate',\n    '#2980B9': 'belize',\n    '#8E44AD': 'wisteria',\n    '#2C3E50': 'midnight',\n    '#E67E22': 'pumpkin',\n    '#CD5A91': 'moderatepink',\n    '#00AECC': 'strongcyan',\n    '#4BBF6B': 'limegreen',\n    '#2C3E51': 'dark',\n    '#27AE61': 'relax',\n    '#568BA2': 'corteza',\n    '#499BEA': 'clearblue',\n    '#596557': 'natural',\n    '#2A80B8': 'modern',\n    '#2a2a2a': 'moderndark',\n    '#222222': 'exodark',\n    '#0A0A14': 'cleandark',\n    '#FFFFFF': 'cleanlight',\n  };\n  Boards.find().forEach(board => {\n    const oldBoardColor = board.background.color;\n    const newBoardColor = associationTable[oldBoardColor];\n    Boards.update(\n      board._id,\n      {\n        $set: { color: newBoardColor },\n        $unset: { background: '' },\n      },\n      noValidate,\n    );\n  });\n});\n\nMigrations.add('denormalize-star-number-per-board', () => {\n  Boards.find().forEach(board => {\n    const nStars = Users.find({ 'profile.starredBoards': board._id }).count();\n    Boards.update(board._id, { $set: { stars: nStars } }, noValidate);\n  });\n});\n\n// We want to keep a trace of former members so we can efficiently publish their\n// infos in the general board publication.\nMigrations.add('add-member-isactive-field', () => {\n  Boards.find({}, { fields: { members: 1 } }).forEach(board => {\n    const allUsersWithSomeActivity = _.chain(\n      Activities.find(\n        { boardId: board._id },\n        { fields: { userId: 1 } },\n      ).fetch(),\n    )\n      .pluck('userId')\n      .uniq()\n      .value();\n    const currentUsers = _.pluck(board.members, 'userId');\n    const formerUsers = _.difference(allUsersWithSomeActivity, currentUsers);\n\n    const newMemberSet = [];\n    board.members.forEach(member => {\n      member.isActive = true;\n      newMemberSet.push(member);\n    });\n    formerUsers.forEach(userId => {\n      newMemberSet.push({\n        userId,\n        isAdmin: false,\n        isActive: false,\n      });\n    });\n    Boards.update(board._id, { $set: { members: newMemberSet } }, noValidate);\n  });\n});\n\nMigrations.add('add-sort-checklists', () => {\n  Checklists.find().forEach((checklist, index) => {\n    if (!checklist.hasOwnProperty('sort')) {\n      Checklists.direct.update(\n        checklist._id,\n        { $set: { sort: index } },\n        noValidate,\n      );\n    }\n    checklist.items.forEach((item, index) => {\n      if (!item.hasOwnProperty('sort')) {\n        Checklists.direct.update(\n          { _id: checklist._id, 'items._id': item._id },\n          { $set: { 'items.$.sort': index } },\n          noValidate,\n        );\n      }\n    });\n  });\n});\n\nMigrations.add('add-swimlanes', () => {\n  Boards.find().forEach(board => {\n    const swimlaneId = board.getDefaultSwimline()._id;\n    Cards.find({ boardId: board._id }).forEach(card => {\n      if (!card.hasOwnProperty('swimlaneId')) {\n        Cards.direct.update(\n          { _id: card._id },\n          { $set: { swimlaneId } },\n          noValidate,\n        );\n      }\n    });\n  });\n});\n\nMigrations.add('add-views', () => {\n  Boards.find().forEach(board => {\n    if (!board.hasOwnProperty('view')) {\n      Boards.direct.update(\n        { _id: board._id },\n        { $set: { view: 'board-view-swimlanes' } },\n        noValidate,\n      );\n    }\n  });\n});\n\nMigrations.add('add-checklist-items', () => {\n  Checklists.find().forEach(checklist => {\n    // Create new items\n    _.sortBy(checklist.items, 'sort').forEach((item, index) => {\n      ChecklistItems.direct.insert({\n        title: item.title ? item.title : 'Checklist',\n        sort: index,\n        isFinished: item.isFinished,\n        checklistId: checklist._id,\n        cardId: checklist.cardId,\n      });\n    });\n\n    // Delete old ones\n    Checklists.direct.update(\n      { _id: checklist._id },\n      { $unset: { items: 1 } },\n      noValidate,\n    );\n  });\n});\n\nMigrations.add('add-card-types', () => {\n  Cards.find().forEach(card => {\n    Cards.direct.update(\n      { _id: card._id },\n      {\n        $set: {\n          type: 'cardType-card',\n          linkedId: null,\n        },\n      },\n      noValidate,\n    );\n  });\n});\n\nMigrations.add('add-custom-fields-to-cards', () => {\n  Cards.update(\n    {\n      customFields: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        customFields: [],\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-requester-field', () => {\n  Cards.update(\n    {\n      requestedBy: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        requestedBy: '',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-assigner-field', () => {\n  Cards.update(\n    {\n      assignedBy: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        assignedBy: '',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-parent-field-to-cards', () => {\n  Cards.update(\n    {\n      parentId: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        parentId: '',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-subtasks-boards', () => {\n  Boards.update(\n    {\n      subtasksDefaultBoardId: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        subtasksDefaultBoardId: null,\n        subtasksDefaultListId: null,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-subtasks-sort', () => {\n  Boards.update(\n    {\n      subtaskSort: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        subtaskSort: -1,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-subtasks-allowed', () => {\n  Boards.update(\n    {\n      allowsSubtasks: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsSubtasks: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-subtasks-allowed', () => {\n  Boards.update(\n    {\n      presentParentTask: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        presentParentTask: 'no-parent',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-authenticationMethod', () => {\n  Users.update(\n    {\n      authenticationMethod: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        authenticationMethod: 'password',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('remove-tag', () => {\n  Users.update(\n    {},\n    {\n      $unset: {\n        'profile.tags': 1,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('remove-customFields-references-broken', () => {\n  Cards.update(\n    { 'customFields.$value': null },\n    {\n      $pull: {\n        customFields: { value: null },\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-product-name', () => {\n  Settings.update(\n    {\n      productName: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        productName: '',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-hide-logo', () => {\n  Settings.update(\n    {\n      hideLogo: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        hideLogo: false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-hide-card-counter-list', () => {\n  Settings.update(\n    {\n      hideCardCounterList: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        hideCardCounterList: false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-hide-board-member-list', () => {\n  Settings.update(\n    {\n      hideBoardMemberList: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        hideBoardMemberList: false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-displayAuthenticationMethod', () => {\n  Settings.update(\n    {\n      displayAuthenticationMethod: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        displayAuthenticationMethod: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-defaultAuthenticationMethod', () => {\n  Settings.update(\n    {\n      defaultAuthenticationMethod: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        defaultAuthenticationMethod: 'password',\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-templates', () => {\n  Boards.update(\n    {\n      type: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        type: 'board',\n      },\n    },\n    noValidateMulti,\n  );\n  Swimlanes.update(\n    {\n      type: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        type: 'swimlane',\n      },\n    },\n    noValidateMulti,\n  );\n  Lists.update(\n    {\n      type: {\n        $exists: false,\n      },\n      swimlaneId: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        type: 'list',\n        swimlaneId: '',\n      },\n    },\n    noValidateMulti,\n  );\n  Users.find({\n    'profile.templatesBoardId': {\n      $exists: false,\n    },\n  }).forEach(user => {\n    // Create board and swimlanes\n    Boards.insert(\n      {\n        title: TAPi18n.__('templates'),\n        permission: 'private',\n        type: 'template-container',\n        members: [\n          {\n            userId: user._id,\n            isAdmin: true,\n            isActive: true,\n            isNoComments: false,\n            isCommentOnly: false,\n          },\n        ],\n      },\n      (err, boardId) => {\n        // Insert the reference to our templates board\n        Users.update(user._id, {\n          $set: { 'profile.templatesBoardId': boardId },\n        });\n\n        // Insert the card templates swimlane\n        Swimlanes.insert(\n          {\n            title: TAPi18n.__('card-templates-swimlane'),\n            boardId,\n            sort: 1,\n            type: 'template-container',\n          },\n          (err, swimlaneId) => {\n            // Insert the reference to out card templates swimlane\n            Users.update(user._id, {\n              $set: { 'profile.cardTemplatesSwimlaneId': swimlaneId },\n            });\n          },\n        );\n\n        // Insert the list templates swimlane\n        Swimlanes.insert(\n          {\n            title: TAPi18n.__('list-templates-swimlane'),\n            boardId,\n            sort: 2,\n            type: 'template-container',\n          },\n          (err, swimlaneId) => {\n            // Insert the reference to out list templates swimlane\n            Users.update(user._id, {\n              $set: { 'profile.listTemplatesSwimlaneId': swimlaneId },\n            });\n          },\n        );\n\n        // Insert the board templates swimlane\n        Swimlanes.insert(\n          {\n            title: TAPi18n.__('board-templates-swimlane'),\n            boardId,\n            sort: 3,\n            type: 'template-container',\n          },\n          (err, swimlaneId) => {\n            // Insert the reference to out board templates swimlane\n            Users.update(user._id, {\n              $set: { 'profile.boardTemplatesSwimlaneId': swimlaneId },\n            });\n          },\n        );\n      },\n    );\n  });\n});\n\nMigrations.add('fix-circular-reference_', () => {\n  Cards.find().forEach(card => {\n    if (card.parentId === card._id) {\n      Cards.update(card._id, { $set: { parentId: '' } }, noValidateMulti);\n    }\n  });\n});\n\nMigrations.add('mutate-boardIds-in-customfields', () => {\n  CustomFields.find().forEach(cf => {\n    CustomFields.update(\n      cf,\n      {\n        $set: {\n          boardIds: [cf.boardId],\n        },\n        $unset: {\n          boardId: '',\n        },\n      },\n      noValidateMulti,\n    );\n  });\n});\n\nconst modifiedAtTables = [\n  AccountSettings,\n  TableVisibilityModeSettings,\n  Actions,\n  Activities,\n  Announcements,\n  Boards,\n  CardComments,\n  Cards,\n  ChecklistItems,\n  Checklists,\n  CustomFields,\n  Integrations,\n  InvitationCodes,\n  Lists,\n  Rules,\n  Settings,\n  Swimlanes,\n  Triggers,\n  UnsavedEdits,\n  Users,\n];\n\nMigrations.add('add-missing-created-and-modified', () => {\n  Promise.all(\n    modifiedAtTables.map(db =>\n      db\n        .rawCollection()\n        .updateMany(\n          { modifiedAt: { $exists: false } },\n          { $set: { modifiedAt: new Date() } },\n          { multi: true },\n        )\n        .then(() =>\n          db\n            .rawCollection()\n            .updateMany(\n              { createdAt: { $exists: false } },\n              { $set: { createdAt: new Date() } },\n              { multi: true },\n            ),\n        ),\n    ),\n  )\n    .then(() => {\n      // eslint-disable-next-line no-console\n      console.info('Successfully added createdAt and updatedAt to all tables');\n    })\n    .catch(e => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    });\n});\n\nMigrations.add('fix-incorrect-dates', () => {\n  const tables = [\n    AccountSettings,\n    TableVisibilityModeSettings,\n    Actions,\n    Activities,\n    Announcements,\n    Boards,\n    CardComments,\n    Cards,\n    ChecklistItems,\n    Checklists,\n    CustomFields,\n    Integrations,\n    InvitationCodes,\n    Lists,\n    Rules,\n    Settings,\n    Swimlanes,\n    Triggers,\n    UnsavedEdits,\n  ];\n\n  // Dates were previously created with Date.now() which is a number, not a date\n  tables.forEach(t =>\n    t\n      .rawCollection()\n      .find({ $or: [{ createdAt: { $type: 1 } }, { updatedAt: { $type: 1 } }] })\n      .forEach(({ _id, createdAt, updatedAt }) => {\n        t.rawCollection().updateMany(\n          { _id },\n          {\n            $set: {\n              createdAt: new Date(createdAt),\n              updatedAt: new Date(updatedAt),\n            },\n          },\n        );\n      }),\n  );\n});\n\nMigrations.add('add-assignee', () => {\n  Cards.update(\n    {\n      assignees: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        assignees: [],\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-profile-showDesktopDragHandles', () => {\n  Users.update(\n    {\n      'profile.showDesktopDragHandles': {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        'profile.showDesktopDragHandles': false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-profile-hiddenMinicardLabelText', () => {\n  Users.update(\n    {\n      'profile.hiddenMinicardLabelText': {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        'profile.hiddenMinicardLabelText': false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-receiveddate-allowed', () => {\n  Boards.update(\n    {\n      allowsReceivedDate: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsReceivedDate: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-startdate-allowed', () => {\n  Boards.update(\n    {\n      allowsStartDate: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsStartDate: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-duedate-allowed', () => {\n  Boards.update(\n    {\n      allowsDueDate: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsDueDate: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-enddate-allowed', () => {\n  Boards.update(\n    {\n      allowsEndDate: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsEndDate: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-members-allowed', () => {\n  Boards.update(\n    {\n      allowsMembers: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsMembers: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-assignee-allowed', () => {\n  Boards.update(\n    {\n      allowsAssignee: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsAssignee: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-labels-allowed', () => {\n  Boards.update(\n    {\n      allowsLabels: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsLabels: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-checklists-allowed', () => {\n  Boards.update(\n    {\n      allowsChecklists: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsChecklists: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-attachments-allowed', () => {\n  Boards.update(\n    {\n      allowsAttachments: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsAttachments: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-comments-allowed', () => {\n  Boards.update(\n    {\n      allowsComments: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsComments: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-assigned-by-allowed', () => {\n  Boards.update(\n    {\n      allowsAssignedBy: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsAssignedBy: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-requested-by-allowed', () => {\n  Boards.update(\n    {\n      allowsRequestedBy: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsRequestedBy: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-activities-allowed', () => {\n  Boards.update(\n    {\n      allowsActivities: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsActivities: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-description-title-allowed', () => {\n  Boards.update(\n    {\n      allowsDescriptionTitle: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsDescriptionTitle: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-description-text-allowed', () => {\n  Boards.update(\n    {\n      allowsDescriptionText: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsDescriptionText: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-description-text-allowed-on-minicard', () => {\n  Boards.update(\n    {\n      allowsDescriptionTextOnMinicard: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsDescriptionTextOnMinicard: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-sort-field-to-boards', () => {\n  Boards.find().forEach((board, index) => {\n    if (!board.hasOwnProperty('sort')) {\n      Boards.direct.update(board._id, { $set: { sort: index } }, noValidate);\n    }\n  });\n});\n\nMigrations.add('add-default-profile-view', () => {\n  Users.find().forEach(user => {\n    if (!user.hasOwnProperty('profile.boardView')) {\n      // Set default view\n      Users.direct.update(\n        { _id: user._id },\n        { $set: { 'profile.boardView': 'board-view-swimlanes' } },\n        noValidate,\n      );\n    }\n  });\n});\n\nMigrations.add('add-hide-logo-by-default', () => {\n  Settings.update(\n    {\n      hideLogo: {\n        hideLogo: false,\n      },\n    },\n    {\n      $set: {\n        hideLogo: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-hide-card-counter-list-by-default', () => {\n  Settings.update(\n    {\n      hideCardCounterList: {\n        hideCardCounterList: false,\n      },\n    },\n    {\n      $set: {\n        hideCardCounterList: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-hide-board-member-list-by-default', () => {\n  Settings.update(\n    {\n      hideBoardMemberList: {\n        hideBoardMember: false,\n      },\n    },\n    {\n      $set: {\n        hideBoardMemberList: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('add-card-number-allowed', () => {\n  Boards.update(\n    {\n      allowsCardNumber: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsCardNumber: false,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('assign-boardwise-card-numbers', () => {\n  Boards.find().forEach(board => {\n    let nextCardNumber = board.getNextCardNumber();\n    Cards.find(\n      {\n        boardId: board._id,\n        cardNumber: {\n          $exists: false\n        }\n      },\n      {\n        sort: { createdAt: 1 }\n      }\n    ).forEach(card => {\n      Cards.update(\n        card._id,\n        { $set: { cardNumber: nextCardNumber } },\n        noValidate);\n      nextCardNumber++;\n    });\n  })\n});\n\nMigrations.add('add-card-details-show-lists', () => {\n  Boards.update(\n    {\n      allowsShowLists: {\n        $exists: false,\n      },\n    },\n    {\n      $set: {\n        allowsShowLists: true,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\n/*\nMigrations.add('migrate-attachments-collectionFS-to-ostrioFiles', () => {\n  Meteor.settings.public.ostrioFilesMigrationInProgress = \"true\";\n  AttachmentsOld.find().forEach(function(fileObj) {\n    const newFileName = fileObj.name();\n    const storagePath = Attachments.storagePath({});\n    // OLD:\n    // const filePath = path.join(storagePath, `${fileObj._id}-${newFileName}`);\n    // NEW: Save file only with filename of ObjectID, not including filename.\n    // Fixes https://github.com/wekan/wekan/issues/4416#issuecomment-1510517168\n    //const filePath = path.join(storagePath, `${fileObj._id}`);\n    const filePath = path.join(storagePath, `${fileObj._id}-${newFileName}`);\n\n    // This is \"example\" variable, change it to the userId that you might be using.\n    const userId = fileObj.userId;\n\n    const fileType = fileObj.type();\n    const fileSize = fileObj.size();\n    const fileId = fileObj._id;\n\n    const readStream = fileObj.createReadStream('attachments');\n    const writeStream = fs.createWriteStream(filePath);\n\n    writeStream.on('error', function(err) {\n      console.log('Writing error: ', err, filePath);\n    });\n\n    // Once we have a file, then upload it to our new data storage\n    readStream.on('end', () => {\n      console.log('Ended: ', filePath);\n      // UserFiles is the new Meteor-Files/FilesCollection collection instance\n\n      Attachments.addFile(\n        filePath,\n        {\n          fileName: newFileName,\n          type: fileType,\n          meta: {\n            boardId: fileObj.boardId,\n            cardId: fileObj.cardId,\n            listId: fileObj.listId,\n            swimlaneId: fileObj.swimlaneId,\n            uploadedBeforeMigration: fileObj.uploadedAt,\n            migrationTime: new Date(),\n            copies: fileObj.copies,\n            source: 'import'\n          },\n          userId,\n          size: fileSize,\n          fileId,\n        },\n        (err, fileRef) => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('File Inserted: ', fileRef._id);\n            // Set the userId again\n            Attachments.update({ _id: fileRef._id }, { $set: { userId } });\n            fileObj.remove();\n          }\n        },\n        true,\n      ); // proceedAfterUpload\n    });\n\n    readStream.on('error', error => {\n      console.log('Error: ', filePath, error);\n    });\n\n    readStream.pipe(writeStream);\n  });\n  Meteor.settings.public.ostrioFilesMigrationInProgress = \"false\";\n});\n\nMigrations.add('migrate-avatars-collectionFS-to-ostrioFiles', () => {\n  Meteor.settings.public.ostrioFilesMigrationInProgress = \"true\";\n  AvatarsOld.find().forEach(function(fileObj) {\n    const newFileName = fileObj.name();\n    const storagePath = Avatars.storagePath({});\n    // OLD:\n    // const filePath = path.join(storagePath, `${fileObj._id}-${newFileName}`);\n    // NEW: Save file only with filename of ObjectID, not including filename.\n    // Fixes https://github.com/wekan/wekan/issues/4416#issuecomment-1510517168\n    //const filePath = path.join(storagePath, `${fileObj._id}`);\n    const filePath = path.join(storagePath, `${fileObj._id}-${newFileName}`);\n\n    // This is \"example\" variable, change it to the userId that you might be using.\n    const userId = fileObj.userId;\n\n    const fileType = fileObj.type();\n    const fileSize = fileObj.size();\n    const fileId = fileObj._id;\n\n    const readStream = fileObj.createReadStream('avatars');\n    const writeStream = fs.createWriteStream(filePath);\n\n    writeStream.on('error', function(err) {\n      console.log('Writing error: ', err, filePath);\n    });\n\n    // Once we have a file, then upload it to our new data storage\n    readStream.on('end', () => {\n      console.log('Ended: ', filePath);\n      // UserFiles is the new Meteor-Files/FilesCollection collection instance\n\n      Avatars.addFile(\n        filePath,\n        {\n          fileName: newFileName,\n          type: fileType,\n          meta: {\n            boardId: fileObj.boardId,\n            cardId: fileObj.cardId,\n            listId: fileObj.listId,\n            swimlaneId: fileObj.swimlaneId,\n          },\n          userId,\n          size: fileSize,\n          fileId,\n        },\n        (err, fileRef) => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('File Inserted: ', newFileName, fileRef._id);\n            // Set the userId again\n            Avatars.update({ _id: fileRef._id }, { $set: { userId } });\n            Users.find().forEach(user => {\n              const old_url = fileObj.url();\n              new_url = Avatars.findOne({ _id: fileRef._id }).link(\n                'original',\n                '/',\n              );\n              if (user.profile.avatarUrl !== undefined) {\n                if (user.profile.avatarUrl.startsWith(old_url)) {\n                  // Set avatar url to new url\n                  Users.direct.update(\n                    { _id: user._id },\n                    { $set: { 'profile.avatarUrl': new_url } },\n                    noValidate,\n                  );\n                  console.log('User avatar updated: ', user._id, new_url);\n                }\n              }\n            });\n            fileObj.remove();\n          }\n        },\n        true, // proceedAfterUpload\n      );\n    });\n\n    readStream.on('error', error => {\n      console.log('Error: ', filePath, error);\n    });\n\n    readStream.pipe(writeStream);\n  });\n  Meteor.settings.public.ostrioFilesMigrationInProgress = \"false\";\n});\n*/\n\nMigrations.add('migrate-attachment-drop-index-cardId', () => {\n  try {\n    Attachments.collection._dropIndex({'cardId': 1});\n  } catch (error) {\n  }\n});\n\nMigrations.add('migrate-attachment-migration-fix-source-import', () => {\n  // there was an error at first versions, so source was import, instead of import\n  Attachments.update(\n    {\"meta.source\":\"import,\"},\n    {$set:{\"meta.source\":\"import\"}},\n    noValidateMulti\n  );\n});\n\n/*\nMigrations.add('attachment-cardCopy-fix-boardId-etc', () => {\n  Attachments.find( {\"meta.source\": \"copy\"} ).forEach(_attachment => {\n    const cardId = _attachment.meta.cardId;\n    const card = Cards.findOne(cardId);\n    if (card.boardId !== undefined && card.listId !== undefined && card.swimlaneId !== undefined) {\n      console.log(\"update attachment id: \", _attachment._id);\n      Attachments.update(_attachment._id, {\n        $set: {\n          \"meta.boardId\": card.boardId,\n          \"meta.listId\": card.listId,\n          \"meta.swimlaneId\": card.swimlaneId,\n        }\n      });\n    }\n  });\n});\n*/\n\nMigrations.add('remove-unused-planning-poker', () => {\n  Cards.update(\n    {\n      \"poker.question\": false,\n    },\n    {\n      $unset: {\n        \"poker\": 1,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('remove-user-profile-hiddenSystemMessages', () => {\n  Users.update(\n    {\n      \"profile.hiddenSystemMessages\": {\n        $exists: true,\n      },\n    },\n    {\n      $unset: {\n        \"profile.hiddenSystemMessages\": 1,\n      },\n    },\n    noValidateMulti,\n  );\n});\n\nMigrations.add('remove-user-profile-hideCheckedItems', () => {\n  Users.update(\n    {\n      \"profile.hideCheckedItems\": {\n        $exists: true,\n      },\n    },\n    {\n      $unset: {\n        \"profile.hideCheckedItems\": 1,\n      },\n    },\n    noValidateMulti,\n  );\n});\n","//import { BrowserPolicy } from 'meteor/browser-policy-common';\n\nMeteor.startup(() => {\n/*\n  // Default allowed\n  BrowserPolicy.content.allowInlineScripts();\n  BrowserPolicy.content.allowEval();\n  BrowserPolicy.content.allowInlineStyles();\n  BrowserPolicy.content.allowOriginForAll('*');\n  // Allow all images from anywhere\n  BrowserPolicy.content.allowImageOrigin('*');\n  BrowserPolicy.content.allowDataUrlForAll();\n*/\n\n  if (process.env.BROWSER_POLICY_ENABLED === 'true') {\n    // Trusted URL that can embed Wekan in iFrame.\n    const trusted = process.env.TRUSTED_URL;\n    ////BrowserPolicy.framing.disallow();\n    //Allow inline scripts, otherwise there is errors in browser/inspect/console\n    //BrowserPolicy.content.disallowInlineScripts();\n    //BrowserPolicy.content.disallowEval();\n    //BrowserPolicy.content.allowInlineStyles();\n    //BrowserPolicy.content.allowFontDataUrl();\n    ////BrowserPolicy.framing.restrictToOrigin(trusted);\n    //BrowserPolicy.content.allowScriptOrigin(trusted);\n  } else {\n    // Disable browser policy and allow all framing and including.\n    // Use only at internal LAN, not at Internet.\n    ////BrowserPolicy.framing.allowAll();\n  }\n\n\n  // If Matomo URL is set, allow it.\n  const matomoUrl = process.env.MATOMO_ADDRESS;\n  if (matomoUrl) {\n    //BrowserPolicy.content.allowScriptOrigin(matomoUrl);\n    //BrowserPolicy.content.allowImageOrigin(matomoUrl);\n  }\n});\n","Meteor.startup(() => {\n  const RCCE = process.env.RICHER_CARD_COMMENT_EDITOR;\n  if (RCCE) {\n    Meteor.settings.public.RICHER_CARD_COMMENT_EDITOR = RCCE !== 'false';\n  }\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\n\nRulesHelper = {\n  executeRules(activity) {\n    const matchingRules = this.findMatchingRules(activity);\n    for (let i = 0; i < matchingRules.length; i++) {\n      const action = matchingRules[i].getAction();\n      if (action !== undefined) {\n        this.performAction(activity, action);\n      }\n    }\n  },\n  findMatchingRules(activity) {\n    const activityType = activity.activityType;\n    if (TriggersDef[activityType] === undefined) {\n      return [];\n    }\n    const matchingFields = TriggersDef[activityType].matchingFields;\n    const matchingMap = this.buildMatchingFieldsMap(activity, matchingFields);\n    const matchingTriggers = ReactiveCache.getTriggers(matchingMap);\n    const matchingRules = [];\n    matchingTriggers.forEach(function(trigger) {\n      const rule = trigger.getRule();\n      // Check that for some unknown reason there are some leftover triggers\n      // not connected to any rules\n      if (rule !== undefined) {\n        matchingRules.push(trigger.getRule());\n      }\n    });\n    return matchingRules;\n  },\n  buildMatchingFieldsMap(activity, matchingFields) {\n    const matchingMap = { activityType: activity.activityType };\n    matchingFields.forEach(field => {\n      // Creating a matching map with the actual field of the activity\n      // and with the wildcard (for example: trigger when a card is added\n      // in any [*] board\n      let value = activity[field];\n      if (field === 'oldListName') {\n        const oldList = ReactiveCache.getList(activity.oldListId);\n        if (oldList) {\n          value = oldList.title;\n        }\n      } else if (field === 'oldSwimlaneName') {\n        const oldSwimlane = ReactiveCache.getSwimlane(activity.oldSwimlaneId);\n        if (oldSwimlane) {\n          value = oldSwimlane.title;\n        }\n      }\n      let matchesList = [value, '*'];\n      if ((field === 'cardTitle') && (value !== undefined)) {\n        matchesList = value.split(/\\W/).concat(matchesList);\n      }\n      matchingMap[field] = {\n        $in: matchesList,\n      };\n    });\n    return matchingMap;\n  },\n  performAction(activity, action) {\n    const card = ReactiveCache.getCard(activity.cardId);\n    const boardId = activity.boardId;\n    if (\n      action.actionType === 'moveCardToTop' ||\n      action.actionType === 'moveCardToBottom'\n    ) {\n      let list;\n      let listId;\n      if (action.listName === '*') {\n        list = card.list();\n        if (boardId !== action.boardId) {\n          list = ReactiveCache.getList({ title: list.title, boardId: action.boardId });\n        }\n      } else {\n        list = ReactiveCache.getList({\n          title: action.listName,\n          boardId: action.boardId,\n        });\n      }\n      if (list === undefined) {\n        listId = '';\n      } else {\n        listId = list._id;\n      }\n\n      let swimlane;\n      let swimlaneId;\n      if (action.swimlaneName === '*') {\n        swimlane = ReactiveCache.getSwimlane(card.swimlaneId);\n        if (boardId !== action.boardId) {\n          swimlane = ReactiveCache.getSwimlane({\n            title: swimlane.title,\n            boardId: action.boardId,\n          });\n        }\n      } else {\n        swimlane = ReactiveCache.getSwimlane({\n          title: action.swimlaneName,\n          boardId: action.boardId,\n        });\n      }\n      if (swimlane === undefined) {\n        swimlaneId = ReactiveCache.getSwimlane({\n          title: 'Default',\n          boardId: action.boardId,\n        })._id;\n      } else {\n        swimlaneId = swimlane._id;\n      }\n\n      if (action.actionType === 'moveCardToTop') {\n        const minOrder = _.min(\n          list.cardsUnfiltered(swimlaneId).map(c => c.sort),\n        );\n        card.move(action.boardId, swimlaneId, listId, minOrder - 1);\n      } else {\n        const maxOrder = _.max(\n          list.cardsUnfiltered(swimlaneId).map(c => c.sort),\n        );\n        card.move(action.boardId, swimlaneId, listId, maxOrder + 1);\n      }\n    }\n    if (action.actionType === 'sendEmail') {\n      const to = action.emailTo;\n      const text = action.emailMsg || '';\n      const subject = action.emailSubject || '';\n      try {\n        // Try to detect the recipient's language preference if it's a Wekan user\n        // Otherwise, use the default language for the rule-triggered emails\n        let recipientUser = null;\n        let recipientLang = TAPi18n.getLanguage() || 'en';\n\n        // Check if recipient is a Wekan user to get their language\n        if (to && to.includes('@')) {\n          recipientUser = ReactiveCache.getUser({ 'emails.address': to.toLowerCase() });\n          if (recipientUser && typeof recipientUser.getLanguage === 'function') {\n            recipientLang = recipientUser.getLanguage();\n          }\n        }\n\n        // Use EmailLocalization if available\n        if (typeof EmailLocalization !== 'undefined') {\n          EmailLocalization.sendEmail({\n            to,\n            from: Accounts.emailTemplates.from,\n            subject,\n            text,\n            language: recipientLang,\n            userId: recipientUser ? recipientUser._id : null\n          });\n        } else {\n          // Fallback to standard Email.send\n          Email.send({\n            to,\n            from: Accounts.emailTemplates.from,\n            subject,\n            text,\n          });\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        return;\n      }\n    }\n\n    if (action.actionType === 'setDate') {\n      try {\n        const currentDateTime = new Date();\n        switch (action.dateField) {\n          case 'startAt': {\n            const resStart = card.getStart();\n            if (typeof resStart === 'undefined') {\n              card.setStart(currentDateTime);\n            }\n            break;\n          }\n          case 'endAt': {\n            const resEnd = card.getEnd();\n            if (typeof resEnd === 'undefined') {\n              card.setEnd(currentDateTime);\n            }\n            break;\n          }\n          case 'dueAt': {\n            const resDue = card.getDue();\n            if (typeof resDue === 'undefined') {\n              card.setDue(currentDateTime);\n            }\n            break;\n          }\n          case 'receivedAt': {\n            const resReceived = card.getReceived();\n            if (typeof resReceived === 'undefined') {\n              card.setReceived(currentDateTime);\n            }\n            break;\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        return;\n      }\n    }\n\n    if (action.actionType === 'updateDate') {\n      const currentDateTimeUpdate = new Date();\n      switch (action.dateField) {\n        case 'startAt': {\n          card.setStart(currentDateTimeUpdate);\n          break;\n        }\n        case 'endAt': {\n          card.setEnd(currentDateTimeUpdate);\n          break;\n        }\n        case 'dueAt': {\n          card.setDue(currentDateTimeUpdate);\n          break;\n        }\n        case 'receivedAt': {\n          card.setReceived(currentDateTimeUpdate);\n          break;\n        }\n      }\n    }\n\n    if (action.actionType === 'removeDate') {\n      switch (action.dateField) {\n        case 'startAt': {\n          card.unsetStart();\n          break;\n        }\n        case 'endAt': {\n          card.unsetEnd();\n          break;\n        }\n        case 'dueAt': {\n          card.unsetDue();\n          break;\n        }\n        case 'receivedAt': {\n          card.unsetReceived();\n          break;\n        }\n      }\n    }\n    if (action.actionType === 'archive') {\n      card.archive();\n    }\n    if (action.actionType === 'unarchive') {\n      card.restore();\n    }\n    if (action.actionType === 'setColor') {\n      card.setColor(action.selectedColor);\n    }\n    if (action.actionType === 'addLabel') {\n      card.addLabel(action.labelId);\n    }\n    if (action.actionType === 'removeLabel') {\n      card.removeLabel(action.labelId);\n    }\n    if (action.actionType === 'addMember') {\n      const memberId = ReactiveCache.getUser({ username: action.username })._id;\n      card.assignMember(memberId);\n    }\n    if (action.actionType === 'removeMember') {\n      if (action.username === '*') {\n        const members = card.members;\n        for (let i = 0; i < members.length; i++) {\n          card.unassignMember(members[i]);\n        }\n      } else {\n        const memberId = ReactiveCache.getUser({ username: action.username })._id;\n        card.unassignMember(memberId);\n      }\n    }\n    if (action.actionType === 'checkAll') {\n      const checkList = ReactiveCache.getChecklist({\n        title: action.checklistName,\n        cardId: card._id,\n      });\n      checkList.checkAllItems();\n    }\n    if (action.actionType === 'uncheckAll') {\n      const checkList = ReactiveCache.getChecklist({\n        title: action.checklistName,\n        cardId: card._id,\n      });\n      checkList.uncheckAllItems();\n    }\n    if (action.actionType === 'checkItem') {\n      const checkList = ReactiveCache.getChecklist({\n        title: action.checklistName,\n        cardId: card._id,\n      });\n      const checkItem = ReactiveCache.getChecklistItem({\n        title: action.checkItemName,\n        checkListId: checkList._id,\n      });\n      checkItem.check();\n    }\n    if (action.actionType === 'uncheckItem') {\n      const checkList = ReactiveCache.getChecklist({\n        title: action.checklistName,\n        cardId: card._id,\n      });\n      const checkItem = ReactiveCache.getChecklistItem({\n        title: action.checkItemName,\n        checkListId: checkList._id,\n      });\n      checkItem.uncheck();\n    }\n    if (action.actionType === 'addChecklist') {\n      Checklists.insert({\n        title: action.checklistName,\n        cardId: card._id,\n        sort: 0,\n      });\n    }\n    if (action.actionType === 'removeChecklist') {\n      Checklists.remove({\n        title: action.checklistName,\n        cardId: card._id,\n        sort: 0,\n      });\n    }\n    if (action.actionType === 'addSwimlane') {\n      Swimlanes.insert({\n        title: action.swimlaneName,\n        boardId,\n        sort: 0,\n      });\n    }\n    if (action.actionType === 'addChecklistWithItems') {\n      const checkListId = Checklists.insert({\n        title: action.checklistName,\n        cardId: card._id,\n        sort: 0,\n      });\n      const itemsArray = action.checklistItems.split(',');\n      const checkList = ReactiveCache.getChecklist(checkListId);\n      for (let i = 0; i < itemsArray.length; i++) {\n        ChecklistItems.insert({\n          title: itemsArray[i],\n          checklistId: checkListId,\n          cardId: card._id,\n          sort: checkList.itemCount(),\n        });\n      }\n    }\n    if (action.actionType === 'createCard') {\n      const list = ReactiveCache.getList({ title: action.listName, boardId });\n      let listId = '';\n      let swimlaneId = '';\n      const swimlane = ReactiveCache.getSwimlane({\n        title: action.swimlaneName,\n        boardId,\n      });\n      if (list === undefined) {\n        listId = '';\n      } else {\n        listId = list._id;\n      }\n      if (swimlane === undefined) {\n        swimlaneId = ReactiveCache.getSwimlane({ title: 'Default', boardId })._id;\n      } else {\n        swimlaneId = swimlane._id;\n      }\n      Cards.insert({\n        title: action.cardName,\n        listId,\n        swimlaneId,\n        sort: 0,\n        boardId\n      });\n    }\n    if (action.actionType === 'linkCard') {\n      const list = ReactiveCache.getList({ title: action.listName, boardId: action.boardId });\n      const card = ReactiveCache.getCard(activity.cardId);\n      let listId = '';\n      let swimlaneId = '';\n      const swimlane = ReactiveCache.getSwimlane({\n        title: action.swimlaneName,\n        boardId: action.boardId,\n      });\n      if (list === undefined) {\n        listId = '';\n      } else {\n        listId = list._id;\n      }\n      if (swimlane === undefined) {\n        swimlaneId = ReactiveCache.getSwimlane({ title: 'Default', boardId: action.boardId })._id;\n      } else {\n        swimlaneId = swimlane._id;\n      }\n      card.link(action.boardId, swimlaneId, listId);\n    }\n  },\n};\n","Meteor.startup(() => {\n  if (process.env.SAML_PROVIDER !== '') {\n    Meteor.settings.public.SAML_PROVIDER = process.env.SAML_PROVIDER;\n  }\n});\n","Meteor.startup(() => {\n  Meteor.settings.public.WAIT_SPINNER = process.env.WAIT_SPINNER;\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { MongoInternals } from 'meteor/mongo';\n\n// Sandstorm context is detected using the METEOR_SETTINGS environment variable\n// in the package definition.\nconst isSandstorm =\n  Meteor.settings && Meteor.settings.public && Meteor.settings.public.sandstorm;\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    getStatistics() {\n      if (ReactiveCache.getCurrentUser()?.isAdmin) {\n        const os = require('os');\n        const pjson = require('/package.json');\n        const statistics = {};\n        let wekanVersion = pjson.version;\n        wekanVersion = wekanVersion.replace('v', '');\n        statistics.version = wekanVersion;\n        statistics.os = {\n          type: os.type(),\n          platform: os.platform(),\n          arch: os.arch(),\n          release: os.release(),\n          uptime: os.uptime(),\n          loadavg: os.loadavg(),\n          totalmem: os.totalmem(),\n          freemem: os.freemem(),\n          cpus: os.cpus(),\n        };\n        let nodeVersion = process.version;\n        nodeVersion = nodeVersion.replace('v', '');\n        statistics.process = {\n          nodeVersion,\n          pid: process.pid,\n          uptime: process.uptime(),\n        };\n        // Start: Show Nodejs heap stats at Standalone WeKan.\n        //\n        // Not shown at Sandstorm WeKan, because there's a bunch of machine performance data\n        // Sandstorm doesn't expose to apps to prevent side channel attacks.\n        if (!isSandstorm) {\n          const v8 = require('v8'); // Import the v8 module\n          statistics.nodeHeapStats = {\n            totalHeapSize: v8.getHeapStatistics().total_heap_size,\n            totalHeapSizeExecutable: v8.getHeapStatistics().total_heap_size_executable,\n            totalPhysicalSize: v8.getHeapStatistics().total_physical_size,\n            totalAvailableSize: v8.getHeapStatistics().total_available_size,\n            usedHeapSize: v8.getHeapStatistics().used_heap_size,\n            heapSizeLimit: v8.getHeapStatistics().heap_size_limit,\n            mallocedMemory: v8.getHeapStatistics().malloced_memory,\n            peakMallocedMemory: v8.getHeapStatistics().peak_malloced_memory,\n            doesZapGarbage: v8.getHeapStatistics().does_zap_garbage,\n            numberOfNativeContexts: v8.getHeapStatistics().number_of_native_contexts,\n            numberOfDetachedContexts: v8.getHeapStatistics().number_of_detached_contexts,\n          };\n          let memoryUsage = process.memoryUsage();\n          statistics.nodeMemoryUsage = {\n            rss: memoryUsage.rss,\n            heapTotal: memoryUsage.heapTotal,\n            heapUsed: memoryUsage.heapUsed,\n            external: memoryUsage.external,\n          };\n        }\n        // End: Show Nodejs heap stats at Standalone WeKan.\n        //\n        // Remove beginning of Meteor release text METEOR@\n        let meteorVersion = Meteor.release;\n        meteorVersion = meteorVersion.replace('METEOR@', '');\n        statistics.meteor = {\n          meteorVersion,\n        };\n        // Thanks to RocketChat for MongoDB version detection !\n        // https://github.com/RocketChat/Rocket.Chat/blob/develop/app/utils/server/functions/getMongoInfo.js\n        let mongoVersion;\n        let mongoStorageEngine;\n        let mongoOplogEnabled;\n        try {\n          const { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n          oplogEnabled = Boolean(\n            mongo._oplogHandle && mongo._oplogHandle.onOplogEntry,\n          );\n          const { version, storageEngine } = Promise.await(\n            mongo.db.command({ serverStatus: 1 }),\n          );\n          mongoVersion = version;\n          mongoStorageEngine = storageEngine.name;\n          mongoOplogEnabled = oplogEnabled;\n        } catch (e) {\n          try {\n            const { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n            const { version } = Promise.await(\n              mongo.db.command({ buildinfo: 1 }),\n            );\n            mongoVersion = version;\n            mongoStorageEngine = 'unknown';\n          } catch (e) {\n            mongoVersion = 'unknown';\n            mongoStorageEngine = 'unknown';\n          }\n        }\n        statistics.mongo = {\n          mongoVersion,\n          mongoStorageEngine,\n          mongoOplogEnabled,\n        };\n        const client = MongoInternals.defaultRemoteCollectionDriver()?.mongo?.client;\n        const sessionsCount = client?.s?.activeSessions?.size;\n        statistics.session = {\n          sessionsCount: sessionsCount,\n        };\n        return statistics;\n      } else {\n        return false;\n      }\n    },\n  });\n}\n","TriggersDef = {\n  createCard: {\n    matchingFields: [\n      'boardId',\n      'listName',\n      'userId',\n      'swimlaneName',\n      'cardTitle',\n    ],\n  },\n  moveCard: {\n    matchingFields: [\n      'boardId',\n      'listName',\n      'oldListName',\n      'userId',\n      'swimlaneName',\n      'cardTitle',\n    ],\n  },\n  archivedCard: {\n    matchingFields: ['boardId', 'userId', 'cardTitle'],\n  },\n  restoredCard: {\n    matchingFields: ['boardId', 'userId', 'cardTitle'],\n  },\n  joinMember: {\n    matchingFields: ['boardId', 'username', 'userId'],\n  },\n  unjoinMember: {\n    matchingFields: ['boardId', 'username', 'userId'],\n  },\n  addChecklist: {\n    matchingFields: ['boardId', 'checklistName', 'userId'],\n  },\n  removeChecklist: {\n    matchingFields: ['boardId', 'checklistName', 'userId'],\n  },\n  completeChecklist: {\n    matchingFields: ['boardId', 'checklistName', 'userId'],\n  },\n  uncompleteChecklist: {\n    matchingFields: ['boardId', 'checklistName', 'userId'],\n  },\n  addedChecklistItem: {\n    matchingFields: ['boardId', 'checklistItemName', 'userId'],\n  },\n  removedChecklistItem: {\n    matchingFields: ['boardId', 'checklistItemName', 'userId'],\n  },\n  checkedItem: {\n    matchingFields: ['boardId', 'checklistItemName', 'userId'],\n  },\n  uncheckedItem: {\n    matchingFields: ['boardId', 'checklistItemName', 'userId'],\n  },\n  addAttachment: {\n    matchingFields: ['boardId', 'userId'],\n  },\n  deleteAttachment: {\n    matchingFields: ['boardId', 'userId'],\n  },\n  addedLabel: {\n    matchingFields: ['boardId', 'labelId', 'userId'],\n  },\n  removedLabel: {\n    matchingFields: ['boardId', 'labelId', 'userId'],\n  },\n};\n","// Load all useraccounts translations at once\nimport { Tracker } from 'meteor/tracker';\nimport { T9n } from 'meteor/useraccounts:core';\nimport { TAPi18n } from './tap';\n\nT9n.setTracker({ Tracker });\n\nT9n.map('ar', require('meteor-accounts-t9n/build/ar').ar);\nT9n.map('ca', require('meteor-accounts-t9n/build/ca').ca);\nT9n.map('cs', require('meteor-accounts-t9n/build/cs').cs);\nT9n.map('da', require('meteor-accounts-t9n/build/da').da);\nT9n.map('de', require('meteor-accounts-t9n/build/de').de);\nT9n.map('el', require('meteor-accounts-t9n/build/el').el);\nT9n.map('en', require('meteor-accounts-t9n/build/en').en);\nT9n.map('es', require('meteor-accounts-t9n/build/es').es);\nT9n.map('es-ES', require('meteor-accounts-t9n/build/es_ES').es_ES);\nT9n.map('es-ES-formal', require('meteor-accounts-t9n/build/es_ES_formal').es_ES_formal);\nT9n.map('es-formal', require('meteor-accounts-t9n/build/es_formal').es_formal);\nT9n.map('et', require('meteor-accounts-t9n/build/et').et);\nT9n.map('fa', require('meteor-accounts-t9n/build/fa').fa);\nT9n.map('fi', require('meteor-accounts-t9n/build/fi').fi);\nT9n.map('fr', require('meteor-accounts-t9n/build/fr').fr);\nT9n.map('fr-CA', require('meteor-accounts-t9n/build/fr_CA').fr_CA);\nT9n.map('he', require('meteor-accounts-t9n/build/he').he);\nT9n.map('hr', require('meteor-accounts-t9n/build/hr').hr);\nT9n.map('hu', require('meteor-accounts-t9n/build/hu').hu);\nT9n.map('id', require('meteor-accounts-t9n/build/id').id);\nT9n.map('it', require('meteor-accounts-t9n/build/it').it);\nT9n.map('ja', require('meteor-accounts-t9n/build/ja').ja);\nT9n.map('kh', require('meteor-accounts-t9n/build/kh').kh);\nT9n.map('ko', require('meteor-accounts-t9n/build/ko').ko);\nT9n.map('nl', require('meteor-accounts-t9n/build/nl').nl);\nT9n.map('no-NB', require('meteor-accounts-t9n/build/no_NB').no_NB);\nT9n.map('pl', require('meteor-accounts-t9n/build/pl').pl);\nT9n.map('pt', require('meteor-accounts-t9n/build/pt').pt);\nT9n.map('pt-PT', require('meteor-accounts-t9n/build/pt_PT').pt_PT);\nT9n.map('ro', require('meteor-accounts-t9n/build/ro').ro);\nT9n.map('ru', require('meteor-accounts-t9n/build/ru').ru);\nT9n.map('sk', require('meteor-accounts-t9n/build/sk').sk);\nT9n.map('sl', require('meteor-accounts-t9n/build/sl').sl);\nT9n.map('sv', require('meteor-accounts-t9n/build/sv').sv);\nT9n.map('th', require('meteor-accounts-t9n/build/th').th);\nT9n.map('tr', require('meteor-accounts-t9n/build/tr').tr);\nT9n.map('uk', require('meteor-accounts-t9n/build/uk').uk);\nT9n.map('vi', require('meteor-accounts-t9n/build/vi').vi);\nT9n.map('zh-CN', require('meteor-accounts-t9n/build/zh_CN').zh_CN);\nT9n.map('zh-HK', require('meteor-accounts-t9n/build/zh_HK').zh_HK);\nT9n.map('zh-TW', require('meteor-accounts-t9n/build/zh_TW').zh_TW);\n\n// Reactively adjust useraccounts:core translations\nTracker.autorun(() => {\n  const language = TAPi18n.getLanguage();\n  try {\n    T9n.setLanguage(language);\n  } catch (err) {\n    // Try to extract & set the language part only (e.g. \"en\" instead of \"en-UK\")\n    try {\n      T9n.setLanguage(language.split('-')[0]);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n});\n","import { Blaze } from 'meteor/blaze';\nimport { TAPi18n } from './tap';\n\nBlaze.registerHelper('_', (...args) => {\n  const { hash } = args.pop();\n  const [key] = args.splice(0, 1);\n  return TAPi18n.__(key, { ...hash, sprintf: args });\n});\n","import { TAPi18n } from './tap';\nimport './accounts';\nimport './moment';\n\nif (Meteor.isClient) {\n  import './blaze';\n}\n\nexport { TAPi18n };\n\n(async () => {\n  await TAPi18n.init();\n})();\n\n","export default {\n  \"af\": {\n    code: \"af\",\n    tag: \"af\",\n    name: \"Afrikaans\",\n    load: () => import('./data/af.i18n.json'),\n    rtl: \"false\",\n  },\n  \"af_ZA\": {\n    code: \"af\",\n    tag: \"af_ZA\",\n    name: \"Afrikaans (South Africa)\",\n    load: () => import('./data/af_ZA.i18n.json'),\n    rtl: \"false\",\n  },\n  \"en_AU\": {\n    code: \"en\",\n    tag: \"en_AU\",\n    name: \"English (Australia)\",\n    load: () => import('./data/en_AU.i18n.json'),\n    rtl: \"false\",\n  },\n  \"en_ZA\": {\n    code: \"en\",\n    tag: \"en_ZA\",\n    name: \"English (South Africa)\",\n    load: () => import('./data/en_ZA.i18n.json'),\n    rtl: \"false\",\n  },\n  \"ar-DZ\": {\n    code: \"ar\",\n    tag: \"ar-DZ\",\n    name: \"دزيرية\",\n    load: () => import('./data/ar-DZ.i18n.json'),\n    rtl: \"true\",\n  },\n  \"ar-EG\": {\n    code: \"ar\",\n    tag: \"ar-EG\",\n    name: \"مَصرى\",\n    load: () => import('./data/ar-EG.i18n.json'),\n    rtl: \"true\",\n  },\n  \"ar\": {\n    code: \"ar\",\n    tag: \"ar\",\n    name: \"العربية\",\n    load: () => import('./data/ar.i18n.json'),\n    rtl: \"true\",\n  },\n  \"ary\": {\n    code: \"ary\",\n    tag: \"ary\",\n    name: \"عربي مغربي\",\n    load: () => import('./data/ary.i18n.json'),\n    rtl: \"true\",\n  },\n  \"az-AZ\": {\n    code: \"az\",\n    tag: \"az-AZ\",\n    name: \"Azərbaycan (Azərbaycan)\",\n    load: () => import('./data/az-AZ.i18n.json'),\n  },\n  \"az-LA\": {\n    code: \"az\",\n    tag: \"az-LA\",\n    name: \"Azərbaycan (Latin)\",\n    load: () => import('./data/az-LA.i18n.json'),\n  },\n  \"az\": {\n    code: \"az\",\n    tag: \"az\",\n    name: \"Azərbaycan\",\n    load: () => import('./data/az.i18n.json'),\n  },\n  \"bg\": {\n    code: \"bg\",\n    tag: \"bg\",\n    name: \"Български\",\n    load: () => import('./data/bg.i18n.json'),\n  },\n  \"br\": {\n    code: \"br\",\n    tag: \"br\",\n    name: \"Brezhoneg\",\n    load: () => import('./data/br.i18n.json'),\n  },\n  \"ca\": {\n    code: \"ca\",\n    tag: \"ca\",\n    name: \"català\",\n    load: () => import('./data/ca.i18n.json'),\n  },\n  \"ca-ES\": {\n    code: \"ca\",\n    tag: \"ca-ES\",\n    name: \"català (Espanya)\",\n    load: () => import('./data/ca_ES.i18n.json'),\n  },\n  \"cmn\": {\n    code: \"cn\",\n    tag: \"cnm\",\n    name: \"官話 / 官话\",\n    load: () => import('./data/cmn.i18n.json'),\n  },\n  \"cs\": {\n    code: \"cs\",\n    tag: \"cs\",\n    name: \"čeština\",\n    load: () => import('./data/cs.i18n.json'),\n  },\n  \"cs-CZ\": {\n    code: \"cs\",\n    tag: \"cs-CZ\",\n    name: \"čeština (Česká republika)\",\n    load: () => import('./data/cs-CZ.i18n.json'),\n  },\n  \"cy-GB\": {\n    code: \"cy\",\n    tag: \"cy-GB\",\n    name: \"Welsh (UK)\",\n    load: () => import('./data/cy-GB.i18n.json'),\n  },\n  \"cy\": {\n    code: \"cy\",\n    tag: \"cy\",\n    name: \"Welsh\",\n    load: () => import('./data/cy.i18n.json'),\n  },\n  \"da\": {\n    code: \"da\",\n    tag: \"da\",\n    name: \"Dansk\",\n    load: () => import('./data/da.i18n.json'),\n  },\n  \"de-AT\": {\n    code: \"de\",\n    tag: \"de-AT\",\n    name: \"Deutsch (Österreich)\",\n    load: () => import('./data/de-AT.i18n.json'),\n  },\n  \"de-CH\": {\n    code: \"de\",\n    tag: \"de-CH\",\n    name: \"Deutsch (Schweiz)\",\n    load: () => import('./data/de-CH.i18n.json'),\n  },\n  \"de-DE\": {\n    code: \"de\",\n    tag: \"de-DE\",\n    name: \"Deutsch (Deutschland)\",\n    load: () => import('./data/de_DE.i18n.json'),\n  },\n  \"de\": {\n    code: \"de\",\n    tag: \"de\",\n    name: \"Deutsch\",\n    load: () => import('./data/de.i18n.json'),\n  },\n  \"el-GR\": {\n    code: \"el\",\n    tag: \"el-GR\",\n    name: \"Ελληνικά (Ελλάδα)\",\n    load: () => import('./data/el-GR.i18n.json'),\n  },\n  \"el\": {\n    code: \"el\",\n    tag: \"el\",\n    name: \"Ελληνικά\",\n    load: () => import('./data/el.i18n.json'),\n  },\n  \"en-BR\": {\n    code: \"en\",\n    tag: \"en-BR\",\n    name: \"English (Brazil)\",\n    load: () => import('./data/en-BR.i18n.json'),\n  },\n  \"en-DE\": {\n    code: \"en\",\n    tag: \"en-DE\",\n    name: \"English (Germany)\",\n    load: () => import('./data/en-DE.i18n.json'),\n  },\n  \"en-GB\": {\n    code: \"en\",\n    tag: \"en-GB\",\n    name: \"English (UK)\",\n    load: () => import('./data/en-GB.i18n.json'),\n  },\n  \"en-IT\": {\n    code: \"en\",\n    tag: \"en-IT\",\n    name: \"English (Italy)\",\n    load: () => import('./data/en-IT.i18n.json'),\n  },\n  \"en-MY\": {\n    code: \"en\",\n    tag: \"en-MY\",\n    name: \"English (Malaysia)\",\n    load: () => import('./data/en-MY.i18n.json'),\n  },\n  \"en-YS\": {\n    code: \"en\",\n    tag: \"en-YS\",\n    name: \"English (Yeshivish)\",\n    load: () => import('./data/en-YS.i18n.json'),\n  },\n  \"en\": {\n    code: \"en\",\n    tag: \"en\",\n    name: \"English\",\n    load: () => import('./data/en.i18n.json'),\n  },\n  \"eo\": {\n    code: \"eo\",\n    tag: \"eo\",\n    name: \"Esperanto\",\n    load: () => import('./data/eo.i18n.json'),\n  },\n  \"ast-ES\": {\n    code: \"es\",\n    tag: \"ast-ES\",\n    name: \"español de Asturias\",\n    load: () => import('./data/ast-ES.i18n.json'),\n  },\n  \"es-AR\": {\n    code: \"es\",\n    tag: \"es-AR\",\n    name: \"español de Argentina\",\n    load: () => import('./data/es-AR.i18n.json'),\n  },\n  \"es-CL\": {\n    code: \"es\",\n    tag: \"es-CL\",\n    name: \"español de Chile\",\n    load: () => import('./data/es-CL.i18n.json'),\n  },\n  \"es-CO\": {\n    code: \"es\",\n    tag: \"es-CO\",\n    name: \"español en Colombia\",\n    load: () => import('./data/es-CO.i18n.json'),\n  },\n  \"es-LA\": {\n    code: \"es\",\n    tag: \"es-LA\",\n    name: \"español de América Latina\",\n    load: () => import('./data/es-LA.i18n.json'),\n  },\n  \"es-MX\": {\n    code: \"es\",\n    tag: \"es-MX\",\n    name: \"español de México\",\n    load: () => import('./data/es-MX.i18n.json'),\n  },\n  \"es-PE\": {\n    code: \"es\",\n    tag: \"es-PE\",\n    name: \"español de Perú\",\n    load: () => import('./data/es-PE.i18n.json'),\n  },\n  \"es-PY\": {\n    code: \"es\",\n    tag: \"es-PY\",\n    name: \"español de Paraguayo\",\n    load: () => import('./data/es-PY.i18n.json'),\n  },\n  \"es\": {\n    code: \"es\",\n    tag: \"es\",\n    name: \"español\",\n    load: () => import('./data/es.i18n.json'),\n  },\n  \"et-EE\": {\n    code: \"et\",\n    tag: \"et-EE\",\n    name: \"eesti keel (Eesti)\",\n    load: () => import('./data/et-EE.i18n.json'),\n  },\n  \"eu\": {\n    code: \"eu\",\n    tag: \"eu\",\n    name: \"Euskara\",\n    load: () => import('./data/eu.i18n.json'),\n  },\n  \"fa-IR\": {\n    code: \"fa\",\n    tag: \"fa-IR\",\n    name: \"فارسی/پارسی (ایران\\u200e)\",\n    load: () => import('./data/fa-IR.i18n.json'),\n    rtl: \"true\",\n  },\n  \"fa\": {\n    code: \"fa\",\n    tag: \"fa\",\n    name: \"فارسی\",\n    load: () => import('./data/fa.i18n.json'),\n    rtl: \"true\",\n  },\n  \"fi\": {\n    code: \"fi\",\n    tag: \"fi\",\n    name: \"Suomi\",\n    load: () => import('./data/fi.i18n.json'),\n  },\n  \"fr-BE\": {\n    code: \"fr\",\n    tag: \"fr-BE\",\n    name: \"Français (Belgique)\",\n    load: () => import('./data/fr-BE.i18n.json'),\n  },\n  \"fr-CA\": {\n    code: \"fr\",\n    tag: \"fr-CA\",\n    name: \"Français (Canada)\",\n    load: () => import('./data/fr-CA.i18n.json'),\n  },\n  \"fr-CH\": {\n    code: \"fr\",\n    tag: \"fr-CH\",\n    name: \"Français (Schweiz)\",\n    load: () => import('./data/fr-CH.i18n.json'),\n  },\n  \"fr\": {\n    code: \"fr\",\n    tag: \"fr\",\n    name: \"Français\",\n    load: () => import('./data/fr.i18n.json'),\n  },\n  \"fy-NL\": {\n    code: \"fy\",\n    tag: \"fy-NL\",\n    name: \"Westerlauwersk Frysk (Nederlân)\",\n    load: () => import('./data/fy-NL.i18n.json'),\n  },\n  \"fy\": {\n    code: \"fy\",\n    tag: \"fy\",\n    name: \"Westerlauwersk Frysk\",\n    load: () => import('./data/fy.i18n.json'),\n  },\n  \"gl-ES\": {\n    code: \"gl\",\n    tag: \"gl-ES\",\n    name: \"Galego (España)\",\n    load: () => import('./data/gl-ES.i18n.json'),\n  },\n  \"gl\": {\n    code: \"gl\",\n    tag: \"gl\",\n    name: \"Galego\",\n    load: () => import('./data/gl.i18n.json'),\n  },\n  \"gu-IN\": {\n    code: \"gu\",\n    tag: \"gu-IN\",\n    name: \"ગુજરાતી\",\n    load: () => import('./data/gu-IN.i18n.json'),\n  },\n  \"he-IL\": {\n    code: \"he\",\n    tag: \"he-IL\",\n    name: \"עברית (ישראל)\",\n    load: () => import('./data/he-IL.i18n.json'),\n    rtl: \"true\",\n  },\n  \"he\": {\n    code: \"he\",\n    tag: \"he\",\n    name: \"עברית\",\n    load: () => import('./data/he.i18n.json'),\n    rtl: \"true\",\n  },\n  \"hi-IN\": {\n    code: \"hi\",\n    tag: \"hi-IN\",\n    name: \"हिंदी (भारत)\",\n    load: () => import('./data/hi-IN.i18n.json'),\n  },\n  \"hi\": {\n    code: \"hi\",\n    tag: \"hi\",\n    name: \"हिन्दी\",\n    load: () => import('./data/hi.i18n.json'),\n  },\n  \"hr\": {\n    code: \"hr\",\n    tag: \"hr\",\n    name: \"Hrvatski\",\n    load: () => import('./data/hr.i18n.json'),\n  },\n  \"hu\": {\n    code: \"hu\",\n    tag: \"hu\",\n    name: \"Magyar\",\n    load: () => import('./data/hu.i18n.json'),\n  },\n  \"hy\": {\n    code: \"hy\",\n    tag: \"hy\",\n    name: \"Հայերեն\",\n    load: () => import('./data/hy.i18n.json'),\n  },\n  \"id\": {\n    code: \"id\",\n    tag: \"id\",\n    name: \"Bahasa Indonesia\",\n    load: () => import('./data/id.i18n.json'),\n  },\n  \"ig\": {\n    code: \"ig\",\n    tag: \"ig\",\n    name: \"Igbo\",\n    load: () => import('./data/ig.i18n.json'),\n  },\n  \"it\": {\n    code: \"it\",\n    tag: \"it\",\n    name: \"Italiano\",\n    load: () => import('./data/it.i18n.json'),\n  },\n  \"ja\": {\n    code: \"ja\",\n    tag: \"ja\",\n    name: \"日本語\",\n    load: () => import('./data/ja.i18n.json'),\n  },\n  \"ja-Hira\": {\n    code: \"ja\",\n    tag: \"ja-Hira\",\n    name: \"平仮名\",\n    load: () => import('./data/ja-HI.i18n.json'),\n  },\n  \"ja-JP\": {\n    code: \"ja\",\n    tag: \"ja-JP\",\n    name: \"日本語（日本）\",\n    load: () => import('./data/ja-JP.i18n.json'),\n  },\n  \"ka\": {\n    code: \"ka\",\n    tag: \"ka\",\n    name: \"ქართული\",\n    load: () => import('./data/ka.i18n.json'),\n  },\n  \"km\": {\n    code: \"km\",\n    tag: \"km\",\n    name: \"ភាសាខ្មែរ\",\n    load: () => import('./data/km.i18n.json'),\n  },\n  \"ko-KR\": {\n    code: \"ko\",\n    tag: \"ko-KR\",\n    name: \"한국어(한국)\",\n    load: () => import('./data/ko-KR.i18n.json'),\n  },\n  \"ko\": {\n    code: \"ko\",\n    tag: \"ko\",\n    name: \"한국어\",\n    load: () => import('./data/ko.i18n.json'),\n  },\n  \"lt\": {\n    code: \"lt\",\n    tag: \"lt\",\n    name: \"Lietuvių kalba\",\n    load: () => import('./data/lt.i18n.json'),\n  },\n  \"lv\": {\n    code: \"lv\",\n    tag: \"lv\",\n    name: \"latviešu valoda\",\n    load: () => import('./data/lv.i18n.json'),\n  },\n  \"mk\": {\n    code: \"mk\",\n    tag: \"mk\",\n    name: \"македонски јазик\",\n    load: () => import('./data/mk.i18n.json'),\n  },\n  \"mn\": {\n    code: \"mn\",\n    tag: \"mn\",\n    name: \"Монгол\",\n    load: () => import('./data/mn.i18n.json'),\n  },\n  \"ms\": {\n    code: \"ms\",\n    tag: \"ms\",\n    name: \"بهاس ملايو\",\n    load: () => import('./data/ms.i18n.json'),\n  },\n  \"ms-MY\": {\n    code: \"ms\",\n    tag: \"ms-MY\",\n    name: \"بهاس ملايو (Malaysia)\",\n    load: () => import('./data/ms-MY.i18n.json'),\n  },\n  \"nb\": {\n    code: \"nb\",\n    tag: \"nb\",\n    name: \"Norsk bokmål\",\n    load: () => import('./data/nb.i18n.json'),\n  },\n  \"nl-NL\": {\n    code: \"nl\",\n    tag: \"nl-NL\",\n    name: \"Nederlands (Nederland)\",\n    load: () => import('./data/nl-NL.i18n.json'),\n  },\n  \"nl\": {\n    code: \"nl\",\n    tag: \"nl\",\n    name: \"Nederlands\",\n    load: () => import('./data/nl.i18n.json'),\n  },\n  \"oc\": {\n    code: \"oc\",\n    tag: \"oc\",\n    name: \"Occitan\",\n    load: () => import('./data/oc.i18n.json'),\n  },\n  \"or-IN\": {\n    code: \"or\",\n    tag: \"or-IN\",\n    name: \"ଓଡିଆ (ଭାରତ)\",\n    load: () => import('./data/or_IN.i18n.json'),\n  },\n  \"pa\": {\n    code: \"pa\",\n    tag: \"pa\",\n    name: \"ਪੰਜਾਬੀ\",\n    load: () => import('./data/pa.i18n.json'),\n  },\n  \"pl-PL\": {\n    code: \"pl\",\n    tag: \"pl-PL\",\n    name: \"Polski (Polska)\",\n    load: () => import('./data/pl-PL.i18n.json'),\n  },\n  \"pl\": {\n    code: \"pl\",\n    tag: \"pl\",\n    name: \"Polski\",\n    load: () => import('./data/pl.i18n.json'),\n  },\n  \"pt-BR\": {\n    code: \"pt\",\n    tag: \"pt-BR\",\n    name: \"Português do Brasil\",\n    load: () => import('./data/pt-BR.i18n.json'),\n  },\n  \"pt\": {\n    code: \"pt\",\n    tag: \"pt\",\n    name: \"Português\",\n    load: () => import('./data/pt.i18n.json'),\n  },\n  \"pt-PT\": {\n    code: \"pt\",\n    tag: \"pt-PT\",\n    name: \"Português de Portugal\",\n    load: () => import('./data/pt-PT.i18n.json'),\n  },\n  \"ro\": {\n    code: \"ro\",\n    tag: \"ro\",\n    name: \"Română\",\n    load: () => import('./data/ro.i18n.json'),\n  },\n  \"ro-RO\": {\n    code: \"ro\",\n    tag: \"ro-RO\",\n    name: \"Română (România)\",\n    load: () => import('./data/ro-RO.i18n.json'),\n  },\n  \"ru\": {\n    code: \"ru\",\n    tag: \"ru\",\n    name: \"Русский\",\n    load: () => import('./data/ru.i18n.json'),\n  },\n  \"sk\": {\n    code: \"sk\",\n    tag: \"sk\",\n    name: \"Slovenčina\",\n    load: () => import('./data/sk.i18n.json'),\n  },\n  \"sl\": {\n    code: \"sl\",\n    tag: \"sl\",\n    name: \"slovenščina\",\n    load: () => import('./data/sl.i18n.json'),\n  },\n  \"sr\": {\n    code: \"sr\",\n    tag: \"sr\",\n    name: \"Српски језик\",\n    load: () => import('./data/sr.i18n.json'),\n  },\n  \"sv\": {\n    code: \"sv\",\n    tag: \"sv\",\n    name: \"Svenska\",\n    load: () => import('./data/sv.i18n.json'),\n  },\n  \"sw\": {\n    code: \"sw\",\n    tag: \"sw\",\n    name: \"Kiswahili\",\n    load: () => import('./data/sw.i18n.json'),\n  },\n  \"ta\": {\n    code: \"ta\",\n    tag: \"ta\",\n    name: \"தமிழ்\",\n    load: () => import('./data/ta.i18n.json'),\n  },\n  \"te-IN\": {\n    code: \"te\",\n    tag: \"te_IN\",\n    name: \"తెలుగు (భారతదేశం)\",\n    load: () => import('./data/te-IN.i18n.json'),\n  },\n  \"th\": {\n    code: \"th\",\n    tag: \"th\",\n    name: \"ไทย\",\n    load: () => import('./data/th.i18n.json'),\n  },\n  \"tlh\": {\n    code: \"tlh\",\n    tag: \"tlh\",\n    name: \"tlhIngan Hol\",\n    load: () => import('./data/tlh.i18n.json'),\n  },\n  \"tr\": {\n    code: \"tr\",\n    tag: \"tr\",\n    name: \"Türkçe\",\n    load: () => import('./data/tr.i18n.json'),\n  },\n  \"ug\": {\n    code: \"ug\",\n    tag: \"ug\",\n    name: \"ئۇيغۇر تىلى\",\n    load: () => import('./data/ug.i18n.json'),\n  },\n  \"uk\": {\n    code: \"uk\",\n    tag: \"uk\",\n    name: \"українська мова\",\n    load: () => import('./data/uk.i18n.json'),\n  },\n  \"uk-UA\": {\n    code: \"uk\",\n    tag: \"uk-UA\",\n    name: \"Українська (Україна)\",\n    load: () => import('./data/uk-UA.i18n.json'),\n  },\n  \"uz-AR\": {\n    code: \"uz\",\n    tag: \"uz-AR\",\n    name: \"o'zbek (arab)\",\n    load: () => import('./data/uz-AR.i18n.json'),\n  },\n  \"uz-LA\": {\n    code: \"uz\",\n    tag: \"uz-LA\",\n    name: \"o'zbek (lotin)\",\n    load: () => import('./data/uz-LA.i18n.json'),\n  },\n  \"uz-UZ\": {\n    code: \"uz\",\n    tag: \"uz-UZ\",\n    name: \"o'zbek (O'zbekiston)\",\n    load: () => import('./data/uz-UZ.i18n.json'),\n  },\n  \"uz\": {\n    code: \"uz\",\n    tag: \"uz\",\n    name: \"o'zbek\",\n    load: () => import('./data/uz.i18n.json'),\n  },\n  \"ve-CC\": {\n    code: \"ve\",\n    tag: \"ve-CC\",\n    name: \"vèneto\",\n    load: () => import('./data/ve-CC.i18n.json'),\n  },\n  \"ve-PP\": {\n    code: \"ve\",\n    tag: \"ve-PP\",\n    name: \"vepsän kelʹ\",\n    load: () => import('./data/ve-PP.i18n.json'),\n  },\n  \"ve\": {\n    code: \"ve\",\n    tag: \"ve\",\n    name: \"Tshivenḓa\",\n    load: () => import('./data/ve.i18n.json'),\n  },\n  \"vi-VN\": {\n    code: \"vi\",\n    tag: \"vi-VN\",\n    name: \"Tiếng Việt (Việt Nam)\",\n    load: () => import('./data/vi-VN.i18n.json'),\n  },\n  \"vi\": {\n    code: \"vi\",\n    tag: \"vi\",\n    name: \"Tiếng Việt\",\n    load: () => import('./data/vi.i18n.json'),\n  },\n  \"vl-SS\": {\n    code: \"vl\",\n    tag: \"vl-SS\",\n    name: \"Vlaams\",\n    load: () => import('./data/vl-SS.i18n.json'),\n  },\n  \"vo\": {\n    code: \"vo\",\n    tag: \"vo\",\n    name: \"Volapük\",\n    load: () => import('./data/vo.i18n.json'),\n  },\n  \"wa-RR\": {\n    code: \"wa\",\n    tag: \"wa-RR\",\n    name: \"Wáray-Wáray\",\n    load: () => import('./data/wa-RR.i18n.json'),\n  },\n  \"wa\": {\n    code: \"wa\",\n    tag: \"wa\",\n    name: \"walon\",\n    load: () => import('./data/wa.i18n.json'),\n  },\n  \"wo\": {\n    code: \"wo\",\n    tag: \"wo\",\n    name: \"ولوفل\",\n    load: () => import('./data/wo.i18n.json'),\n  },\n  \"xh\": {\n    code: \"xh\",\n    tag: \"xh\",\n    name: \"isiXhosa\",\n    load: () => import('./data/xh.i18n.json'),\n  },\n  \"yi\": {\n    code: \"yi\",\n    tag: \"yi\",\n    name: \"ייִדיש, יידיש\",\n    load: () => import('./data/yi.i18n.json'),\n  },\n  \"yo\": {\n    code: \"yo\",\n    tag: \"yo\",\n    name: \"Èdè Yorùbá\",\n    load: () => import('./data/yo.i18n.json'),\n  },\n  \"zgh\": {\n    code: \"zgh\",\n    tag: \"zgh\",\n    name: \"ⵜⴰⵎⴰⵣⵉⵖⵜ ⵜⴰⵏⴰⵡⴰⵢⵜ\",\n    load: () => import('./data/zgh.i18n.json'),\n  },\n  \"yue_CN\": {\n    code: \"yue\",\n    tag: \"yue_CN\",\n    name: \"廣東話\",\n    load: () => import('./data/yue_CN.i18n.json'),\n  },\n  \"zh-CN\": {\n    code: \"zh\",\n    tag: \"zh-CN\",\n    name: \"简体中文\",\n    load: () => import('./data/zh-CN.i18n.json'),\n  },\n  \"zh-GB\": {\n    code: \"zh\",\n    tag: \"zh-GB\",\n    name: \"简体中文 GB2312\",\n    load: () => import('./data/zh-GB.i18n.json'),\n  },\n  \"zh-Hans\": {\n    code: \"zh\",\n    tag: \"zh-Hans\",\n    name: \"简化字\",\n    load: () => import('./data/zh-Hans.i18n.json'),\n  },\n  \"zh-Hant\": {\n    code: \"zh\",\n    tag: \"zh-Hant\",\n    name: \"正體字\",\n    load: () => import('./data/zh-Hant.i18n.json'),\n  },\n  \"zh-HK\": {\n    code: \"zh\",\n    tag: \"zh-HK\",\n    name: \"繁体中文（香港）\",\n    load: () => import('./data/zh-HK.i18n.json'),\n  },\n  \"zh-TW\": {\n    code: \"zh\",\n    tag: \"zh-TW\",\n    name: \"繁體中文（台灣）\",\n    load: () => import('./data/zh-TW.i18n.json'),\n  },\n  \"zu-ZA\": {\n    code: \"zu\",\n    tag: \"zu-ZA\",\n    name: \"isiZulu (Ningizimu Afrika)\",\n    load: () => import('./data/zu-ZA.i18n.json'),\n  },\n  \"zu\": {\n    code: \"zu\",\n    tag: \"zu\",\n    name: \"isiZulu\",\n    load: () => import('./data/zu.i18n.json'),\n  }\n};\n","import { Tracker } from 'meteor/tracker';\nimport moment from 'moment/min/moment-with-locales';\nimport { TAPi18n } from './tap';\n\n// Reactively adjust Moment.js translations\nTracker.autorun(() => {\n  const language = TAPi18n.getLanguage();\n  try {\n    moment.locale(language);\n  } catch (err) {\n    console.error(err);\n  }\n});\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport Translation from '/models/translation';\nimport i18next from 'i18next';\nimport sprintf from 'i18next-sprintf-postprocessor';\nimport languages from './languages';\n\nconst DEFAULT_NAMESPACE = 'translation';\nconst DEFAULT_LANGUAGE = 'en';\n\n// Carefully reproduced tap:i18n API\nexport const TAPi18n = {\n  i18n: null,\n  current: new ReactiveVar(DEFAULT_LANGUAGE),\n  async init() {\n    this.i18n = i18next.createInstance().use(sprintf);\n    await this.i18n.init({\n      fallbackLng: DEFAULT_LANGUAGE,\n      cleanCode: true,\n      // Show translations debug messages only when DEBUG=true\n      // OLD: debug: Meteor.isDevelopment,\n      debug: process.env.DEBUG === 'true',\n      supportedLngs: Object.values(languages).map(({ tag }) => tag),\n      ns: DEFAULT_NAMESPACE,\n      defaultNs: DEFAULT_NAMESPACE,\n      postProcess: [\"sprintf\"],\n      // Default values to match tap:i18n behaviour\n      interpolation: {\n        prefix: '__',\n        suffix: '__',\n        escapeValue: false,\n      },\n      resources: {},\n    });\n    // Load the current language data\n    await TAPi18n.loadLanguage(DEFAULT_LANGUAGE);\n  },\n  isLanguageSupported(language) {\n    return Object.values(languages).some(({ tag }) => tag === language);\n  },\n  getSupportedLanguages() {\n    return Object.values(languages).map(({ name, code, tag }) => ({ name, code, tag }));\n  },\n  getLanguage() {\n    return this.current.get();\n  },\n  loadTranslation(language) {\n    return new Promise((resolve, reject) => {\n      if (Meteor.isClient) {\n        const translationSubscription = Meteor.subscribe('translation', {language: language},  0, {\n          onReady() {\n            resolve(translationSubscription);\n          },\n          onError(error) {\n            reject(error);\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  },\n  async loadLanguage(language) {\n    if (language in languages && 'load' in languages[language]) {\n      let data = await languages[language].load();\n\n      let custom_translations = [];\n      await this.loadTranslation(language);\n      custom_translations = ReactiveCache.getTranslations({language: language}, {fields: { text: true, translationText: true }});\n\n      if (custom_translations && custom_translations.length > 0) {\n        data = custom_translations.reduce((acc, cur) => (acc[cur.text]=cur.translationText, acc), data);\n      }\n\n      this.i18n.addResourceBundle(language, DEFAULT_NAMESPACE, data);\n    } else {\n      throw new Error(`Language ${language} is not supported`);\n    }\n  },\n  async setLanguage(language) {\n    await this.loadLanguage(language);\n    await this.i18n.changeLanguage(language);\n    this.current.set(language);\n  },\n  // Return translation by key\n  __(key, options, language) {\n    this.current.dep.depend();\n    return this.i18n.t(key, {\n      ...options,\n      lng: language,\n    });\n  }\n};\n","import { DataCache } from '@wekanteam/meteor-reactive-cache';\n\n// Server isn't reactive, so search for the data always.\nReactiveCacheServer = {\n  getBoard(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Boards.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getBoards(selector = {}, options = {}, getQuery = false) {\n    let ret = Boards.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getList(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Lists.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getLists(selector = {}, options = {}, getQuery = false) {\n    let ret = Lists.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getSwimlane(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Swimlanes.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getSwimlanes(selector = {}, options = {}, getQuery = false) {\n    let ret = Swimlanes.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getChecklist(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Checklists.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getChecklists(selector = {}, options = {}, getQuery = false) {\n    let ret = Checklists.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getChecklistItem(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = ChecklistItems.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getChecklistItems(selector = {}, options = {}, getQuery = false) {\n    let ret = ChecklistItems.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getCard(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Cards.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getCards(selector = {}, options = {}, getQuery = false) {\n    let ret = Cards.find(selector, options, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getCardComment(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = CardComments.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getCardComments(selector = {}, options = {}, getQuery = false) {\n    let ret = CardComments.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getCardCommentReaction(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = CardCommentReactions.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getCardCommentReactions(selector = {}, options = {}, getQuery = false) {\n    let ret = CardCommentReactions.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getCustomField(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = CustomFields.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getCustomFields(selector = {}, options = {}, getQuery = false) {\n    let ret = CustomFields.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getAttachment(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Attachments.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getAttachments(selector = {}, options = {}, getQuery = false) {\n    let ret = Attachments.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getAvatar(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Avatars.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getAvatars(selector = {}, options = {}, getQuery = false) {\n    let ret = Avatars.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getUser(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Users.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getUsers(selector = {}, options = {}, getQuery = false) {\n    let ret = Users.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getOrg(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Org.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getOrgs(selector = {}, options = {}, getQuery = false) {\n    let ret = Org.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getTeam(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Team.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getTeams(selector = {}, options = {}, getQuery = false) {\n    let ret = Team.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getActivity(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Activities.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getActivities(selector = {}, options = {}, getQuery = false) {\n    let ret = Activities.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getRule(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Rules.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getRules(selector = {}, options = {}, getQuery = false) {\n    let ret = Rules.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getAction(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Actions.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getActions(selector = {}, options = {}, getQuery = false) {\n    let ret = Actions.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getTrigger(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Triggers.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getTriggers(selector = {}, options = {}, getQuery = false) {\n    let ret = Triggers.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getImpersonatedUser(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = ImpersonatedUsers.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getImpersonatedUsers(selector = {}, options = {}, getQuery = false) {\n    let ret = ImpersonatedUsers.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getIntegration(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Integrations.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getIntegrations(selector = {}, options = {}, getQuery = false) {\n    let ret = Integrations.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getSessionData(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = SessionData.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getSessionDatas(selector = {}, options = {}, getQuery = false) {\n    let ret = SessionData.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getInvitationCode(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = InvitationCodes.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getInvitationCodes(selector = {}, options = {}, getQuery = false) {\n    let ret = InvitationCodes.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  },\n  getCurrentSetting() {\n    const ret = Settings.findOne();\n    return ret;\n  },\n  getCurrentUser() {\n    const ret =  Meteor.user();\n    return ret;\n  },\n  getTranslation(idOrFirstObjectSelector = {}, options = {}) {\n    const ret = Translation.findOne(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getTranslations(selector = {}, options = {}, getQuery = false) {\n    let ret = Translation.find(selector, options);\n    if (getQuery !== true) {\n      ret = ret.fetch();\n    }\n    return ret;\n  }\n}\n\n// only the Client is reactive\n// saving the result has a big advantage if the query is big and often searched for the same data again and again\n// if the data is changed in the client, the data is saved to the server and depending code is reactive called again\nReactiveCacheClient = {\n  getBoard(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__board) {\n      this.__board = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Boards.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__board.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getBoards(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__boards) {\n      this.__boards = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Boards.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__boards.get(EJSON.stringify(select));\n    return ret;\n  },\n  getList(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__list) {\n      this.__list = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Lists.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__list.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getLists(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__lists) {\n      this.__lists = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Lists.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__lists.get(EJSON.stringify(select));\n    return ret;\n  },\n  getSwimlane(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__swimlane) {\n      this.__swimlane = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Swimlanes.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__swimlane.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getSwimlanes(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__swimlanes) {\n      this.__swimlanes = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Swimlanes.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__swimlanes.get(EJSON.stringify(select));\n    return ret;\n  },\n  getChecklist(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__checklist) {\n      this.__checklist = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Checklists.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__checklist.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getChecklists(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__checklists) {\n      this.__checklists = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Checklists.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__checklists.get(EJSON.stringify(select));\n    return ret;\n  },\n  getChecklistItem(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__checklistItem) {\n      this.__checklistItem = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = ChecklistItems.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__checklistItem.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getChecklistItems(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__checklistItems) {\n      this.__checklistItems = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = ChecklistItems.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__checklistItems.get(EJSON.stringify(select));\n    return ret;\n  },\n  getCard(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__card) {\n      this.__card = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Cards.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__card.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getCards(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__cards) {\n      this.__cards = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Cards.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__cards.get(EJSON.stringify(select));\n    return ret;\n  },\n  getCardComment(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__cardComment) {\n      this.__cardComment = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = CardComments.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__cardComment.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getCardComments(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__cardComments) {\n      this.__cardComments = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = CardComments.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__cardComments.get(EJSON.stringify(select));\n    return ret;\n  },\n  getCardCommentReaction(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__cardCommentReaction) {\n      this.__cardCommentReaction = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = CardCommentReactions.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__cardCommentReaction.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getCardCommentReactions(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__cardCommentReactions) {\n      this.__cardCommentReactions = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = CardCommentReactions.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__cardCommentReactions.get(EJSON.stringify(select));\n    return ret;\n  },\n  getCustomField(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__customField) {\n      this.__customField = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = CustomFields.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__customField.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getCustomFields(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__customFields) {\n      this.__customFields = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = CustomFields.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__customFields.get(EJSON.stringify(select));\n    return ret;\n  },\n  getAttachment(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__attachment) {\n      this.__attachment = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Attachments.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__attachment.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getAttachments(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__attachments) {\n      this.__attachments = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Attachments.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__attachments.get(EJSON.stringify(select));\n    return ret;\n  },\n  getAvatar(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__avatar) {\n      this.__avatar = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Avatars.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__avatar.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getAvatars(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__avatars) {\n      this.__avatars = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Avatars.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__avatars.get(EJSON.stringify(select));\n    return ret;\n  },\n  getUser(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__user) {\n      this.__user = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Users.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__user.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getUsers(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__users) {\n      this.__users = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Users.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__users.get(EJSON.stringify(select));\n    return ret;\n  },\n  getOrg(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__org) {\n      this.__org = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Org.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__org.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getOrgs(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__orgs) {\n      this.__orgs = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Org.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__orgs.get(EJSON.stringify(select));\n    return ret;\n  },\n  getTeam(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__team) {\n      this.__team = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Team.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__team.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getTeams(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__teams) {\n      this.__teams = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Team.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__teams.get(EJSON.stringify(select));\n    return ret;\n  },\n  getActivity(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__activity) {\n      this.__activity = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Activities.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__activity.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getActivities(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__activities) {\n      this.__activities = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Activities.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__activities.get(EJSON.stringify(select));\n    return ret;\n  },\n  getRule(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__rule) {\n      this.__rule = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Rules.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__rule.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getRules(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__rules) {\n      this.__rules = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Rules.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__rules.get(EJSON.stringify(select));\n    return ret;\n  },\n  getAction(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__action) {\n      this.__action = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Actions.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__action.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getActions(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__actions) {\n      this.__actions = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Actions.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__actions.get(EJSON.stringify(select));\n    return ret;\n  },\n  getTrigger(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__trigger) {\n      this.__trigger = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Triggers.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__trigger.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getTriggers(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__triggers) {\n      this.__triggers = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Triggers.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__triggers.get(EJSON.stringify(select));\n    return ret;\n  },\n  getImpersonatedUser(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__impersonatedUser) {\n      this.__impersonatedUser = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = ImpersonatedUsers.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__impersonatedUser.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getImpersonatedUsers(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__impersonatedUsers) {\n      this.__impersonatedUsers = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = ImpersonatedUsers.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__impersonatedUsers.get(EJSON.stringify(select));\n    return ret;\n  },\n  getIntegration(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__integration) {\n      this.__integration = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Integrations.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__integration.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getIntegrations(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__integrations) {\n      this.__integrations = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Integrations.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__integrations.get(EJSON.stringify(select));\n    return ret;\n  },\n  getInvitationCode(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__invitationCode) {\n      this.__invitationCode = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = InvitationCodes.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__invitationCode.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getInvitationCodes(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__invitationCodes) {\n      this.__invitationCodes = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = InvitationCodes.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__invitationCodes.get(EJSON.stringify(select));\n    return ret;\n  },\n  getCurrentSetting() {\n    if (!this.__currentSetting || !this.__currentSetting.get()) {\n      this.__currentSetting = new DataCache(() => {\n        const _ret = Settings.findOne();\n        return _ret;\n      });\n    }\n    const ret = this.__currentSetting.get();\n    return ret;\n  },\n  getCurrentUser() {\n    if (!this.__currentUser || !this.__currentUser.get()) {\n      this.__currentUser = new DataCache(() => {\n        const _ret = Meteor.user();\n        return _ret;\n      });\n    }\n    const ret = this.__currentUser.get();\n    return ret;\n  },\n  getTranslation(idOrFirstObjectSelector = {}, options = {}) {\n    const idOrFirstObjectSelect = {idOrFirstObjectSelector, options}\n    if (!this.__translation) {\n      this.__translation = new DataCache(_idOrFirstObjectSelect => {\n        const __select = EJSON.parse(_idOrFirstObjectSelect);\n        const _ret = Translation.findOne(__select.idOrFirstObjectSelector, __select.options);\n        return _ret;\n      });\n    }\n    const ret = this.__translation.get(EJSON.stringify(idOrFirstObjectSelect));\n    return ret;\n  },\n  getTranslations(selector = {}, options = {}, getQuery = false) {\n    const select = {selector, options, getQuery}\n    if (!this.__translations) {\n      this.__translations = new DataCache(_select => {\n        const __select = EJSON.parse(_select);\n        let _ret = Translation.find(__select.selector, __select.options);\n        if (__select.getQuery !== true) {\n          _ret = _ret.fetch();\n        }\n        return _ret;\n      });\n    }\n    const ret = this.__translations.get(EJSON.stringify(select));\n    return ret;\n  }\n}\n\n// global Reactive Cache class to avoid big overhead while searching for the same data often again\n// This class calls 2 implementation, for server and client code\n//\n// having this class here has several advantages:\n// - The Programmer hasn't to care about in which context he call's this class\n// - having all queries together in 1 class to make it possible to see which queries in Wekan happens, e.g. with console.log\nReactiveCache = {\n  getBoard(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getBoard(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getBoard(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getBoards(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getBoards(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getBoards(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getList(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getList(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getList(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getLists(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getLists(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getLists(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getSwimlane(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getSwimlane(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getSwimlane(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getSwimlanes(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getSwimlanes(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getSwimlanes(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getChecklist(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getChecklist(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getChecklist(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getChecklists(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getChecklists(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getChecklists(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getChecklistItem(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getChecklistItem(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getChecklistItem(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getChecklistItems(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getChecklistItems(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getChecklistItems(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getCard(idOrFirstObjectSelector = {}, options = {}, noCache = false) {\n    let ret;\n    if (Meteor.isServer || noCache === true) {\n      ret = ReactiveCacheServer.getCard(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getCard(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getCards(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCards(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getCards(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getCardComment(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCardComment(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getCardComment(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getCardComments(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCardComments(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getCardComments(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getCardCommentReaction(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCardCommentReaction(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getCardCommentReaction(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getCardCommentReactions(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCardCommentReactions(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getCardCommentReactions(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getCustomField(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCustomField(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getCustomField(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getCustomFields(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCustomFields(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getCustomFields(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getAttachment(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getAttachment(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getAttachment(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getAttachments(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getAttachments(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getAttachments(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getAvatar(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getAvatar(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getAvatar(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getAvatars(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getAvatars(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getAvatars(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getUser(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getUser(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getUser(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getUsers(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getUsers(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getUsers(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getOrg(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getOrg(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getOrg(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getOrgs(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getOrgs(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getOrgs(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getTeam(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTeam(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getTeam(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getTeams(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTeams(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getTeams(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getActivity(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getActivity(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getActivity(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getActivities(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getActivities(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getActivities(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getRule(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getRule(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getRule(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getRules(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getRules(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getRules(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getAction(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getAction(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getAction(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getActions(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getActions(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getActions(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getTrigger(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTrigger(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getTrigger(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getTriggers(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTriggers(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getTriggers(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getImpersonatedUser(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getImpersonatedUser(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getImpersonatedUser(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getImpersonatedUsers(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getImpersonatedUsers(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getImpersonatedUsers(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getIntegration(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getIntegration(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getIntegration(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getIntegrations(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getIntegrations(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getIntegrations(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getSessionData(idOrFirstObjectSelector = {}, options = {}) {\n    // no reactive cache, otherwise global search will not work anymore\n    let ret = ReactiveCacheServer.getSessionData(idOrFirstObjectSelector, options);\n    return ret;\n  },\n  getSessionDatas(selector = {}, options = {}, getQuery = false) {\n    // no reactive cache, otherwise global search will not work anymore\n    let ret = ReactiveCacheServer.getSessionDatas(selector, options, getQuery);\n    return ret;\n  },\n  getInvitationCode(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getInvitationCode(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getInvitationCode(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getInvitationCodes(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getInvitationCodes(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getInvitationCodes(selector, options, getQuery);\n    }\n    return ret;\n  },\n  getCurrentSetting() {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCurrentSetting();\n    } else {\n      ret = ReactiveCacheClient.getCurrentSetting();\n    }\n    return ret;\n  },\n  getCurrentUser() {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getCurrentUser();\n    } else {\n      ret = ReactiveCacheClient.getCurrentUser();\n    }\n    return ret;\n  },\n  getTranslation(idOrFirstObjectSelector = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTranslation(idOrFirstObjectSelector, options);\n    } else {\n      ret = ReactiveCacheClient.getTranslation(idOrFirstObjectSelector, options);\n    }\n    return ret;\n  },\n  getTranslations(selector = {}, options = {}, getQuery = false) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveCacheServer.getTranslations(selector, options, getQuery);\n    } else {\n      ret = ReactiveCacheClient.getTranslations(selector, options, getQuery);\n    }\n    return ret;\n  },\n}\n\n// Server isn't reactive, so search for the data always.\nReactiveMiniMongoIndexServer = {\n  getSubTasksWithParentId(parentId, addSelect = {}, options = {}) {\n    let ret = []\n    if (parentId) {\n      ret = ReactiveCache.getCards(\n        { parentId,\n          ...addSelect,\n        }, options);\n    }\n    return ret;\n  },\n  getChecklistsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret = []\n    if (cardId) {\n      ret = ReactiveCache.getChecklists(\n        { cardId,\n          ...addSelect,\n        }, options);\n    }\n    return ret;\n  },\n  getChecklistItemsWithChecklistId(checklistId, addSelect = {}, options = {}) {\n    let ret = []\n    if (checklistId) {\n      ret = ReactiveCache.getChecklistItems(\n        { checklistId,\n          ...addSelect,\n        }, options);\n    }\n    return ret;\n  },\n  getCardCommentsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret = []\n    if (cardId) {\n      ret = ReactiveCache.getCardComments(\n        { cardId,\n          ...addSelect,\n        }, options);\n    }\n    return ret;\n  },\n  getActivityWithId(activityId, addSelect = {}, options = {}) {\n    let ret = []\n    if (activityId) {\n      ret = ReactiveCache.getActivities(\n        { _id: activityId,\n          ...addSelect,\n        }, options);\n    }\n    return ret;\n  }\n}\n\n// Client side little MiniMongo DB \"Index\"\nReactiveMiniMongoIndexClient = {\n  getSubTasksWithParentId(parentId, addSelect = {}, options = {}) {\n    let ret = []\n    if (parentId) {\n      const select = {addSelect, options}\n      if (!this.__subTasksWithId) {\n        this.__subTasksWithId = new DataCache(_select => {\n          const __select = EJSON.parse(_select);\n          const _subTasks = ReactiveCache.getCards(\n            { parentId: { $exists: true },\n              ...__select.addSelect,\n            }, __select.options);\n          const _ret = _.groupBy(_subTasks, 'parentId')\n          return _ret;\n        });\n      }\n      ret = this.__subTasksWithId.get(EJSON.stringify(select));\n      if (ret) {\n        ret = ret[parentId] || [];\n      }\n    }\n    return ret;\n  },\n  getChecklistsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret = []\n    if (cardId) {\n      const select = {addSelect, options}\n      if (!this.__checklistsWithId) {\n        this.__checklistsWithId = new DataCache(_select => {\n          const __select = EJSON.parse(_select);\n          const _checklists = ReactiveCache.getChecklists(\n            { cardId: { $exists: true },\n              ...__select.addSelect,\n            }, __select.options);\n          const _ret = _.groupBy(_checklists, 'cardId')\n          return _ret;\n        });\n      }\n      ret = this.__checklistsWithId.get(EJSON.stringify(select));\n      if (ret) {\n        ret = ret[cardId] || [];\n      }\n    }\n    return ret;\n  },\n  getChecklistItemsWithChecklistId(checklistId, addSelect = {}, options = {}) {\n    let ret = []\n    if (checklistId) {\n      const select = {addSelect, options}\n      if (!this.__checklistItemsWithId) {\n        this.__checklistItemsWithId = new DataCache(_select => {\n          const __select = EJSON.parse(_select);\n          const _checklistItems = ReactiveCache.getChecklistItems(\n            { checklistId: { $exists: true },\n              ...__select.addSelect,\n            }, __select.options);\n          const _ret = _.groupBy(_checklistItems, 'checklistId')\n          return _ret;\n        });\n      }\n      ret = this.__checklistItemsWithId.get(EJSON.stringify(select));\n      if (ret) {\n        if (Meteor.isServer) {\n          ret[checklistId] = ReactiveCache.getChecklistItems(\n            {checklistId: checklistId,\n              ...addSelect\n            }, options);\n        }\n        ret = ret[checklistId] || [];\n      }\n    }\n    return ret;\n  },\n  getCardCommentsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret = []\n    if (cardId) {\n      const select = {addSelect, options}\n      if (!this.__cardCommentsWithId) {\n        this.__cardCommentsWithId = new DataCache(_select => {\n          const __select = EJSON.parse(_select);\n          const _cardComments = ReactiveCache.getCardComments(\n            { cardId: { $exists: true },\n              ...__select.addSelect,\n            }, __select.options);\n          const _ret = _.groupBy(_cardComments, 'cardId')\n          return _ret;\n        });\n      }\n      ret = this.__cardCommentsWithId.get(EJSON.stringify(select));\n      if (ret) {\n        ret = ret[cardId] || [];\n      }\n    }\n    return ret;\n  },\n  getActivityWithId(activityId, addSelect = {}, options = {}) {\n    let ret = []\n    if (activityId) {\n      const select = {addSelect, options}\n      if (!this.__activityWithId) {\n        this.__activityWithId = new DataCache(_select => {\n          const __select = EJSON.parse(_select);\n          const _activities = ReactiveCache.getActivities(\n            { _id: { $exists: true },\n              ...__select.addSelect,\n            }, __select.options);\n          const _ret = _.indexBy(_activities, '_id')\n          return _ret;\n        });\n      }\n      ret = this.__activityWithId.get(EJSON.stringify(select));\n      if (ret) {\n        ret = ret[activityId];\n      }\n    }\n    return ret;\n  }\n}\n\n// global Reactive MiniMongo Index Cache class to avoid big overhead while searching for the same data often again\n// This class calls 2 implementation, for server and client code\n//\n// having this class here has several advantages:\n// - The Programmer hasn't to care about in which context he call's this class\n// - having all queries together in 1 class to make it possible to see which queries in Wekan happens, e.g. with console.log\nReactiveMiniMongoIndex = {\n  getSubTasksWithParentId(parentId, addSelect = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveMiniMongoIndexServer.getSubTasksWithParentId(parentId, addSelect, options);\n    } else {\n      ret = ReactiveMiniMongoIndexClient.getSubTasksWithParentId(parentId, addSelect, options);\n    }\n    return ret;\n  },\n  getChecklistsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveMiniMongoIndexServer.getChecklistsWithCardId(cardId, addSelect, options);\n    } else {\n      ret = ReactiveMiniMongoIndexClient.getChecklistsWithCardId(cardId, addSelect, options);\n    }\n    return ret;\n  },\n  getChecklistItemsWithChecklistId(checklistId, addSelect = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveMiniMongoIndexServer.getChecklistItemsWithChecklistId(checklistId, addSelect, options);\n    } else {\n      ret = ReactiveMiniMongoIndexClient.getChecklistItemsWithChecklistId(checklistId, addSelect, options);\n    }\n    return ret;\n  },\n  getCardCommentsWithCardId(cardId, addSelect = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveMiniMongoIndexServer.getCardCommentsWithCardId(cardId, addSelect, options);\n    } else {\n      ret = ReactiveMiniMongoIndexClient.getCardCommentsWithCardId(cardId, addSelect, options);\n    }\n    return ret;\n  },\n  getActivityWithId(activityId, addSelect = {}, options = {}) {\n    let ret;\n    if (Meteor.isServer) {\n      ret = ReactiveMiniMongoIndexServer.getActivityWithId(activityId, addSelect, options);\n    } else {\n      ret = ReactiveMiniMongoIndexClient.getActivityWithId(activityId, addSelect, options);\n    }\n    return ret;\n  }\n}\n\nexport { ReactiveCache, ReactiveMiniMongoIndex };\n","import { TAPi18n } from '/imports/i18n';\n\nconst passwordField = AccountsTemplates.removeField('password');\nconst emailField = AccountsTemplates.removeField('email');\nlet disableRegistration = false;\nlet disableForgotPassword = false;\nlet passwordLoginEnabled = false;\nlet oidcRedirectionEnabled = false;\nlet oauthServerUrl = \"home\";\nlet oauthDashboardUrl = \"\";\n\nMeteor.call('isOidcRedirectionEnabled', (_, result) => {\n  if(result)\n  {\n    oidcRedirectionEnabled = true;\n  }\n});\n\nMeteor.call('isPasswordLoginEnabled', (_, result) => {\n  if (result) {\n    passwordLoginEnabled = true;\n  }\n});\n\nMeteor.call('getOauthServerUrl', (_, result) => {\n  if (result) {\n    oauthServerUrl = result;\n  }\n});\n\nMeteor.call('getOauthDashboardUrl', (_, result) => {\n  if (result) {\n    oauthDashboardUrl = result;\n  }\n});\n\nMeteor.call('isDisableRegistration', (_, result) => {\n  if (result) {\n    disableRegistration = true;\n    //console.log('disableRegistration');\n    //console.log(result);\n  }\n});\n\nMeteor.call('isDisableForgotPassword', (_, result) => {\n  if (result) {\n    disableForgotPassword = true;\n    //console.log('disableForgotPassword');\n    //console.log(result);\n  }\n});\n\nAccountsTemplates.addFields([\n  {\n    _id: 'username',\n    type: 'text',\n    displayName: 'username',\n    required: true,\n    minLength: 2,\n  },\n  emailField,\n  passwordField,\n  {\n    _id: 'invitationcode',\n    type: 'text',\n    displayName: 'Invitation Code',\n    required: false,\n    minLength: 6,\n    template: 'invitationCode',\n  },\n]);\n\nAccountsTemplates.configure({\n  defaultLayout: 'userFormsLayout',\n  defaultContentRegion: 'content',\n  confirmPassword: true,\n  enablePasswordChange: true,\n  sendVerificationEmail: true,\n  showForgotPasswordLink: !disableForgotPassword,\n  forbidClientAccountCreation: disableRegistration,\n  onLogoutHook() {\n    // here comeslogic for redirect\n    if(oidcRedirectionEnabled)\n    {\n      window.location = oauthServerUrl + oauthDashboardUrl;\n    }\n    else\n    {\n      const homePage = 'home';\n      if (FlowRouter.getRouteName() === homePage) {\n        FlowRouter.reload();\n      } else {\n        FlowRouter.go(homePage);\n      }\n    }\n  },\n});\n\nif (!disableForgotPassword) {\n  [\n    'forgotPwd',\n    'resetPwd',\n  ].forEach(routeName => AccountsTemplates.configureRoute(routeName));\n}\n\nif (!disableRegistration) {\n  [\n    'signUp',\n  ].forEach(routeName => AccountsTemplates.configureRoute(routeName));\n}\n\n[\n  'signIn',\n  'enrollAccount',\n].forEach(routeName => AccountsTemplates.configureRoute(routeName));\n\n// We display the form to change the password in a popup window that already\n// have a title, so we unset the title automatically displayed by useraccounts.\nAccountsTemplates.configure({\n  texts: {\n    title: {\n      changePwd: '',\n    },\n  },\n});\n\nAccountsTemplates.configureRoute('changePwd', {\n  redirect() {\n    // We should go back with the popup but we don't since user feedback about the change is within the popup only.\n    // Once we have a global feedback popup mechanism we can use that here and close with the following:\n    // Popup.back();\n  },\n});\n\nif (Meteor.isServer) {\n  [\n    'resetPassword-subject',\n    'resetPassword-text',\n    'verifyEmail-subject',\n    'verifyEmail-text',\n    'enrollAccount-subject',\n    'enrollAccount-text',\n  ].forEach(str => {\n    const [templateName, field] = str.split('-');\n    Accounts.emailTemplates[templateName][field] = (user, url) => {\n      return TAPi18n.__(\n        `email-${str}`,\n        {\n          url,\n          user: user.getName(),\n          siteName: Accounts.emailTemplates.siteName,\n        },\n        user.getLanguage(),\n      );\n    };\n  });\n}\n","export const ALLOWED_BOARD_COLORS = [\n  'belize',\n  'nephritis',\n  'pomegranate',\n  'pumpkin',\n  'wisteria',\n  'moderatepink',\n  'strongcyan',\n  'limegreen',\n  'midnight',\n  'dark',\n  'relax',\n  'corteza',\n  'clearblue',\n  'natural',\n  'modern',\n  'moderndark',\n  'exodark',\n  'cleandark',\n  'cleanlight',\n];\nexport const ALLOWED_COLORS = [\n  'white',\n  'green',\n  'yellow',\n  'orange',\n  'red',\n  'purple',\n  'blue',\n  'sky',\n  'lime',\n  'pink',\n  'black',\n  'silver',\n  'peachpuff',\n  'crimson',\n  'plum',\n  'darkgreen',\n  'slateblue',\n  'magenta',\n  'gold',\n  'navy',\n  'gray',\n  'saddlebrown',\n  'paleturquoise',\n  'mistyrose',\n  'indigo',\n];\nexport const TYPE_BOARD = 'board';\nexport const TYPE_CARD = 'cardType-card';\nexport const TYPE_LINKED_BOARD = 'cardType-linkedBoard';\nexport const TYPE_LINKED_CARD = 'cardType-linkedCard';\nexport const TYPE_TEMPLATE_BOARD = 'template-board';\nexport const TYPE_TEMPLATE_CONTAINER = 'template-container';\nexport const TYPE_TEMPLATE_CARD = 'template-card';\nexport const TYPE_TEMPLATE_LIST = 'template-list';\nexport const CARD_TYPES = [\n  TYPE_CARD,\n  TYPE_LINKED_CARD,\n  TYPE_LINKED_BOARD,\n  TYPE_TEMPLATE_CARD\n];\nexport const ALLOWED_WAIT_SPINNERS = [\n  'Bounce',\n  'Cube',\n  'Cube-Grid',\n  'Dot',\n  'Double-Bounce',\n  'Rotateplane',\n  'Scaleout',\n  'Wave'\n];\n","module.exports.models = {\n  connection: 'mongodb',\n  migrate: 'safe',\n};\n","import moment from 'moment/min/moment-with-locales';\nimport { TAPi18n } from '/imports/i18n';\nimport {\n  OPERATOR_ASSIGNEE,\n  OPERATOR_BOARD,\n  OPERATOR_COMMENT,\n  OPERATOR_CREATED_AT,\n  OPERATOR_CREATOR,\n  OPERATOR_DEBUG,\n  OPERATOR_DUE,\n  OPERATOR_HAS,\n  OPERATOR_LABEL,\n  OPERATOR_LIMIT,\n  OPERATOR_LIST,\n  OPERATOR_MEMBER,\n  OPERATOR_MODIFIED_AT,\n  OPERATOR_ORG,\n  OPERATOR_SORT,\n  OPERATOR_STATUS,\n  OPERATOR_SWIMLANE,\n  OPERATOR_TEAM,\n  OPERATOR_UNKNOWN,\n  OPERATOR_USER,\n  ORDER_ASCENDING,\n  ORDER_DESCENDING,\n  PREDICATE_ALL,\n  PREDICATE_ARCHIVED,\n  PREDICATE_ASSIGNEES,\n  PREDICATE_ATTACHMENT,\n  PREDICATE_CHECKLIST,\n  PREDICATE_CREATED_AT,\n  PREDICATE_DESCRIPTION,\n  PREDICATE_DUE_AT,\n  PREDICATE_END_AT,\n  PREDICATE_ENDED,\n  PREDICATE_MEMBERS,\n  PREDICATE_MODIFIED_AT,\n  PREDICATE_MONTH,\n  PREDICATE_OPEN,\n  PREDICATE_OVERDUE,\n  PREDICATE_PRIVATE,\n  PREDICATE_PROJECTION,\n  PREDICATE_PUBLIC,\n  PREDICATE_QUARTER,\n  PREDICATE_SELECTOR,\n  PREDICATE_START_AT,\n  PREDICATE_WEEK,\n  PREDICATE_YEAR,\n} from './search-const';\nimport Boards from '../models/boards';\n\nexport class QueryDebug {\n  predicate = null;\n\n  constructor(predicate) {\n    if (predicate) {\n      this.set(predicate)\n    }\n  }\n\n  get() {\n    return this.predicate;\n  }\n\n  set(predicate) {\n    if ([PREDICATE_ALL, PREDICATE_SELECTOR, PREDICATE_PROJECTION].includes(\n      predicate\n    )) {\n      this.predicate = predicate;\n    } else {\n      this.predicate = null;\n    }\n  }\n\n  show() {\n    return (this.predicate !== null);\n  }\n\n  showAll() {\n    return (this.predicate === PREDICATE_ALL);\n  }\n\n  showSelector() {\n    return (this.predicate === PREDICATE_ALL || this.predicate === PREDICATE_SELECTOR);\n  }\n\n  showProjection() {\n    return (this.predicate === PREDICATE_ALL || this.predicate === PREDICATE_PROJECTION);\n  }\n}\n\nexport class QueryParams {\n  text = '';\n\n  constructor(params = {}, text = '') {\n    this.params = params;\n    this.text = text;\n  }\n\n  hasOperator(operator) {\n    return (\n      this.params[operator] !== undefined &&\n      (this.params[operator].length === undefined ||\n        this.params[operator].length > 0)\n    );\n  }\n\n  addPredicate(operator, predicate) {\n    if (!this.hasOperator(operator)) {\n      this.params[operator] = [];\n    }\n    this.params[operator].push(predicate);\n  }\n\n  setPredicate(operator, predicate) {\n    this.params[operator] = predicate;\n  }\n\n  getPredicate(operator) {\n    if (this.hasOperator(operator)){\n      if (typeof this.params[operator] === 'object') {\n        return this.params[operator][0];\n      } else {\n        return this.params[operator];\n      }\n    }\n    return null;\n  }\n\n  getPredicates(operator) {\n    return this.params[operator];\n  }\n\n  getParams() {\n    return this.params;\n  }\n}\n\nexport class QueryErrors {\n  operatorTagMap = [\n    [OPERATOR_BOARD, 'board-title-not-found'],\n    [OPERATOR_SWIMLANE, 'swimlane-title-not-found'],\n    [\n      OPERATOR_LABEL,\n      label => {\n        if (Boards.labelColors().includes(label)) {\n          return {\n            tag: 'label-color-not-found',\n            value: label,\n            color: true,\n          };\n        } else {\n          return {\n            tag: 'label-not-found',\n            value: label,\n            color: false,\n          };\n        }\n      },\n    ],\n    [OPERATOR_LIST, 'list-title-not-found'],\n    [OPERATOR_COMMENT, 'comment-not-found'],\n    [OPERATOR_USER, 'user-username-not-found'],\n    [OPERATOR_ASSIGNEE, 'user-username-not-found'],\n    [OPERATOR_MEMBER, 'user-username-not-found'],\n    [OPERATOR_CREATOR, 'user-username-not-found'],\n    [OPERATOR_ORG, 'org-name-not-found'],\n    [OPERATOR_TEAM, 'team-name-not-found'],\n  ];\n\n  constructor() {\n    this._errors = {};\n\n    this.operatorTags = {};\n    this.operatorTagMap.forEach(([operator, tag]) => {\n      this.operatorTags[operator] = tag;\n    });\n\n    this.colorMap = Boards.colorMap();\n  }\n\n  addError(operator, error) {\n    if (!this._errors[operator]) {\n      this._errors[operator] = [];\n    }\n    this._errors[operator].push(error);\n  }\n\n  addNotFound(operator, value) {\n    if (typeof this.operatorTags[operator] === 'function') {\n      this.addError(operator, this.operatorTags[operator](value));\n    } else {\n      this.addError(operator, { tag: this.operatorTags[operator], value });\n    }\n  }\n\n  hasErrors() {\n    return Object.entries(this._errors).length > 0;\n  }\n\n  errors() {\n    const errs = [];\n    // eslint-disable-next-line no-unused-vars\n    Object.entries(this._errors).forEach(([, errors]) => {\n      errors.forEach(err => {\n        errs.push(err);\n      });\n    });\n    return errs;\n  }\n\n  errorMessages() {\n    const messages = [];\n    // eslint-disable-next-line no-unused-vars\n    Object.entries(this._errors).forEach(([, errors]) => {\n      errors.forEach(err => {\n        messages.push(TAPi18n.__(err.tag, err.value));\n      });\n    });\n    return messages;\n  }\n}\n\nexport class Query {\n  selector = {};\n  projection = {};\n\n  constructor(selector, projection) {\n    this._errors = new QueryErrors();\n    this.queryParams = new QueryParams();\n    this.colorMap = Boards.colorMap();\n\n    if (selector) {\n      this.selector = selector;\n    }\n\n    if (projection) {\n      this.projection = projection;\n    }\n  }\n\n  hasErrors() {\n    return this._errors.hasErrors();\n  }\n\n  errors() {\n    return this._errors.errors();\n  }\n\n  addError(operator, error) {\n    this._errors.addError(operator, error)\n  }\n\n  errorMessages() {\n    return this._errors.errorMessages();\n  }\n\n  getQueryParams() {\n    return this.queryParams;\n  }\n\n  setQueryParams(queryParams) {\n    this.queryParams = queryParams;\n  }\n\n  addPredicate(operator, predicate) {\n    this.queryParams.addPredicate(operator, predicate);\n  }\n\n  buildParams(queryText) {\n    this.queryParams = new QueryParams();\n\n    queryText = queryText.trim();\n    // eslint-disable-next-line no-console\n    //console.log('query:', query);\n\n    if (!queryText) {\n      return;\n    }\n\n    const reOperator1 = new RegExp(\n      '^((?<operator>[\\\\p{Letter}\\\\p{Mark}]+):|(?<abbrev>[#@]))(?<value>[\\\\p{Letter}\\\\p{Mark}]+)(\\\\s+|$)',\n      'iu',\n    );\n    const reOperator2 = new RegExp(\n      '^((?<operator>[\\\\p{Letter}\\\\p{Mark}]+):|(?<abbrev>[#@]))(?<quote>[\"\\']*)(?<value>.*?)\\\\k<quote>(\\\\s+|$)',\n      'iu',\n    );\n    const reText = new RegExp('^(?<text>\\\\S+)(\\\\s+|$)', 'u');\n    const reQuotedText = new RegExp(\n      '^(?<quote>[\"\\'])(?<text>.*?)\\\\k<quote>(\\\\s+|$)',\n      'u',\n    );\n    const reNegatedOperator = new RegExp('^-(?<operator>.*)$');\n\n    const operators = {\n      'operator-board': OPERATOR_BOARD,\n      'operator-board-abbrev': OPERATOR_BOARD,\n      'operator-swimlane': OPERATOR_SWIMLANE,\n      'operator-swimlane-abbrev': OPERATOR_SWIMLANE,\n      'operator-list': OPERATOR_LIST,\n      'operator-list-abbrev': OPERATOR_LIST,\n      'operator-label': OPERATOR_LABEL,\n      'operator-label-abbrev': OPERATOR_LABEL,\n      'operator-user': OPERATOR_USER,\n      'operator-user-abbrev': OPERATOR_USER,\n      'operator-member': OPERATOR_MEMBER,\n      'operator-member-abbrev': OPERATOR_MEMBER,\n      'operator-assignee': OPERATOR_ASSIGNEE,\n      'operator-creator': OPERATOR_CREATOR,\n      'operator-assignee-abbrev': OPERATOR_ASSIGNEE,\n      'operator-status': OPERATOR_STATUS,\n      'operator-due': OPERATOR_DUE,\n      'operator-created': OPERATOR_CREATED_AT,\n      'operator-modified': OPERATOR_MODIFIED_AT,\n      'operator-comment': OPERATOR_COMMENT,\n      'operator-has': OPERATOR_HAS,\n      'operator-sort': OPERATOR_SORT,\n      'operator-limit': OPERATOR_LIMIT,\n      'operator-debug': OPERATOR_DEBUG,\n      'operator-org': OPERATOR_ORG,\n      'operator-team': OPERATOR_TEAM,\n    };\n\n    const predicates = {\n      durations: {\n        'predicate-week': PREDICATE_WEEK,\n        'predicate-month': PREDICATE_MONTH,\n        'predicate-quarter': PREDICATE_QUARTER,\n        'predicate-year': PREDICATE_YEAR,\n      },\n    };\n    predicates[OPERATOR_DUE] = {\n      'predicate-overdue': PREDICATE_OVERDUE,\n    };\n    predicates[OPERATOR_STATUS] = {\n      'predicate-archived': PREDICATE_ARCHIVED,\n      'predicate-all': PREDICATE_ALL,\n      'predicate-open': PREDICATE_OPEN,\n      'predicate-ended': PREDICATE_ENDED,\n      'predicate-public': PREDICATE_PUBLIC,\n      'predicate-private': PREDICATE_PRIVATE,\n    };\n    predicates[OPERATOR_SORT] = {\n      'predicate-due': PREDICATE_DUE_AT,\n      'predicate-created': PREDICATE_CREATED_AT,\n      'predicate-modified': PREDICATE_MODIFIED_AT,\n    };\n    predicates[OPERATOR_HAS] = {\n      'predicate-description': PREDICATE_DESCRIPTION,\n      'predicate-checklist': PREDICATE_CHECKLIST,\n      'predicate-attachment': PREDICATE_ATTACHMENT,\n      'predicate-start': PREDICATE_START_AT,\n      'predicate-end': PREDICATE_END_AT,\n      'predicate-due': PREDICATE_DUE_AT,\n      'predicate-assignee': PREDICATE_ASSIGNEES,\n      'predicate-member': PREDICATE_MEMBERS,\n    };\n    predicates[OPERATOR_DEBUG] = {\n      'predicate-all': PREDICATE_ALL,\n      'predicate-selector': PREDICATE_SELECTOR,\n      'predicate-projection': PREDICATE_PROJECTION,\n    };\n\n    const predicateTranslations = {};\n    Object.entries(predicates).forEach(([category, catPreds]) => {\n      predicateTranslations[category] = {};\n      Object.entries(catPreds).forEach(([tag, value]) => {\n        predicateTranslations[category][TAPi18n.__(tag)] = value;\n      });\n    });\n    // eslint-disable-next-line no-console\n    // console.log('predicateTranslations:', predicateTranslations);\n\n    const operatorMap = {};\n    Object.entries(operators).forEach(([key, value]) => {\n      operatorMap[TAPi18n.__(key).toLowerCase()] = value;\n    });\n    // eslint-disable-next-line no-console\n    // console.log('operatorMap:', operatorMap);\n\n    let text = '';\n    while (queryText) {\n      let m = queryText.match(reOperator1);\n      if (!m) {\n        m = queryText.match(reOperator2);\n        if (m) {\n          queryText = queryText.replace(reOperator2, '');\n        }\n      } else {\n        queryText = queryText.replace(reOperator1, '');\n      }\n      if (m) {\n        let op;\n        if (m.groups.operator) {\n          op = m.groups.operator.toLowerCase();\n        } else {\n          op = m.groups.abbrev.toLowerCase();\n        }\n        // eslint-disable-next-line no-prototype-builtins\n        if (operatorMap.hasOwnProperty(op)) {\n          const operator = operatorMap[op];\n          let value = m.groups.value;\n          if (operator === OPERATOR_LABEL) {\n            if (value in this.colorMap) {\n              value = this.colorMap[value];\n              // console.log('found color:', value);\n            }\n          } else if (\n            [OPERATOR_DUE, OPERATOR_CREATED_AT, OPERATOR_MODIFIED_AT].includes(\n              operator,\n            )\n          ) {\n            const days = parseInt(value, 10);\n            let duration = null;\n            if (isNaN(days)) {\n              // duration was specified as text\n              if (predicateTranslations.durations[value]) {\n                duration = predicateTranslations.durations[value];\n                let date = null;\n                switch (duration) {\n                  case PREDICATE_WEEK:\n                    // eslint-disable-next-line no-case-declarations\n                    const week = moment().week();\n                    if (week === 52) {\n                      date = moment(1, 'W');\n                      date.set('year', date.year() + 1);\n                    } else {\n                      date = moment(week + 1, 'W');\n                    }\n                    break;\n                  case PREDICATE_MONTH:\n                    // eslint-disable-next-line no-case-declarations\n                    const month = moment().month();\n                    // .month() is zero indexed\n                    if (month === 11) {\n                      date = moment(1, 'M');\n                      date.set('year', date.year() + 1);\n                    } else {\n                      date = moment(month + 2, 'M');\n                    }\n                    break;\n                  case PREDICATE_QUARTER:\n                    // eslint-disable-next-line no-case-declarations\n                    const quarter = moment().quarter();\n                    if (quarter === 4) {\n                      date = moment(1, 'Q');\n                      date.set('year', date.year() + 1);\n                    } else {\n                      date = moment(quarter + 1, 'Q');\n                    }\n                    break;\n                  case PREDICATE_YEAR:\n                    date = moment(moment().year() + 1, 'YYYY');\n                    break;\n                }\n                if (date) {\n                  value = {\n                    operator: '$lt',\n                    value: date.format('YYYY-MM-DD'),\n                  };\n                }\n              } else if (\n                operator === OPERATOR_DUE &&\n                value === PREDICATE_OVERDUE\n              ) {\n                value = {\n                  operator: '$lt',\n                  value: moment().format('YYYY-MM-DD'),\n                };\n              } else {\n                this.addError(OPERATOR_DUE, {\n                  tag: 'operator-number-expected',\n                  value: { operator: op, value },\n                });\n                continue;\n              }\n            } else if (operator === OPERATOR_DUE) {\n              value = {\n                operator: '$lt',\n                value: moment(moment().format('YYYY-MM-DD'))\n                  .add(days + 1, duration ? duration : 'days')\n                  .format(),\n              };\n            } else {\n              value = {\n                operator: '$gte',\n                value: moment(moment().format('YYYY-MM-DD'))\n                  .subtract(days, duration ? duration : 'days')\n                  .format(),\n              };\n            }\n          } else if (operator === OPERATOR_SORT) {\n            let negated = false;\n            const m = value.match(reNegatedOperator);\n            if (m) {\n              value = m.groups.operator;\n              negated = true;\n            }\n            if (!predicateTranslations[OPERATOR_SORT][value]) {\n              this.addError(OPERATOR_SORT, {\n                tag: 'operator-sort-invalid',\n                value,\n              });\n              continue;\n            } else {\n              value = {\n                name: predicateTranslations[OPERATOR_SORT][value],\n                order: negated ? ORDER_DESCENDING : ORDER_ASCENDING,\n              };\n            }\n          } else if (operator === OPERATOR_STATUS) {\n            if (!predicateTranslations[OPERATOR_STATUS][value]) {\n              this.addError(OPERATOR_STATUS, {\n                tag: 'operator-status-invalid',\n                value,\n              });\n              continue;\n            } else {\n              value = predicateTranslations[OPERATOR_STATUS][value];\n            }\n          } else if (operator === OPERATOR_HAS) {\n            let negated = false;\n            const m = value.match(reNegatedOperator);\n            if (m) {\n              value = m.groups.operator;\n              negated = true;\n            }\n            if (!predicateTranslations[OPERATOR_HAS][value]) {\n              this.addError(OPERATOR_HAS, {\n                tag: 'operator-has-invalid',\n                value,\n              });\n              continue;\n            } else {\n              value = {\n                field: predicateTranslations[OPERATOR_HAS][value],\n                exists: !negated,\n              };\n            }\n          } else if (operator === OPERATOR_LIMIT) {\n            const limit = parseInt(value, 10);\n            if (isNaN(limit) || limit < 0) {\n              this.addError(OPERATOR_LIMIT, {\n                tag: 'operator-limit-invalid',\n                value,\n              });\n              continue;\n            } else if (limit == 0) {\n              // no limit\n              continue;\n            } else {\n              value = limit;\n            }\n          } else if (operator === OPERATOR_DEBUG) {\n            if (!predicateTranslations[OPERATOR_DEBUG][value]) {\n              this.addError(OPERATOR_DEBUG, {\n                tag: 'operator-debug-invalid',\n                value,\n              });\n              continue;\n            } else {\n              value = predicateTranslations[OPERATOR_DEBUG][value];\n            }\n          }\n\n          this.queryParams.addPredicate(operator, value);\n        } else {\n          this.addError(OPERATOR_UNKNOWN, {\n            tag: 'operator-unknown-error',\n            value: op,\n          });\n        }\n        continue;\n      }\n\n      m = queryText.match(reQuotedText);\n      if (!m) {\n        m = queryText.match(reText);\n        if (m) {\n          queryText = queryText.replace(reText, '');\n        }\n      } else {\n        queryText = queryText.replace(reQuotedText, '');\n      }\n      if (m) {\n        text += (text ? ' ' : '') + m.groups.text;\n      }\n    }\n\n    this.queryParams.text = text;\n\n    // eslint-disable-next-line no-console\n    if (this.queryParams.hasOperator(OPERATOR_DEBUG)) {\n      // eslint-disable-next-line no-console\n      console.log('text:', this.queryParams.text);\n      console.log('queryParams:', this.queryParams);\n    }\n  }\n}\n","import { TAPi18n } from '/imports/i18n';\n\nlet previousPath;\nFlowRouter.triggers.exit([\n  ({ path }) => {\n    previousPath = path;\n  },\n]);\n\nFlowRouter.route('/', {\n  name: 'home',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Session.set('currentBoard', null);\n    Session.set('currentList', null);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    EscapeActions.executeAll();\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'boardListHeaderBar',\n      content: 'boardList',\n    });\n  },\n});\n\nFlowRouter.route('/public', {\n  name: 'public',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Session.set('currentBoard', null);\n    Session.set('currentList', null);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    EscapeActions.executeAll();\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'boardListHeaderBar',\n      content: 'boardList',\n    });\n  },\n});\n\nFlowRouter.route('/accessibility', {\n  name: 'accessibility',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Session.set('currentBoard', null);\n    Session.set('currentList', null);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    EscapeActions.executeAll();\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'accessibilityHeaderBar',\n      content: 'accessibility',\n    });\n  },\n});\n\nFlowRouter.route('/b/:id/:slug', {\n  name: 'board',\n  action(params) {\n    const currentBoard = params.id;\n    const previousBoard = Session.get('currentBoard');\n    Session.set('currentBoard', currentBoard);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    // If we close a card, we'll execute again this route action but we don't\n    // want to excape every current actions (filters, etc.)\n    if (previousBoard !== currentBoard) {\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    } else {\n      EscapeActions.executeUpTo('popup-close');\n    }\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'boardHeaderBar',\n      content: 'board',\n    });\n  },\n});\n\nFlowRouter.route('/b/:boardId/:slug/:cardId', {\n  name: 'card',\n  action(params) {\n    EscapeActions.executeUpTo('inlinedForm');\n\n    Session.set('currentBoard', params.boardId);\n    Session.set('currentCard', params.cardId);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'boardHeaderBar',\n      content: 'board',\n    });\n  },\n});\n\nFlowRouter.route('/shortcuts', {\n  name: 'shortcuts',\n  action() {\n    const shortcutsTemplate = 'keyboardShortcuts';\n\n    EscapeActions.executeUpTo('popup-close');\n\n    if (previousPath) {\n      Modal.open(shortcutsTemplate, {\n        header: 'shortcutsModalTitle',\n        onCloseGoTo: previousPath,\n      });\n    } else {\n      BlazeLayout.render('defaultLayout', {\n        headerBar: 'shortcutsHeaderBar',\n        content: shortcutsTemplate,\n      });\n    }\n  },\n});\n\nFlowRouter.route('/b/templates', {\n  name: 'template-container',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Session.set('currentBoard', null);\n    Session.set('currentList', null);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    EscapeActions.executeAll();\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'boardListHeaderBar',\n      content: 'boardList',\n    });\n  },\n});\n\nFlowRouter.route('/my-cards', {\n  name: 'my-cards',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Filter.reset();\n    Session.set('sortBy', '');\n    // EscapeActions.executeAll();\n    EscapeActions.executeUpTo('popup-close');\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'myCardsHeaderBar',\n      content: 'myCards',\n    });\n    // }\n  },\n});\n\nFlowRouter.route('/due-cards', {\n  name: 'due-cards',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Filter.reset();\n    Session.set('sortBy', '');\n    // EscapeActions.executeAll();\n    EscapeActions.executeUpTo('popup-close');\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'dueCardsHeaderBar',\n      content: 'dueCards',\n    });\n    // }\n  },\n});\n\nFlowRouter.route('/global-search', {\n  name: 'global-search',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action() {\n    Filter.reset();\n    Session.set('sortBy', '');\n    // EscapeActions.executeAll();\n    EscapeActions.executeUpTo('popup-close');\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n    DocHead.setTitle(TAPi18n.__('globalSearch-title'));\n\n    if (FlowRouter.getQueryParam('q')) {\n      Session.set(\n        'globalQuery',\n        decodeURIComponent(FlowRouter.getQueryParam('q')),\n      );\n    }\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'globalSearchHeaderBar',\n      content: 'globalSearch',\n    });\n  },\n});\n\nFlowRouter.route('/broken-cards', {\n  name: 'broken-cards',\n  action() {\n    const brokenCardsTemplate = 'brokenCards';\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    // EscapeActions.executeAll();\n    EscapeActions.executeUpTo('popup-close');\n\n    Utils.manageCustomUI();\n    Utils.manageMatomo();\n\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'brokenCardsHeaderBar',\n      content: brokenCardsTemplate,\n    });\n  },\n});\n\nFlowRouter.route('/import/:source', {\n  name: 'import',\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action(params) {\n    if (Session.get('currentBoard')) {\n      Session.set('fromBoard', Session.get('currentBoard'));\n    }\n    Session.set('currentBoard', null);\n    Session.set('currentList', null);\n    Session.set('currentCard', null);\n    Session.set('popupCardId', null);\n    Session.set('popupCardBoardId', null);\n    Session.set('importSource', params.source);\n\n    Filter.reset();\n    Session.set('sortBy', '');\n    EscapeActions.executeAll();\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'importHeaderBar',\n      content: 'import',\n    });\n  },\n});\n\nFlowRouter.route('/setting', {\n  name: 'setting',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    Utils.manageCustomUI();\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'setting',\n    });\n  },\n});\n\nFlowRouter.route('/information', {\n  name: 'information',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'information',\n    });\n  },\n});\n\nFlowRouter.route('/people', {\n  name: 'people',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'people',\n    });\n  },\n});\n\nFlowRouter.route('/admin-reports', {\n  name: 'admin-reports',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'adminReports',\n    });\n  },\n});\n\nFlowRouter.route('/attachments', {\n  name: 'attachments',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'attachments',\n    });\n  },\n});\n\nFlowRouter.route('/translation', {\n  name: 'translation',\n  triggersEnter: [\n    AccountsTemplates.ensureSignedIn,\n    () => {\n      Session.set('currentBoard', null);\n      Session.set('currentList', null);\n      Session.set('currentCard', null);\n      Session.set('popupCardId', null);\n      Session.set('popupCardBoardId', null);\n\n      Filter.reset();\n      Session.set('sortBy', '');\n      EscapeActions.executeAll();\n    },\n  ],\n  action() {\n    BlazeLayout.render('defaultLayout', {\n      headerBar: 'settingHeaderBar',\n      content: 'translation',\n    });\n  },\n});\n\nFlowRouter.notFound = {\n  action() {\n    BlazeLayout.render('defaultLayout', { content: 'notFound' });\n  },\n};\n\n// We maintain a list of redirections to ensure that we don't break old URLs\n// when we change our routing scheme.\nconst redirections = {\n  '/boards': '/',\n  '/boards/:id/:slug': '/b/:id/:slug',\n  '/boards/:id/:slug/:cardId': '/b/:id/:slug/:cardId',\n  '/import': '/import/trello',\n};\n\n_.each(redirections, (newPath, oldPath) => {\n  FlowRouter.route(oldPath, {\n    triggersEnter: [\n      (context, redirect) => {\n        redirect(FlowRouter.path(newPath, context.params));\n      },\n    ],\n  });\n});\n\n// As it is not possible to use template helpers in the page <head> we create a\n// reactive function whose role is to set any page-specific tag in the <head>\n// using the `kadira:dochead` package. Currently we only use it to display the\n// board title if we are in a board page (see #364) but we may want to support\n// some <meta> tags in the future.\n//const appTitle = Utils.manageCustomUI();\n\n// XXX The `Meteor.startup` should not be necessary -- we don't need to wait for\n// the complete DOM to be ready to call `DocHead.setTitle`. But the problem is\n// that the global variable `Boards` is undefined when this file loads so we\n// wait a bit until hopefully all files are loaded. This will be fixed in a\n// clean way once Meteor will support ES6 modules -- hopefully in Meteor 1.3.\n//Meteor.isClient && Meteor.startup(() => {\n//  Tracker.autorun(() => {\n\n//    const currentBoard = Utils.getCurrentBoard();\n//    const titleStack = [appTitle];\n//    if (currentBoard) {\n//      titleStack.push(currentBoard.title);\n//    }\n//    DocHead.setTitle(titleStack.reverse().join(' - '));\n//  });\n//});\n","export const DEFAULT_LIMIT = 25;\nexport const OPERATOR_ASSIGNEE = 'assignees';\nexport const OPERATOR_COMMENT = 'comment';\nexport const OPERATOR_CREATED_AT = 'createdAt';\nexport const OPERATOR_CREATOR = 'userId';\nexport const OPERATOR_DEBUG = 'debug';\nexport const OPERATOR_DUE = 'dueAt';\nexport const OPERATOR_BOARD = 'board';\nexport const OPERATOR_HAS = 'has';\nexport const OPERATOR_LABEL = 'label';\nexport const OPERATOR_LIMIT = 'limit';\nexport const OPERATOR_LIST = 'list';\nexport const OPERATOR_MEMBER = 'members';\nexport const OPERATOR_MODIFIED_AT = 'modifiedAt';\nexport const OPERATOR_ORG = 'org';\nexport const OPERATOR_SORT = 'sort';\nexport const OPERATOR_STATUS = 'status';\nexport const OPERATOR_SWIMLANE = 'swimlane';\nexport const OPERATOR_TEAM = 'team';\nexport const OPERATOR_UNKNOWN = 'unknown';\nexport const OPERATOR_USER = 'user';\nexport const ORDER_ASCENDING = 'asc';\nexport const ORDER_DESCENDING = 'des';\nexport const PREDICATE_ALL = 'all';\nexport const PREDICATE_ARCHIVED = 'archived';\nexport const PREDICATE_ASSIGNEES = 'assignees';\nexport const PREDICATE_ATTACHMENT = 'attachment';\nexport const PREDICATE_CHECKLIST = 'checklist';\nexport const PREDICATE_CREATED_AT = 'createdAt';\nexport const PREDICATE_DESCRIPTION = 'description';\nexport const PREDICATE_DUE_AT = 'dueAt';\nexport const PREDICATE_END_AT = 'endAt';\nexport const PREDICATE_ENDED = 'ended';\nexport const PREDICATE_MEMBERS = 'members';\nexport const PREDICATE_MODIFIED_AT = 'modifiedAt';\nexport const PREDICATE_MONTH = 'month';\nexport const PREDICATE_OPEN = 'open';\nexport const PREDICATE_OVERDUE = 'overdue';\nexport const PREDICATE_PROJECTION = 'projection';\nexport const PREDICATE_PRIVATE = 'private';\nexport const PREDICATE_PUBLIC = 'public';\nexport const PREDICATE_QUARTER = 'quarter';\nexport const PREDICATE_SELECTOR = 'selector';\nexport const PREDICATE_START_AT = 'startAt';\nexport const PREDICATE_SYSTEM = 'system';\nexport const PREDICATE_WEEK = 'week';\nexport const PREDICATE_YEAR = 'year';\n","import { ReactiveCache } from '/imports/reactiveCache';\nimport { Meteor } from 'meteor/meteor';\nimport { Picker } from 'meteor/communitypackages:picker';\n\n// Sandstorm context is detected using the METEOR_SETTINGS environment variable\n// in the package definition.\nconst isSandstorm = Meteor.settings?.public?.sandstorm;\n\n// In sandstorm we only have one board per sandstorm instance. Since we want to\n// keep most of our code unchanged, we simply hard-code a board `_id` and\n// redirect the user to this particular board.\nconst sandstormBoard = {\n  _id: 'sandstorm',\n\n  // XXX Should be shared with the grain instance name.\n  title: 'Wekan',\n  slug: 'libreboard',\n  members: [],\n\n  // Board access security is handled by sandstorm, so in our point of view we\n  // can alway assume that the board is public (unauthorized users won't be able\n  // to access it anyway).\n  permission: 'public',\n};\n\nif (isSandstorm && Meteor.isServer) {\n  const fs = require('fs');\n  const Capnp = Npm.require('capnp');\n  const Package = Capnp.importSystem('sandstorm/package.capnp');\n  const Powerbox = Capnp.importSystem('sandstorm/powerbox.capnp');\n  const Identity = Capnp.importSystem('sandstorm/identity.capnp');\n  const SandstormHttpBridge = Capnp.importSystem(\n    'sandstorm/sandstorm-http-bridge.capnp',\n  ).SandstormHttpBridge;\n\n  let httpBridge = null;\n  let capnpConnection = null;\n\n  const bridgeConfig = Capnp.parse(\n    Package.BridgeConfig,\n    fs.readFileSync('/sandstorm-http-bridge-config'),\n  );\n\n  function getHttpBridge() {\n    if (!httpBridge) {\n      capnpConnection = Capnp.connect('unix:/tmp/sandstorm-api');\n      httpBridge = capnpConnection.restore(null, SandstormHttpBridge);\n    }\n    return httpBridge;\n  }\n\n  Meteor.methods({\n    sandstormClaimIdentityRequest(token, descriptor) {\n      check(token, String);\n      check(descriptor, String);\n\n      const parsedDescriptor = Capnp.parse(\n        Powerbox.PowerboxDescriptor,\n        Buffer.from(descriptor, 'base64'),\n        { packed: true },\n      );\n\n      const tag = Capnp.parse(\n        Identity.Identity.PowerboxTag,\n        parsedDescriptor.tags[0].value,\n      );\n      const permissions = [];\n      if (tag.permissions[1]) {\n        permissions.push('configure');\n      }\n\n      if (tag.permissions[0]) {\n        permissions.push('participate');\n      }\n\n      const sessionId = this.connection.sandstormSessionId();\n      const httpBridge = getHttpBridge();\n      const session = httpBridge.getSessionContext(sessionId).context;\n      const api = httpBridge.getSandstormApi(sessionId).api;\n\n      Meteor.wrapAsync(done => {\n        session\n          .claimRequest(token)\n          .then(response => {\n            const identity = response.cap.castAs(Identity.Identity);\n            const promises = [\n              api.getIdentityId(identity),\n              identity.getProfile(),\n              httpBridge.saveIdentity(identity),\n            ];\n            return Promise.all(promises).then(responses => {\n              const identityId = responses[0].id.toString('hex').slice(0, 32);\n              const profile = responses[1].profile;\n              return profile.picture.getUrl().then(response => {\n                const sandstormInfo = {\n                  id: identityId,\n                  name: profile.displayName.defaultText,\n                  permissions,\n                  picture: `${response.protocol}://${response.hostPath}`,\n                  preferredHandle: profile.preferredHandle,\n                  pronouns: profile.pronouns,\n                };\n\n                const login = Accounts.updateOrCreateUserFromExternalService(\n                  'sandstorm',\n                  sandstormInfo,\n                  { profile: { name: sandstormInfo.name } },\n                );\n\n                updateUserPermissions(login.userId, permissions);\n                done();\n              });\n            });\n          })\n          .catch(e => {\n            done(e, null);\n          });\n      })();\n    },\n  });\n\n  function reportActivity(sessionId, path, type, users, caption) {\n    const httpBridge = getHttpBridge();\n    const session = httpBridge.getSessionContext(sessionId).context;\n    Meteor.wrapAsync(done => {\n      return Promise.all(\n        users.map(user => {\n          return httpBridge\n            .getSavedIdentity(user.id)\n            .then(response => {\n              // Call getProfile() to make sure that the identity successfully resolves.\n              // (In C++ we would instead call whenResolved() here.)\n              const identity = response.identity;\n              return identity.getProfile().then(() => {\n                return {\n                  identity,\n                  mentioned: !!user.mentioned,\n                  subscribed: !!user.subscribed,\n                };\n              });\n            })\n            .catch(() => {\n              // Ignore identities that fail to restore. Either they were added before we set\n              // `saveIdentityCaps` to true, or they have lost access to the board.\n            });\n        }),\n      )\n        .then(maybeUsers => {\n          const users = maybeUsers.filter(u => !!u);\n          const event = { path, type, users };\n          if (caption) {\n            event.notification = { caption };\n          }\n\n          return session.activity(event);\n        })\n        .then(\n          () => done(),\n          e => done(e),\n        );\n    })();\n  }\n\n  Meteor.startup(() => {\n    Activities.after.insert((userId, doc) => {\n      // HACK: We need the connection that's making the request in order to read the\n      // Sandstorm session ID.\n      const invocation = DDP._CurrentInvocation.get(); // eslint-disable-line no-undef\n      if (invocation) {\n        const sessionId = invocation.connection.sandstormSessionId();\n\n        const eventTypes = bridgeConfig.viewInfo.eventTypes;\n\n        const defIdx = eventTypes.findIndex(\n          def => def.name === doc.activityType,\n        );\n        if (defIdx >= 0) {\n          const users = {};\n          function ensureUserListed(userId) {\n            if (!users[userId]) {\n              const user = Meteor.users.findOne(userId);\n              if (user) {\n                users[userId] = { id: user.services.sandstorm.id };\n              } else {\n                return false;\n              }\n            }\n            return true;\n          }\n\n          function mentionedUser(userId) {\n            if (ensureUserListed(userId)) {\n              users[userId].mentioned = true;\n            }\n          }\n\n          function subscribedUser(userId) {\n            if (ensureUserListed(userId)) {\n              users[userId].subscribed = true;\n            }\n          }\n\n          let path = '';\n          let caption = null;\n\n          if (doc.cardId) {\n            path = `b/sandstorm/libreboard/${doc.cardId}`;\n            ReactiveCache.getCard(doc.cardId).members.map(subscribedUser);\n          }\n\n          if (doc.memberId) {\n            mentionedUser(doc.memberId);\n          }\n\n          if (doc.activityType === 'addComment') {\n            const comment = ReactiveCache.getCardComment(doc.commentId);\n            caption = { defaultText: comment.text };\n            const activeMembers = _.pluck(\n              ReactiveCache.getBoard(sandstormBoard._id).activeMembers(),\n              'userId',\n            );\n            (comment.text.match(/\\B@([\\w.]*)/g) || []).forEach(username => {\n              const user = Meteor.users.findOne({\n                username: username.slice(1),\n              });\n              if (user && activeMembers.indexOf(user._id) !== -1) {\n                mentionedUser(user._id);\n              }\n            });\n          }\n\n          reportActivity(sessionId, path, defIdx, _.values(users), caption);\n        }\n      }\n    });\n  });\n\n  function updateUserPermissions(userId, permissions) {\n    const isActive = permissions.indexOf('participate') > -1;\n    const isAdmin = permissions.indexOf('configure') > -1;\n    const isCommentOnly = false;\n    const isNoComments = false;\n    const isWorker = false;\n    const permissionDoc = {\n      userId,\n      isActive,\n      isAdmin,\n      isNoComments,\n      isCommentOnly,\n      isWorker,\n    };\n\n    const boardMembers = ReactiveCache.getBoard(sandstormBoard._id).members;\n    const memberIndex = _.pluck(boardMembers, 'userId').indexOf(userId);\n\n    let modifier;\n    if (memberIndex > -1)\n      modifier = { $set: { [`members.${memberIndex}`]: permissionDoc } };\n    else if (!isActive) modifier = {};\n    else modifier = { $push: { members: permissionDoc } };\n\n    Boards.update(sandstormBoard._id, modifier);\n  }\n\n  Picker.route('/', (params, req, res) => {\n    // Redirect the user to the hard-coded board. On the first launch the user\n    // will be redirected to the board before its creation. But that's not a\n    // problem thanks to the reactive board publication. We used to do this\n    // redirection on the client side but that was sometimes visible on loading,\n    // and the home page was accessible by pressing the back button of the\n    // browser, a server-side redirection solves both of these issues.\n    //\n    // XXX Maybe the sandstorm http-bridge could provide some kind of \"home URL\"\n    // in the manifest?\n    const base = req.headers['x-sandstorm-base-path'];\n    const { _id, slug } = sandstormBoard;\n    const boardPath = FlowRouter.path('board', { id: _id, slug });\n\n    res.writeHead(301, {\n      Location: base + boardPath,\n    });\n    res.end();\n  });\n\n  // On the first launch of the instance a user is automatically created thanks\n  // to the `accounts-sandstorm` package. After its creation we insert the\n  // unique board document. Note that when the `Users.after.insert` hook is\n  // called, the user is inserted into the database but not connected. So\n  // despite the appearances `userId` is null in this block.\n  Users.after.insert((userId, doc) => {\n    if (!ReactiveCache.getBoard(sandstormBoard._id)) {\n      Boards.insert(sandstormBoard, { validate: false });\n      Swimlanes.insert({\n        title: 'Default',\n        boardId: sandstormBoard._id,\n      });\n      Activities.update(\n        { activityTypeId: sandstormBoard._id },\n        { $set: { userId: doc._id } },\n      );\n    }\n\n    // We rely on username uniqueness for the user mention feature, but\n    // Sandstorm doesn't enforce this property -- see #352. Our strategy to\n    // generate unique usernames from the Sandstorm `preferredHandle` is to\n    // append a number that we increment until we generate a username that no\n    // one already uses (eg, 'max', 'max1', 'max2').\n    function generateUniqueUsername(username, appendNumber) {\n      return username + String(appendNumber === 0 ? '' : appendNumber);\n    }\n\n    const username = doc.services.sandstorm.preferredHandle;\n    let appendNumber = 0;\n    while (\n      ReactiveCache.getUser({\n        _id: { $ne: doc._id },\n        username: generateUniqueUsername(username, appendNumber),\n      })\n    ) {\n      appendNumber += 1;\n    }\n\n    Users.update(doc._id, {\n      $set: {\n        username: generateUniqueUsername(username, appendNumber),\n        'profile.fullname': doc.services.sandstorm.name,\n        'profile.avatarUrl': doc.services.sandstorm.picture,\n      },\n    });\n\n    updateUserPermissions(doc._id, doc.services.sandstorm.permissions);\n  });\n\n  Meteor.startup(() => {\n    Users.find().observeChanges({\n      changed(userId, fields) {\n        const sandstormData = (fields.services || {}).sandstorm || {};\n        if (sandstormData.name) {\n          Users.update(userId, {\n            $set: { 'profile.fullname': sandstormData.name },\n          });\n        }\n\n        if (sandstormData.picture) {\n          Users.update(userId, {\n            $set: { 'profile.avatarUrl': sandstormData.picture },\n          });\n        }\n\n        if (sandstormData.permissions) {\n          updateUserPermissions(userId, sandstormData.permissions);\n        }\n      },\n    });\n  });\n\n  // Wekan v0.8 didn’t implement the Sandstorm sharing model and instead kept\n  // the visibility setting (“public” or “private”) in the UI as does the main\n  // Meteor application. We need to enforce “public” visibility as the sharing\n  // is now handled by Sandstorm.\n  // See https://github.com/wekan/wekan/issues/346\n  Migrations.add('enforce-public-visibility-for-sandstorm', () => {\n    Boards.update('sandstorm', { $set: { permission: 'public' } });\n  });\n\n  // Monkey patch to work around the problem described in\n  // https://github.com/sandstorm-io/meteor-accounts-sandstorm/pull/31\n  const _httpMethods = HTTP.methods;\n  HTTP.methods = newMethods => {\n    Object.keys(newMethods).forEach(key => {\n      if (newMethods[key].auth) {\n        newMethods[key].auth = function() {\n          const sandstormID = this.req.headers['x-sandstorm-user-id'];\n          const user = Meteor.users.findOne({\n            'services.sandstorm.id': sandstormID,\n          });\n          return user && user._id;\n        };\n      }\n    });\n    _httpMethods(newMethods);\n  };\n}\n\nif (isSandstorm && Meteor.isClient) {\n  let rpcCounter = 0;\n  const rpcs = {};\n\n  window.addEventListener('message', event => {\n    if (event.source === window) {\n      // Meteor likes to postmessage itself.\n      return;\n    }\n\n    if (\n      event.source !== window.parent ||\n      typeof event.data !== 'object' ||\n      typeof event.data.rpcId !== 'number'\n    ) {\n      throw new Error(`got unexpected postMessage: ${event}`);\n    }\n\n    const handler = rpcs[event.data.rpcId];\n    if (!handler) {\n      throw new Error(`no such rpc ID for event ${event}`);\n    }\n\n    delete rpcs[event.data.rpcId];\n    handler(event.data);\n  });\n\n  function sendRpc(name, message) {\n    const id = rpcCounter++;\n    message.rpcId = id;\n    const obj = {};\n    obj[name] = message;\n    window.parent.postMessage(obj, '*');\n    return new Promise((resolve, reject) => {\n      rpcs[id] = response => {\n        if (response.error) {\n          reject(new Error(response.error));\n        } else {\n          resolve(response);\n        }\n      };\n    });\n  }\n\n  const powerboxDescriptors = {\n    identity: 'EAhQAQEAABEBF1EEAQH_GN1RqXqYhMAAQAERAREBAQ',\n    // Generated using the following code:\n    //\n    // Capnp.serializePacked(\n    //  Powerbox.PowerboxDescriptor,\n    //  { tags: [ {\n    //    id: \"13872380404802116888\",\n    //    value: Capnp.serialize(Identity.PowerboxTag, { permissions: [true, false] })\n    //  }]}).toString('base64')\n    //      .replace(/\\//g, \"_\")\n    //      .replace(/\\+/g, \"-\");\n  };\n\n  function doRequest(serializedPowerboxDescriptor, onSuccess) {\n    return sendRpc('powerboxRequest', {\n      query: [serializedPowerboxDescriptor],\n    }).then(response => {\n      if (!response.canceled) {\n        onSuccess(response);\n      }\n    });\n  }\n\n  window.sandstormRequestIdentity = function() {\n    doRequest(powerboxDescriptors.identity, response => {\n      Meteor.call(\n        'sandstormClaimIdentityRequest',\n        response.token,\n        response.descriptor,\n      );\n    });\n  };\n\n  // Since the Sandstorm grain is displayed in an iframe of the Sandstorm shell,\n  // we need to explicitly expose meta data like the page title or the URL path\n  // so that they could appear in the browser window.\n  // See https://docs.sandstorm.io/en/latest/developing/path/\n  function updateSandstormMetaData(msg) {\n    return window.parent.postMessage(msg, '*');\n  }\n\n  FlowRouter.triggers.enter([\n    ({ path }) => {\n      updateSandstormMetaData({ setPath: path });\n    },\n  ]);\n\n  Tracker.autorun(() => {\n    updateSandstormMetaData({ setTitle: DocHead.getTitle() });\n  });\n\n  // Runtime redirection from the home page to the unique board -- since the\n  // home page contains a list of a single board it's not worth to display.\n  //\n  // XXX Hack. The home route is already defined at this point so we need to\n  // add the redirection trigger to the internal route object.\n  //FlowRouter._routesMap.home._triggersEnter.push((context, redirect) => {\n  //  redirect(FlowRouter.path('board', {\n  //    id: sandstormBoard._id,\n  //    slug: sandstormBoard.slug,\n  //  }));\n  //});\n\n  // XXX Hack. `Meteor.absoluteUrl` doesn't work in Sandstorm, since every\n  // session has a different URL whereas Meteor computes absoluteUrl based on\n  // the ROOT_URL environment variable. So we overwrite this function on a\n  // sandstorm client to return relative paths instead of absolutes.\n  const _absoluteUrl = Meteor.absoluteUrl;\n  const _defaultOptions = Meteor.absoluteUrl.defaultOptions;\n  Meteor.absoluteUrl = (path, options) => {\n    const url = _absoluteUrl(path, options);\n    return url.replace(/^https?:\\/\\/127\\.0\\.0\\.1:[0-9]{2,5}/, '');\n  };\n  Meteor.absoluteUrl.defaultOptions = _defaultOptions;\n\n  // XXX Hack to fix https://github.com/wefork/wekan/issues/27\n  // Sandstorm Wekan instances only ever have a single board, so there is no need\n  // to cache per-board subscriptions.\n  //SubsManager.prototype.subscribe = function(...params) {\n  //  return Meteor.subscribe(...params);\n  //};\n}\n\n// We use this blaze helper in the UI to hide some templates that does not make\n// sense in the context of sandstorm, like board staring, board archiving, user\n// name edition, etc.\nBlaze.registerHelper('isSandstorm', isSandstorm);\n"]}