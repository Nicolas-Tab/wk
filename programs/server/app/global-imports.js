/* Imports for global scope */

ECMAScript = Package.ecmascript.ECMAScript;
PublishRelations = Package['cottz:publish-relations'].PublishRelations;
Migrations = Package['idmontie:migrations'].Migrations;
EasySearch = Package['easy:search'].EasySearch;
MongoInternals = Package.mongo.MongoInternals;
Mongo = Package.mongo.Mongo;
AccountsTemplates = Package['useraccounts:core'].AccountsTemplates;
T9n = Package['useraccounts:core'].T9n;
Oidc = Package['wekan-oidc'].Oidc;
check = Package.check.check;
Match = Package.check.Match;
Random = Package.random.Random;
ReactiveDict = Package['reactive-dict'].ReactiveDict;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
_ = Package.underscore._;
FlowRouterHelpers = Package['arillo:flow-router-helpers'].FlowRouterHelpers;
DocHead = Package['kadira:dochead'].DocHead;
getSlug = Package['ongoworks:speakingurl'].getSlug;
Helpers = Package['raix:handlebar-helpers'].Helpers;
HTTP = Package.http.HTTP;
HTTPInternals = Package.http.HTTPInternals;
ReactiveVar = Package['reactive-var'].ReactiveVar;
Mousetrap = Package['mousetrap:mousetrap'].Mousetrap;
Email = Package.email.Email;
EmailInternals = Package.email.EmailInternals;
SubsManager = Package['meteorhacks:subs-manager'].SubsManager;
Markdown = Package['wekan-markdown'].Markdown;
incrementCounter = Package['konecty:mongo-counter'].incrementCounter;
decrementCounter = Package['konecty:mongo-counter'].decrementCounter;
setCounter = Package['konecty:mongo-counter'].setCounter;
SyncedCron = Package['percolate:synced-cron'].SyncedCron;
FilesCollection = Package['ostrio:files'].FilesCollection;
PDFDocument = Package['pascoual:pdfkit'].PDFDocument;
SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;
MongoObject = Package['aldeed:simple-schema'].MongoObject;
CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;
JsonRoutes = Package['simple:json-routes'].JsonRoutes;
RestMiddleware = Package['simple:json-routes'].RestMiddleware;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
Spacebars = Package.spacebars.Spacebars;
ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;
CssTools = Package['minifier-css'].CssTools;
Blaze = Package.blaze.Blaze;
UI = Package.blaze.UI;
Handlebars = Package.blaze.Handlebars;
BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;
Template = Package['peerlibrary:blaze-components'].Template;
BlazeComponent = Package['peerlibrary:blaze-components'].BlazeComponent;
BlazeComponentDebug = Package['peerlibrary:blaze-components'].BlazeComponentDebug;
EJSON = Package.ejson.EJSON;
Log = Package.logging.Log;
moment = Package['momentjs:moment'].moment;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
WebApp = Package.webapp.WebApp;
WebAppInternals = Package.webapp.WebAppInternals;
main = Package.webapp.main;
DDP = Package['ddp-client'].DDP;
DDPServer = Package['ddp-server'].DDPServer;
meteorInstall = Package.modules.meteorInstall;
Promise = Package.promise.Promise;
Collection2 = Package['aldeed:collection2-core'].Collection2;
Accounts = Package['accounts-base'].Accounts;
ActiveRoute = Package['zimme:active-route'].ActiveRoute;
HTML = Package.htmljs.HTML;
Autoupdate = Package.autoupdate.Autoupdate;

